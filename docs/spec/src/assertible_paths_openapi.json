{
  "info": {
    "title": "DHIS2 API",
    "version": "2.31"
  },
  "openapi": "3.0.1",
  "paths": {
    "/analyticsTableHooks": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "analyticsTableHooks": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/analyticsTableHook"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list analyticsTableHooks [DRAFT]",
        "tags": [
          "analyticsTableHooks"
        ]
      }
    },
    "/analyticsTableHooks/{id}": {
      "get": {
        "operationId": "getAnalyticsTableHook",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/analyticsTableHook"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "AnalyticsTableHook with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a analyticsTableHook by ID [DRAFT]",
        "tags": [
          "analyticsTableHooks"
        ]
      }
    },
    "/attributes": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "attributes": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/attribute"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list attributes [DRAFT]",
        "tags": [
          "attributes"
        ]
      }
    },
    "/attributes/{id}": {
      "get": {
        "operationId": "getAttribute",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/attribute"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Attribute with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a attribute by ID [DRAFT]",
        "tags": [
          "attributes"
        ]
      }
    },
    "/categories": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "categories": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/category"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list categories [DRAFT]",
        "tags": [
          "categories"
        ]
      }
    },
    "/categories/{id}": {
      "get": {
        "operationId": "getCategory",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/category"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Category with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a category by ID [DRAFT]",
        "tags": [
          "categories"
        ]
      }
    },
    "/categoryCombos": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "categoryCombos": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/categoryCombo"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list categoryCombos [DRAFT]",
        "tags": [
          "categoryCombos"
        ]
      }
    },
    "/categoryCombos/{id}": {
      "get": {
        "operationId": "getCategoryCombo",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/categoryCombo"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "CategoryCombo with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a categoryCombo by ID [DRAFT]",
        "tags": [
          "categoryCombos"
        ]
      }
    },
    "/categoryOptionCombos": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "categoryOptionCombos": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/categoryOptionCombo"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list categoryOptionCombos [DRAFT]",
        "tags": [
          "categoryOptionCombos"
        ]
      }
    },
    "/categoryOptionCombos/{id}": {
      "get": {
        "operationId": "getCategoryOptionCombo",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/categoryOptionCombo"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "CategoryOptionCombo with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a categoryOptionCombo by ID [DRAFT]",
        "tags": [
          "categoryOptionCombos"
        ]
      }
    },
    "/categoryOptionGroupSets": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "categoryOptionGroupSets": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/categoryOptionGroupSet"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list categoryOptionGroupSets [DRAFT]",
        "tags": [
          "categoryOptionGroupSets"
        ]
      }
    },
    "/categoryOptionGroupSets/{id}": {
      "get": {
        "operationId": "getCategoryOptionGroupSet",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/categoryOptionGroupSet"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "CategoryOptionGroupSet with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a categoryOptionGroupSet by ID [DRAFT]",
        "tags": [
          "categoryOptionGroupSets"
        ]
      }
    },
    "/categoryOptionGroups": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "categoryOptionGroups": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/categoryOptionGroup"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list categoryOptionGroups [DRAFT]",
        "tags": [
          "categoryOptionGroups"
        ]
      }
    },
    "/categoryOptionGroups/{id}": {
      "get": {
        "operationId": "getCategoryOptionGroup",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/categoryOptionGroup"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "CategoryOptionGroup with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a categoryOptionGroup by ID [DRAFT]",
        "tags": [
          "categoryOptionGroups"
        ]
      }
    },
    "/categoryOptions": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "categoryOptions": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/categoryOption"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list categoryOptions [DRAFT]",
        "tags": [
          "categoryOptions"
        ]
      }
    },
    "/categoryOptions/{id}": {
      "get": {
        "operationId": "getCategoryOption",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/categoryOption"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "CategoryOption with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a categoryOption by ID [DRAFT]",
        "tags": [
          "categoryOptions"
        ]
      }
    },
    "/charts": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "charts": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/chart"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list charts [DRAFT]",
        "tags": [
          "charts"
        ]
      }
    },
    "/charts/{id}": {
      "get": {
        "operationId": "getChart",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/chart"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Chart with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a chart by ID [DRAFT]",
        "tags": [
          "charts"
        ]
      }
    },
    "/colorSets": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "colorSets": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/colorSet"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list colorSets [DRAFT]",
        "tags": [
          "colorSets"
        ]
      }
    },
    "/colorSets/{id}": {
      "get": {
        "operationId": "getColorSet",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/colorSet"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ColorSet with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a colorSet by ID [DRAFT]",
        "tags": [
          "colorSets"
        ]
      }
    },
    "/constants": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "constants": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/constant"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    }
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list constants [DRAFT]",
        "tags": [
          "constants"
        ]
      }
    },
    "/constants/{id}": {
      "get": {
        "operationId": "getConstant",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/constant"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Constant with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a constant by ID [DRAFT]",
        "tags": [
          "constants"
        ]
      }
    },
    "/dashboardItems": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "dashboardItems": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/dashboardItem"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list dashboardItems [DRAFT]",
        "tags": [
          "dashboardItems"
        ]
      }
    },
    "/dashboardItems/{id}": {
      "get": {
        "operationId": "getDashboardItem",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/dashboardItem"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "DashboardItem with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a dashboardItem by ID [DRAFT]",
        "tags": [
          "dashboardItems"
        ]
      }
    },
    "/dashboards": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "dashboards": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/dashboard"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list dashboards [DRAFT]",
        "tags": [
          "dashboards"
        ]
      }
    },
    "/dashboards/{id}": {
      "get": {
        "operationId": "getDashboard",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/dashboard"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Dashboard with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a dashboard by ID [DRAFT]",
        "tags": [
          "dashboards"
        ]
      }
    },
    "/dataApprovalLevels": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "dataApprovalLevels": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/dataApprovalLevel"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list dataApprovalLevels [DRAFT]",
        "tags": [
          "dataApprovalLevels"
        ]
      }
    },
    "/dataApprovalLevels/{id}": {
      "get": {
        "operationId": "getDataApprovalLevel",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/dataApprovalLevel"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "DataApprovalLevel with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a dataApprovalLevel by ID [DRAFT]",
        "tags": [
          "dataApprovalLevels"
        ]
      }
    },
    "/dataApprovalWorkflows": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "dataApprovalWorkflows": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/dataApprovalWorkflow"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list dataApprovalWorkflows [DRAFT]",
        "tags": [
          "dataApprovalWorkflows"
        ]
      }
    },
    "/dataApprovalWorkflows/{id}": {
      "get": {
        "operationId": "getDataApprovalWorkflow",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/dataApprovalWorkflow"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "DataApprovalWorkflow with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a dataApprovalWorkflow by ID [DRAFT]",
        "tags": [
          "dataApprovalWorkflows"
        ]
      }
    },
    "/dataElementGroupSets": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "dataElementGroupSets": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/dataElementGroupSet"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list dataElementGroupSets [DRAFT]",
        "tags": [
          "dataElementGroupSets"
        ]
      }
    },
    "/dataElementGroupSets/{id}": {
      "get": {
        "operationId": "getDataElementGroupSet",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/dataElementGroupSet"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "DataElementGroupSet with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a dataElementGroupSet by ID [DRAFT]",
        "tags": [
          "dataElementGroupSets"
        ]
      }
    },
    "/dataElementGroups": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "dataElementGroups": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/dataElementGroup"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list dataElementGroups [DRAFT]",
        "tags": [
          "dataElementGroups"
        ]
      }
    },
    "/dataElementGroups/{id}": {
      "get": {
        "operationId": "getDataElementGroup",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/dataElementGroup"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "DataElementGroup with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a dataElementGroup by ID [DRAFT]",
        "tags": [
          "dataElementGroups"
        ]
      }
    },
    "/dataElementOperands": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "dataElementOperands": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/dataElementOperand"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list dataElementOperands [DRAFT]",
        "tags": [
          "dataElementOperands"
        ]
      }
    },
    "/dataElementOperands/{id}": {
      "get": {
        "operationId": "getDataElementOperand",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/dataElementOperand"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "DataElementOperand with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a dataElementOperand by ID [DRAFT]",
        "tags": [
          "dataElementOperands"
        ]
      }
    },
    "/dataElements": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "dataElements": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/dataElement"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list dataElements [DRAFT]",
        "tags": [
          "dataElements"
        ]
      }
    },
    "/dataElements/{id}": {
      "get": {
        "operationId": "getDataElement",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/dataElement"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "DataElement with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a dataElement by ID [DRAFT]",
        "tags": [
          "dataElements"
        ]
      }
    },
    "/dataEntryForms": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "dataEntryForms": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/dataEntryForm"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list dataEntryForms [DRAFT]",
        "tags": [
          "dataEntryForms"
        ]
      }
    },
    "/dataEntryForms/{id}": {
      "get": {
        "operationId": "getDataEntryForm",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/dataEntryForm"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "DataEntryForm with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a dataEntryForm by ID [DRAFT]",
        "tags": [
          "dataEntryForms"
        ]
      }
    },
    "/dataSetNotificationTemplates": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "dataSetNotificationTemplates": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/dataSetNotificationTemplate"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list dataSetNotificationTemplates [DRAFT]",
        "tags": [
          "dataSetNotificationTemplates"
        ]
      }
    },
    "/dataSetNotificationTemplates/{id}": {
      "get": {
        "operationId": "getDataSetNotificationTemplate",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/dataSetNotificationTemplate"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "DataSetNotificationTemplate with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a dataSetNotificationTemplate by ID [DRAFT]",
        "tags": [
          "dataSetNotificationTemplates"
        ]
      }
    },
    "/dataSets": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "dataSets": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/dataSet"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list dataSets [DRAFT]",
        "tags": [
          "dataSets"
        ]
      }
    },
    "/dataSets/{id}": {
      "get": {
        "operationId": "getDataSet",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/dataSet"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "DataSet with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a dataSet by ID [DRAFT]",
        "tags": [
          "dataSets"
        ]
      }
    },
    "/documents": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "documents": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/document"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list documents [DRAFT]",
        "tags": [
          "documents"
        ]
      }
    },
    "/documents/{id}": {
      "get": {
        "operationId": "getDocument",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/document"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Document with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a document by ID [DRAFT]",
        "tags": [
          "documents"
        ]
      }
    },
    "/eventCharts": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "eventCharts": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/eventChart"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list eventCharts [DRAFT]",
        "tags": [
          "eventCharts"
        ]
      }
    },
    "/eventCharts/{id}": {
      "get": {
        "operationId": "getEventChart",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/eventChart"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "EventChart with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a eventChart by ID [DRAFT]",
        "tags": [
          "eventCharts"
        ]
      }
    },
    "/eventReports": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "eventReports": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/eventReport"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list eventReports [DRAFT]",
        "tags": [
          "eventReports"
        ]
      }
    },
    "/eventReports/{id}": {
      "get": {
        "operationId": "getEventReport",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/eventReport"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "EventReport with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a eventReport by ID [DRAFT]",
        "tags": [
          "eventReports"
        ]
      }
    },
    "/externalMapLayers": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "externalMapLayers": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/externalMapLayer"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list externalMapLayers [DRAFT]",
        "tags": [
          "externalMapLayers"
        ]
      }
    },
    "/externalMapLayers/{id}": {
      "get": {
        "operationId": "getExternalMapLayer",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/externalMapLayer"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ExternalMapLayer with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a externalMapLayer by ID [DRAFT]",
        "tags": [
          "externalMapLayers"
        ]
      }
    },
    "/indicatorGroupSets": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "indicatorGroupSets": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/indicatorGroupSet"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list indicatorGroupSets [DRAFT]",
        "tags": [
          "indicatorGroupSets"
        ]
      }
    },
    "/indicatorGroupSets/{id}": {
      "get": {
        "operationId": "getIndicatorGroupSet",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/indicatorGroupSet"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "IndicatorGroupSet with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a indicatorGroupSet by ID [DRAFT]",
        "tags": [
          "indicatorGroupSets"
        ]
      }
    },
    "/indicatorGroups": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "indicatorGroups": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/indicatorGroup"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list indicatorGroups [DRAFT]",
        "tags": [
          "indicatorGroups"
        ]
      }
    },
    "/indicatorGroups/{id}": {
      "get": {
        "operationId": "getIndicatorGroup",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/indicatorGroup"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "IndicatorGroup with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a indicatorGroup by ID [DRAFT]",
        "tags": [
          "indicatorGroups"
        ]
      }
    },
    "/indicatorTypes": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "indicatorTypes": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/indicatorType"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list indicatorTypes [DRAFT]",
        "tags": [
          "indicatorTypes"
        ]
      }
    },
    "/indicatorTypes/{id}": {
      "get": {
        "operationId": "getIndicatorType",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/indicatorType"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "IndicatorType with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a indicatorType by ID [DRAFT]",
        "tags": [
          "indicatorTypes"
        ]
      }
    },
    "/indicators": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "indicators": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/indicator"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list indicators [DRAFT]",
        "tags": [
          "indicators"
        ]
      }
    },
    "/indicators/{id}": {
      "get": {
        "operationId": "getIndicator",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/indicator"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Indicator with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a indicator by ID [DRAFT]",
        "tags": [
          "indicators"
        ]
      }
    },
    "/interpretations": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "interpretations": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/interpretation"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list interpretations [DRAFT]",
        "tags": [
          "interpretations"
        ]
      }
    },
    "/interpretations/{id}": {
      "get": {
        "operationId": "getInterpretation",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/interpretation"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Interpretation with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a interpretation by ID [DRAFT]",
        "tags": [
          "interpretations"
        ]
      }
    },
    "/jobConfigurations": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "jobConfigurations": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/jobConfiguration"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list jobConfigurations [DRAFT]",
        "tags": [
          "jobConfigurations"
        ]
      }
    },
    "/jobConfigurations/{id}": {
      "get": {
        "operationId": "getJobConfiguration",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/jobConfiguration"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "JobConfiguration with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a jobConfiguration by ID [DRAFT]",
        "tags": [
          "jobConfigurations"
        ]
      }
    },
    "/legendSets": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "legendSets": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/legendSet"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list legendSets [DRAFT]",
        "tags": [
          "legendSets"
        ]
      }
    },
    "/legendSets/{id}": {
      "get": {
        "operationId": "getLegendSet",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/legendSet"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "LegendSet with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a legendSet by ID [DRAFT]",
        "tags": [
          "legendSets"
        ]
      }
    },
    "/mapViews": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "mapViews": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/mapView"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list mapViews [DRAFT]",
        "tags": [
          "mapViews"
        ]
      }
    },
    "/mapViews/{id}": {
      "get": {
        "operationId": "getMapView",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/mapView"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "MapView with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a mapView by ID [DRAFT]",
        "tags": [
          "mapViews"
        ]
      }
    },
    "/maps": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "maps": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/map"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list maps [DRAFT]",
        "tags": [
          "maps"
        ]
      }
    },
    "/maps/{id}": {
      "get": {
        "operationId": "getMap",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/map"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Map with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a map by ID [DRAFT]",
        "tags": [
          "maps"
        ]
      }
    },
    "/messageConversations": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "messageConversations": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/messageConversation"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list messageConversations [DRAFT]",
        "tags": [
          "messageConversations"
        ]
      }
    },
    "/messageConversations/{id}": {
      "get": {
        "operationId": "getMessageConversation",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/messageConversation"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "MessageConversation with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a messageConversation by ID [DRAFT]",
        "tags": [
          "messageConversations"
        ]
      }
    },
    "/metadata/version": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata/version": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/version"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list metadata/version [DRAFT]",
        "tags": [
          "metadata"
        ]
      }
    },
    "/metadata/{id}": {
      "get": {
        "operationId": "getMetadata",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/metadata"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Metadata with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a metadata by ID [DRAFT]",
        "tags": [
          "metadata"
        ]
      }
    },
    "/minMaxDataElements": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "minMaxDataElements": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/minMaxDataElement"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list minMaxDataElements [DRAFT]",
        "tags": [
          "minMaxDataElements"
        ]
      }
    },
    "/minMaxDataElements/{id}": {
      "get": {
        "operationId": "getMinMaxDataElement",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/minMaxDataElement"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "MinMaxDataElement with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a minMaxDataElement by ID [DRAFT]",
        "tags": [
          "minMaxDataElements"
        ]
      }
    },
    "/oAuth2Clients": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "oAuth2Clients": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/oAuth2Client"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list oAuth2Clients [DRAFT]",
        "tags": [
          "oAuth2Clients"
        ]
      }
    },
    "/oAuth2Clients/{id}": {
      "get": {
        "operationId": "getOAuth2Client",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/oAuth2Client"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "OAuth2Client with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a oAuth2Client by ID [DRAFT]",
        "tags": [
          "oAuth2Clients"
        ]
      }
    },
    "/optionGroupSets": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "optionGroupSets": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/optionGroupSet"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list optionGroupSets [DRAFT]",
        "tags": [
          "optionGroupSets"
        ]
      }
    },
    "/optionGroupSets/{id}": {
      "get": {
        "operationId": "getOptionGroupSet",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/optionGroupSet"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "OptionGroupSet with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a optionGroupSet by ID [DRAFT]",
        "tags": [
          "optionGroupSets"
        ]
      }
    },
    "/optionGroups": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "optionGroups": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/optionGroup"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list optionGroups [DRAFT]",
        "tags": [
          "optionGroups"
        ]
      }
    },
    "/optionGroups/{id}": {
      "get": {
        "operationId": "getOptionGroup",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/optionGroup"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "OptionGroup with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a optionGroup by ID [DRAFT]",
        "tags": [
          "optionGroups"
        ]
      }
    },
    "/optionSets": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "optionSets": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/optionSet"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list optionSets [DRAFT]",
        "tags": [
          "optionSets"
        ]
      }
    },
    "/optionSets/{id}": {
      "get": {
        "operationId": "getOptionSet",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/optionSet"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "OptionSet with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a optionSet by ID [DRAFT]",
        "tags": [
          "optionSets"
        ]
      }
    },
    "/options": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "options": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/option"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list options [DRAFT]",
        "tags": [
          "options"
        ]
      }
    },
    "/options/{id}": {
      "get": {
        "operationId": "getOption",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/option"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Option with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a option by ID [DRAFT]",
        "tags": [
          "options"
        ]
      }
    },
    "/organisationUnitGroupSets": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "organisationUnitGroupSets": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/organisationUnitGroupSet"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list organisationUnitGroupSets [DRAFT]",
        "tags": [
          "organisationUnitGroupSets"
        ]
      }
    },
    "/organisationUnitGroupSets/{id}": {
      "get": {
        "operationId": "getOrganisationUnitGroupSet",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/organisationUnitGroupSet"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "OrganisationUnitGroupSet with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a organisationUnitGroupSet by ID [DRAFT]",
        "tags": [
          "organisationUnitGroupSets"
        ]
      }
    },
    "/organisationUnitGroups": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "organisationUnitGroups": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/organisationUnitGroup"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list organisationUnitGroups [DRAFT]",
        "tags": [
          "organisationUnitGroups"
        ]
      }
    },
    "/organisationUnitGroups/{id}": {
      "get": {
        "operationId": "getOrganisationUnitGroup",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/organisationUnitGroup"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "OrganisationUnitGroup with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a organisationUnitGroup by ID [DRAFT]",
        "tags": [
          "organisationUnitGroups"
        ]
      }
    },
    "/organisationUnitLevels": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "organisationUnitLevels": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/organisationUnitLevel"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list organisationUnitLevels [DRAFT]",
        "tags": [
          "organisationUnitLevels"
        ]
      }
    },
    "/organisationUnitLevels/{id}": {
      "get": {
        "operationId": "getOrganisationUnitLevel",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/organisationUnitLevel"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "OrganisationUnitLevel with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a organisationUnitLevel by ID [DRAFT]",
        "tags": [
          "organisationUnitLevels"
        ]
      }
    },
    "/organisationUnits": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "organisationUnits": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/organisationUnit"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list organisationUnits [DRAFT]",
        "tags": [
          "organisationUnits"
        ]
      }
    },
    "/organisationUnits/{id}": {
      "get": {
        "operationId": "getOrganisationUnit",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/organisationUnit"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "OrganisationUnit with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a organisationUnit by ID [DRAFT]",
        "tags": [
          "organisationUnits"
        ]
      }
    },
    "/predictors": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    },
                    "predictors": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/predictor"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list predictors [DRAFT]",
        "tags": [
          "predictors"
        ]
      }
    },
    "/predictors/{id}": {
      "get": {
        "operationId": "getPredictor",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/predictor"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Predictor with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a predictor by ID [DRAFT]",
        "tags": [
          "predictors"
        ]
      }
    },
    "/programDataElements": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    },
                    "programDataElements": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/programDataElement"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list programDataElements [DRAFT]",
        "tags": [
          "programDataElements"
        ]
      }
    },
    "/programDataElements/{id}": {
      "get": {
        "operationId": "getProgramDataElement",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/programDataElement"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ProgramDataElement with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a programDataElement by ID [DRAFT]",
        "tags": [
          "programDataElements"
        ]
      }
    },
    "/programIndicatorGroups": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    },
                    "programIndicatorGroups": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/programIndicatorGroup"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list programIndicatorGroups [DRAFT]",
        "tags": [
          "programIndicatorGroups"
        ]
      }
    },
    "/programIndicatorGroups/{id}": {
      "get": {
        "operationId": "getProgramIndicatorGroup",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/programIndicatorGroup"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ProgramIndicatorGroup with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a programIndicatorGroup by ID [DRAFT]",
        "tags": [
          "programIndicatorGroups"
        ]
      }
    },
    "/programIndicators": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    },
                    "programIndicators": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/programIndicator"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list programIndicators [DRAFT]",
        "tags": [
          "programIndicators"
        ]
      }
    },
    "/programIndicators/{id}": {
      "get": {
        "operationId": "getProgramIndicator",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/programIndicator"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ProgramIndicator with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a programIndicator by ID [DRAFT]",
        "tags": [
          "programIndicators"
        ]
      }
    },
    "/programNotificationTemplates": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    },
                    "programNotificationTemplates": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/programNotificationTemplate"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list programNotificationTemplates [DRAFT]",
        "tags": [
          "programNotificationTemplates"
        ]
      }
    },
    "/programNotificationTemplates/{id}": {
      "get": {
        "operationId": "getProgramNotificationTemplate",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/programNotificationTemplate"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ProgramNotificationTemplate with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a programNotificationTemplate by ID [DRAFT]",
        "tags": [
          "programNotificationTemplates"
        ]
      }
    },
    "/programRuleActions": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    },
                    "programRuleActions": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/programRuleAction"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list programRuleActions [DRAFT]",
        "tags": [
          "programRuleActions"
        ]
      }
    },
    "/programRuleActions/{id}": {
      "get": {
        "operationId": "getProgramRuleAction",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/programRuleAction"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ProgramRuleAction with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a programRuleAction by ID [DRAFT]",
        "tags": [
          "programRuleActions"
        ]
      }
    },
    "/programRuleVariables": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    },
                    "programRuleVariables": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/programRuleVariable"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list programRuleVariables [DRAFT]",
        "tags": [
          "programRuleVariables"
        ]
      }
    },
    "/programRuleVariables/{id}": {
      "get": {
        "operationId": "getProgramRuleVariable",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/programRuleVariable"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ProgramRuleVariable with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a programRuleVariable by ID [DRAFT]",
        "tags": [
          "programRuleVariables"
        ]
      }
    },
    "/programRules": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    },
                    "programRules": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/programRule"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list programRules [DRAFT]",
        "tags": [
          "programRules"
        ]
      }
    },
    "/programRules/{id}": {
      "get": {
        "operationId": "getProgramRule",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/programRule"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ProgramRule with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a programRule by ID [DRAFT]",
        "tags": [
          "programRules"
        ]
      }
    },
    "/programSections": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    },
                    "programSections": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/programSection"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list programSections [DRAFT]",
        "tags": [
          "programSections"
        ]
      }
    },
    "/programSections/{id}": {
      "get": {
        "operationId": "getProgramSection",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/programSection"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ProgramSection with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a programSection by ID [DRAFT]",
        "tags": [
          "programSections"
        ]
      }
    },
    "/programStageSections": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    },
                    "programStageSections": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/programStageSection"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list programStageSections [DRAFT]",
        "tags": [
          "programStageSections"
        ]
      }
    },
    "/programStageSections/{id}": {
      "get": {
        "operationId": "getProgramStageSection",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/programStageSection"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ProgramStageSection with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a programStageSection by ID [DRAFT]",
        "tags": [
          "programStageSections"
        ]
      }
    },
    "/programStages": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    },
                    "programStages": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/programStage"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list programStages [DRAFT]",
        "tags": [
          "programStages"
        ]
      }
    },
    "/programStages/{id}": {
      "get": {
        "operationId": "getProgramStage",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/programStage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ProgramStage with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a programStage by ID [DRAFT]",
        "tags": [
          "programStages"
        ]
      }
    },
    "/programTrackedEntityAttributeGroups": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    },
                    "programTrackedEntityAttributeGroups": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/programTrackedEntityAttributeGroup"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list programTrackedEntityAttributeGroups [DRAFT]",
        "tags": [
          "programTrackedEntityAttributeGroups"
        ]
      }
    },
    "/programTrackedEntityAttributeGroups/{id}": {
      "get": {
        "operationId": "getProgramTrackedEntityAttributeGroup",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/programTrackedEntityAttributeGroup"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ProgramTrackedEntityAttributeGroup with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a programTrackedEntityAttributeGroup by ID [DRAFT]",
        "tags": [
          "programTrackedEntityAttributeGroups"
        ]
      }
    },
    "/programs": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    },
                    "programs": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/program"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list programs [DRAFT]",
        "tags": [
          "programs"
        ]
      }
    },
    "/programs/{id}": {
      "get": {
        "operationId": "getProgram",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/program"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Program with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a program by ID [DRAFT]",
        "tags": [
          "programs"
        ]
      }
    },
    "/pushAnalysis": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    },
                    "pushAnalysis": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/pushAnalysi"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list pushAnalysis [DRAFT]",
        "tags": [
          "pushAnalysis"
        ]
      }
    },
    "/pushAnalysis/{id}": {
      "get": {
        "operationId": "getPushAnalysi",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/pushAnalysi"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "PushAnalysi with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a pushAnalysi by ID [DRAFT]",
        "tags": [
          "pushAnalysis"
        ]
      }
    },
    "/relationshipTypes": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    },
                    "relationshipTypes": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/relationshipType"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list relationshipTypes [DRAFT]",
        "tags": [
          "relationshipTypes"
        ]
      }
    },
    "/relationshipTypes/{id}": {
      "get": {
        "operationId": "getRelationshipType",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/relationshipType"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "RelationshipType with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a relationshipType by ID [DRAFT]",
        "tags": [
          "relationshipTypes"
        ]
      }
    },
    "/reportTables": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    },
                    "reportTables": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/reportTable"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list reportTables [DRAFT]",
        "tags": [
          "reportTables"
        ]
      }
    },
    "/reportTables/{id}": {
      "get": {
        "operationId": "getReportTable",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/reportTable"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ReportTable with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a reportTable by ID [DRAFT]",
        "tags": [
          "reportTables"
        ]
      }
    },
    "/reports": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    },
                    "reports": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/report"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list reports [DRAFT]",
        "tags": [
          "reports"
        ]
      }
    },
    "/reports/{id}": {
      "get": {
        "operationId": "getReport",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/report"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Report with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a report by ID [DRAFT]",
        "tags": [
          "reports"
        ]
      }
    },
    "/sections": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    },
                    "sections": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/section"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list sections [DRAFT]",
        "tags": [
          "sections"
        ]
      }
    },
    "/sections/{id}": {
      "get": {
        "operationId": "getSection",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/section"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Section with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a section by ID [DRAFT]",
        "tags": [
          "sections"
        ]
      }
    },
    "/smsCommands": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    },
                    "smsCommands": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/smsCommand"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list smsCommands [DRAFT]",
        "tags": [
          "smsCommands"
        ]
      }
    },
    "/smsCommands/{id}": {
      "get": {
        "operationId": "getSmsCommand",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/smsCommand"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "SmsCommand with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a smsCommand by ID [DRAFT]",
        "tags": [
          "smsCommands"
        ]
      }
    },
    "/sqlViews": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    },
                    "sqlViews": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/sqlView"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list sqlViews [DRAFT]",
        "tags": [
          "sqlViews"
        ]
      }
    },
    "/sqlViews/{id}": {
      "get": {
        "operationId": "getSqlView",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/sqlView"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "SqlView with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a sqlView by ID [DRAFT]",
        "tags": [
          "sqlViews"
        ]
      }
    },
    "/trackedEntityAttributes": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    },
                    "trackedEntityAttributes": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/trackedEntityAttribute"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list trackedEntityAttributes [DRAFT]",
        "tags": [
          "trackedEntityAttributes"
        ]
      }
    },
    "/trackedEntityAttributes/{id}": {
      "get": {
        "operationId": "getTrackedEntityAttribute",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/trackedEntityAttribute"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "TrackedEntityAttribute with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a trackedEntityAttribute by ID [DRAFT]",
        "tags": [
          "trackedEntityAttributes"
        ]
      }
    },
    "/trackedEntityInstances": {
      "get": {
        "description": "list tracked entity instances (TEIs)",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    },
                    "trackedEntityInstances": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/trackedEntityInstance"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    }
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "At least one organisation unit must be specified",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "list trackedEntityInstances [DRAFT]",
        "tags": [
          "trackedEntityInstances"
        ]
      }
    },
    "/trackedEntityInstances/{id}": {
      "get": {
        "operationId": "getTrackedEntityInstance",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/trackedEntityInstance"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "TrackedEntityInstance with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a trackedEntityInstance by ID [DRAFT]",
        "tags": [
          "trackedEntityInstances"
        ]
      }
    },
    "/trackedEntityTypes": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    },
                    "trackedEntityTypes": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/trackedEntityType"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list trackedEntityTypes [DRAFT]",
        "tags": [
          "trackedEntityTypes"
        ]
      }
    },
    "/trackedEntityTypes/{id}": {
      "get": {
        "operationId": "getTrackedEntityType",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/trackedEntityType"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "TrackedEntityType with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a trackedEntityType by ID [DRAFT]",
        "tags": [
          "trackedEntityTypes"
        ]
      }
    },
    "/userGroups": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    },
                    "userGroups": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/userGroup"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list userGroups [DRAFT]",
        "tags": [
          "userGroups"
        ]
      }
    },
    "/userGroups/{id}": {
      "get": {
        "operationId": "getUserGroup",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/userGroup"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "UserGroup with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a userGroup by ID [DRAFT]",
        "tags": [
          "userGroups"
        ]
      }
    },
    "/userRoles": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    },
                    "userRoles": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/userRole"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list userRoles [DRAFT]",
        "tags": [
          "userRoles"
        ]
      }
    },
    "/userRoles/{id}": {
      "get": {
        "operationId": "getUserRole",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/userRole"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "UserRole with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a userRole by ID [DRAFT]",
        "tags": [
          "userRoles"
        ]
      }
    },
    "/users": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    },
                    "users": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/user"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list users [DRAFT]",
        "tags": [
          "users"
        ]
      }
    },
    "/users/{id}": {
      "get": {
        "operationId": "getUser",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/user"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "User with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a user by ID [DRAFT]",
        "tags": [
          "users"
        ]
      }
    },
    "/validationNotificationTemplates": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    },
                    "validationNotificationTemplates": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/validationNotificationTemplate"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list validationNotificationTemplates [DRAFT]",
        "tags": [
          "validationNotificationTemplates"
        ]
      }
    },
    "/validationNotificationTemplates/{id}": {
      "get": {
        "operationId": "getValidationNotificationTemplate",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/validationNotificationTemplate"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ValidationNotificationTemplate with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a validationNotificationTemplate by ID [DRAFT]",
        "tags": [
          "validationNotificationTemplates"
        ]
      }
    },
    "/validationResults": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    },
                    "validationResults": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/validationResult"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list validationResults [DRAFT]",
        "tags": [
          "validationResults"
        ]
      }
    },
    "/validationResults/{id}": {
      "get": {
        "operationId": "getValidationResult",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/validationResult"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ValidationResult with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a validationResult by ID [DRAFT]",
        "tags": [
          "validationResults"
        ]
      }
    },
    "/validationRuleGroups": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    },
                    "validationRuleGroups": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/validationRuleGroup"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list validationRuleGroups [DRAFT]",
        "tags": [
          "validationRuleGroups"
        ]
      }
    },
    "/validationRuleGroups/{id}": {
      "get": {
        "operationId": "getValidationRuleGroup",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/validationRuleGroup"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ValidationRuleGroup with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a validationRuleGroup by ID [DRAFT]",
        "tags": [
          "validationRuleGroups"
        ]
      }
    },
    "/validationRules": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    },
                    "validationRules": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/validationRule"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list validationRules [DRAFT]",
        "tags": [
          "validationRules"
        ]
      }
    },
    "/validationRules/{id}": {
      "get": {
        "operationId": "getValidationRule",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/validationRule"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ValidationRule with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a validationRule by ID [DRAFT]",
        "tags": [
          "validationRules"
        ]
      }
    }
  }
}