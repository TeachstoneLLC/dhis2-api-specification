{
  "info": {
    "title": "DHIS2 API",
    "version": "2.31"
  },
  "openapi": "3.0.1",
  "paths": {
    "/analyticsTableHooks": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "analyticsTableHooks": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/analyticsTableHook"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list analyticsTableHooks",
        "tags": [
          "analyticsTableHooks"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/analyticsTableHook"
              }
            }
          }
        },
        "responses": {
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"hbhB6iuLBNg\",\n    \"klass\": \"org.hisp.dhis.analytics.AnalyticsTableHook\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `sql`.\",\n        \"mainKlass\": \"org.hisp.dhis.analytics.AnalyticsTableHook\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"sql\",\n        \"errorCode\": \"E4000\"\n      },\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.analytics.AnalyticsTableHook\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot construct instance of `org.hisp.dhis.user.User` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('t96BxbxUlhT')\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 376] (through reference chain: org.hisp.dhis.analytics.AnalyticsTableHook[\\\"lastUpdatedBy\\\"])\"\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create a new analyticsTableHook",
        "tags": [
          "analyticsTableHooks"
        ]
      }
    },
    "/analyticsTableHooks/{id}": {
      "delete": {
        "operationId": "deleteAnalyticsTableHook",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.analyticsTableHook.AnalyticsTableHook",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "AnalyticsTableHook with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a analyticsTableHook by ID",
        "tags": [
          "analyticsTableHooks"
        ]
      },
      "get": {
        "operationId": "getAnalyticsTableHook",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/analyticsTableHook"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "AnalyticsTableHook with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a analyticsTableHook by ID",
        "tags": [
          "analyticsTableHooks"
        ]
      },
      "put": {
        "operationId": "updateAnalyticsTableHook",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/analyticsTableHook"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.analyticsTableHook.AnalyticsTableHook",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "AnalyticsTableHook with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.analyticsTableHook.AnalyticsTableHook",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (AnalyticsTableHook)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.analyticsTableHook.AnalyticsTableHook",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a analyticsTableHook",
        "tags": [
          "analyticsTableHooks"
        ]
      }
    },
    "/attributes": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "attributes": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/attribute"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list attributes",
        "tags": [
          "attributes"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/attribute"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Created\",\n  \"httpStatusCode\": 201,\n  \"status\": \"OK\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"BmcyCd9RZre\",\n    \"klass\": \"org.hisp.dhis.attribute.Attribute\"\n  }\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Created"
          },
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"RKr6w5VWRlb\",\n    \"klass\": \"org.hisp.dhis.attribute.Attribute\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `valueType`.\",\n        \"mainKlass\": \"org.hisp.dhis.attribute.Attribute\",\n        \"errorKlass\": \"org.hisp.dhis.common.ValueType\",\n        \"errorProperty\": \"valueType\",\n        \"errorCode\": \"E4000\"\n      },\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.attribute.Attribute\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot construct instance of `org.hisp.dhis.user.User` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('uOTUuk7PTPw')\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 2172] (through reference chain: org.hisp.dhis.attribute.Attribute[\\\"lastUpdatedBy\\\"])\"\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create a new attribute",
        "tags": [
          "attributes"
        ]
      }
    },
    "/attributes/{id}": {
      "delete": {
        "operationId": "deleteAttribute",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.attribute.Attribute",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Attribute with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a attribute by ID",
        "tags": [
          "attributes"
        ]
      },
      "get": {
        "operationId": "getAttribute",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/attribute"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Attribute with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a attribute by ID",
        "tags": [
          "attributes"
        ]
      },
      "put": {
        "operationId": "updateAttribute",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/attribute"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.attribute.Attribute",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Attribute with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.attribute.Attribute",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (Attribute)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.attribute.Attribute",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a attribute",
        "tags": [
          "attributes"
        ]
      }
    },
    "/categories": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "categories": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/category"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list categories",
        "tags": [
          "categories"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/category"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Created\",\n  \"httpStatusCode\": 201,\n  \"status\": \"OK\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"KgIUskU3QgG\",\n    \"klass\": \"org.hisp.dhis.category.Category\"\n  }\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Created"
          },
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"JzLiF32TJef\",\n    \"klass\": \"org.hisp.dhis.category.Category\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `dataDimensionType`.\",\n        \"mainKlass\": \"org.hisp.dhis.category.Category\",\n        \"errorKlass\": \"org.hisp.dhis.common.DataDimensionType\",\n        \"errorProperty\": \"dataDimensionType\",\n        \"errorCode\": \"E4000\"\n      },\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.category.Category\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot construct instance of `org.hisp.dhis.user.User` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('eKgFB8X5Npv')\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 2022] (through reference chain: org.hisp.dhis.category.Category[\\\"lastUpdatedBy\\\"])\"\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create a new category",
        "tags": [
          "categories"
        ]
      }
    },
    "/categories/{id}": {
      "delete": {
        "operationId": "deleteCategory",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.category.Category",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Category with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a category by ID",
        "tags": [
          "categories"
        ]
      },
      "get": {
        "operationId": "getCategory",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/category"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Category with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a category by ID",
        "tags": [
          "categories"
        ]
      },
      "put": {
        "operationId": "updateCategory",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/category"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.category.Category",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Category with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.category.Category",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (Category)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.category.Category",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a category",
        "tags": [
          "categories"
        ]
      }
    },
    "/categoryCombos": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "categoryCombos": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/categoryCombo"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list categoryCombos",
        "tags": [
          "categoryCombos"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/categoryCombo"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Created\",\n  \"httpStatusCode\": 201,\n  \"status\": \"OK\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"Ke9zChWXAGY\",\n    \"klass\": \"org.hisp.dhis.category.CategoryCombo\"\n  }\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Created"
          },
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"KOwQZ5Ru6SF\",\n    \"klass\": \"org.hisp.dhis.category.CategoryCombo\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `dataDimensionType`.\",\n        \"mainKlass\": \"org.hisp.dhis.category.CategoryCombo\",\n        \"errorKlass\": \"org.hisp.dhis.common.DataDimensionType\",\n        \"errorProperty\": \"dataDimensionType\",\n        \"errorCode\": \"E4000\"\n      },\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.category.CategoryCombo\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot construct instance of `org.hisp.dhis.user.User` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('cwABtSoZklJ')\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 752] (through reference chain: org.hisp.dhis.category.CategoryCombo[\\\"lastUpdatedBy\\\"])\"\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create a new categoryCombo",
        "tags": [
          "categoryCombos"
        ]
      }
    },
    "/categoryCombos/{id}": {
      "delete": {
        "operationId": "deleteCategoryCombo",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.categoryCombo.CategoryCombo",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "CategoryCombo with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a categoryCombo by ID",
        "tags": [
          "categoryCombos"
        ]
      },
      "get": {
        "operationId": "getCategoryCombo",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/categoryCombo"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "CategoryCombo with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a categoryCombo by ID",
        "tags": [
          "categoryCombos"
        ]
      },
      "put": {
        "operationId": "updateCategoryCombo",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/categoryCombo"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.categoryCombo.CategoryCombo",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "CategoryCombo with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.categoryCombo.CategoryCombo",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (CategoryCombo)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.categoryCombo.CategoryCombo",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a categoryCombo",
        "tags": [
          "categoryCombos"
        ]
      }
    },
    "/categoryOptionCombos": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "categoryOptionCombos": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/categoryOptionCombo"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list categoryOptionCombos",
        "tags": [
          "categoryOptionCombos"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/categoryOptionCombo"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Created\",\n  \"httpStatusCode\": 201,\n  \"status\": \"OK\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"vRBS8lUGHHN\",\n    \"klass\": \"org.hisp.dhis.category.CategoryOptionCombo\"\n  }\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Created"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot construct instance of `org.hisp.dhis.category.CategoryCombo` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('68Xv1cxEKZb')\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 176] (through reference chain: org.hisp.dhis.category.CategoryOptionCombo[\\\"categoryCombo\\\"])\"\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create categoryOptionCombos",
        "tags": [
          "categoryOptionCombos"
        ]
      }
    },
    "/categoryOptionCombos/{id}": {
      "delete": {
        "operationId": "deleteCategoryOptionCombo",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.categoryOptionCombo.CategoryOptionCombo",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "CategoryOptionCombo with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a categoryOptionCombo by ID",
        "tags": [
          "categoryOptionCombos"
        ]
      },
      "get": {
        "operationId": "getCategoryOptionCombo",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/categoryOptionCombo"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "CategoryOptionCombo with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a categoryOptionCombo by ID",
        "tags": [
          "categoryOptionCombos"
        ]
      },
      "put": {
        "operationId": "updateCategoryOptionCombo",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/categoryOptionCombo"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.categoryOptionCombo.CategoryOptionCombo",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "CategoryOptionCombo with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.categoryOptionCombo.CategoryOptionCombo",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (CategoryOptionCombo)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.categoryOptionCombo.CategoryOptionCombo",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a categoryOptionCombo",
        "tags": [
          "categoryOptionCombos"
        ]
      }
    },
    "/categoryOptionGroupSets": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "categoryOptionGroupSets": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/categoryOptionGroupSet"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list categoryOptionGroupSets",
        "tags": [
          "categoryOptionGroupSets"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/categoryOptionGroupSet"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Created\",\n  \"httpStatusCode\": 201,\n  \"status\": \"OK\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"OgYz24oCb5D\",\n    \"klass\": \"org.hisp.dhis.category.CategoryOptionGroupSet\"\n  }\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Created"
          },
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"xkwzZEGxZUI\",\n    \"klass\": \"org.hisp.dhis.category.CategoryOptionGroupSet\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.category.CategoryOptionGroupSet\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot construct instance of `org.hisp.dhis.user.User` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('61my2pep9vD')\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 1955] (through reference chain: org.hisp.dhis.category.CategoryOptionGroupSet[\\\"lastUpdatedBy\\\"])\"\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create categoryOptionGroupSets",
        "tags": [
          "categoryOptionGroupSets"
        ]
      }
    },
    "/categoryOptionGroupSets/{id}": {
      "delete": {
        "operationId": "deleteCategoryOptionGroupSet",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.categoryOptionGroupSet.CategoryOptionGroupSet",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "CategoryOptionGroupSet with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a categoryOptionGroupSet by ID",
        "tags": [
          "categoryOptionGroupSets"
        ]
      },
      "get": {
        "operationId": "getCategoryOptionGroupSet",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/categoryOptionGroupSet"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "CategoryOptionGroupSet with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a categoryOptionGroupSet by ID",
        "tags": [
          "categoryOptionGroupSets"
        ]
      },
      "put": {
        "operationId": "updateCategoryOptionGroupSet",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/categoryOptionGroupSet"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.categoryOptionGroupSet.CategoryOptionGroupSet",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "CategoryOptionGroupSet with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.categoryOptionGroupSet.CategoryOptionGroupSet",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (CategoryOptionGroupSet)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.categoryOptionGroupSet.CategoryOptionGroupSet",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a categoryOptionGroupSet",
        "tags": [
          "categoryOptionGroupSets"
        ]
      }
    },
    "/categoryOptionGroups": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "categoryOptionGroups": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/categoryOptionGroup"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list categoryOptionGroups",
        "tags": [
          "categoryOptionGroups"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/categoryOptionGroup"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Created\",\n  \"httpStatusCode\": 201,\n  \"status\": \"OK\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"M81r3DI4jXZ\",\n    \"klass\": \"org.hisp.dhis.category.CategoryOptionGroup\"\n  }\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Created"
          },
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"NUnqfGnwXej\",\n    \"klass\": \"org.hisp.dhis.category.CategoryOptionGroup\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.category.CategoryOptionGroup\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      },\n      {\n        \"message\": \"Missing required property `shortName`.\",\n        \"mainKlass\": \"org.hisp.dhis.category.CategoryOptionGroup\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"shortName\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot construct instance of `org.hisp.dhis.user.User` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('fmvtKJg3axs')\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 1648] (through reference chain: org.hisp.dhis.category.CategoryOptionGroup[\\\"lastUpdatedBy\\\"])\"\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create categoryOptionGroups",
        "tags": [
          "categoryOptionGroups"
        ]
      }
    },
    "/categoryOptionGroups/{id}": {
      "delete": {
        "operationId": "deleteCategoryOptionGroup",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.categoryOptionGroup.CategoryOptionGroup",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "CategoryOptionGroup with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a categoryOptionGroup by ID",
        "tags": [
          "categoryOptionGroups"
        ]
      },
      "get": {
        "operationId": "getCategoryOptionGroup",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/categoryOptionGroup"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "CategoryOptionGroup with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a categoryOptionGroup by ID",
        "tags": [
          "categoryOptionGroups"
        ]
      },
      "put": {
        "operationId": "updateCategoryOptionGroup",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/categoryOptionGroup"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.categoryOptionGroup.CategoryOptionGroup",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "CategoryOptionGroup with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.categoryOptionGroup.CategoryOptionGroup",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (CategoryOptionGroup)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.categoryOptionGroup.CategoryOptionGroup",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a categoryOptionGroup",
        "tags": [
          "categoryOptionGroups"
        ]
      }
    },
    "/categoryOptions": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "categoryOptions": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/categoryOption"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list categoryOptions",
        "tags": [
          "categoryOptions"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/categoryOption"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Created\",\n  \"httpStatusCode\": 201,\n  \"status\": \"OK\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"rQr1cy0BA4l\",\n    \"klass\": \"org.hisp.dhis.category.CategoryOption\"\n  }\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Created"
          },
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"zbYGfR1961S\",\n    \"klass\": \"org.hisp.dhis.category.CategoryOption\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.category.CategoryOption\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot construct instance of `org.hisp.dhis.user.User` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('8rUiXsLeSYz')\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 1697] (through reference chain: org.hisp.dhis.category.CategoryOption[\\\"lastUpdatedBy\\\"])\"\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create categoryOptions",
        "tags": [
          "categoryOptions"
        ]
      }
    },
    "/categoryOptions/{id}": {
      "delete": {
        "operationId": "deleteCategoryOption",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.categoryOption.CategoryOption",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "CategoryOption with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a categoryOption by ID",
        "tags": [
          "categoryOptions"
        ]
      },
      "get": {
        "operationId": "getCategoryOption",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/categoryOption"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "CategoryOption with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a categoryOption by ID",
        "tags": [
          "categoryOptions"
        ]
      },
      "put": {
        "operationId": "updateCategoryOption",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/categoryOption"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.categoryOption.CategoryOption",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "CategoryOption with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.categoryOption.CategoryOption",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (CategoryOption)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.categoryOption.CategoryOption",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a categoryOption",
        "tags": [
          "categoryOptions"
        ]
      }
    },
    "/charts": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "charts": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/chart"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list charts",
        "tags": [
          "charts"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/chart"
              }
            }
          }
        },
        "responses": {
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"WfBc3kud6K0\",\n    \"klass\": \"org.hisp.dhis.chart.Chart\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `type`.\",\n        \"mainKlass\": \"org.hisp.dhis.chart.Chart\",\n        \"errorKlass\": \"org.hisp.dhis.chart.ChartType\",\n        \"errorProperty\": \"type\",\n        \"errorCode\": \"E4000\"\n      },\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.chart.Chart\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"could not execute statement\"\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create charts",
        "tags": [
          "charts"
        ]
      }
    },
    "/charts/{id}": {
      "delete": {
        "operationId": "deleteChart",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.chart.Chart",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Chart with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a chart by ID",
        "tags": [
          "charts"
        ]
      },
      "get": {
        "operationId": "getChart",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/chart"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Chart with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a chart by ID",
        "tags": [
          "charts"
        ]
      },
      "put": {
        "operationId": "updateChart",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/chart"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.chart.Chart",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Chart with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.chart.Chart",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (Chart)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.chart.Chart",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a chart",
        "tags": [
          "charts"
        ]
      }
    },
    "/colorSets": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "colorSets": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/colorSet"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list colorSets",
        "tags": [
          "colorSets"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/colorSet"
              }
            }
          }
        },
        "responses": {
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"v6eEJ0pnZim\",\n    \"klass\": \"org.hisp.dhis.color.ColorSet\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.color.ColorSet\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot construct instance of `org.hisp.dhis.user.User` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('cqfvkSUT0r6')\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 357] (through reference chain: org.hisp.dhis.color.ColorSet[\\\"lastUpdatedBy\\\"])\"\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create colorSets",
        "tags": [
          "colorSets"
        ]
      }
    },
    "/colorSets/{id}": {
      "delete": {
        "operationId": "deleteColorSet",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.colorSet.ColorSet",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ColorSet with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a colorSet by ID",
        "tags": [
          "colorSets"
        ]
      },
      "get": {
        "operationId": "getColorSet",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/colorSet"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ColorSet with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a colorSet by ID",
        "tags": [
          "colorSets"
        ]
      },
      "put": {
        "operationId": "updateColorSet",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/colorSet"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.colorSet.ColorSet",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ColorSet with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.colorSet.ColorSet",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (ColorSet)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.colorSet.ColorSet",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a colorSet",
        "tags": [
          "colorSets"
        ]
      }
    },
    "/constants": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "constants": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/constant"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    }
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list constants",
        "tags": [
          "constants"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/constant"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Created\",\n  \"httpStatusCode\": 201,\n  \"status\": \"OK\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"qSJPEij3GeE\",\n    \"klass\": \"org.hisp.dhis.constant.Constant\"\n  }\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Created"
          },
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"qpMBRK8Zn7Z\",\n    \"klass\": \"org.hisp.dhis.constant.Constant\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.constant.Constant\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot construct instance of `org.hisp.dhis.user.User` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('wUU0YNGGnsR')\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 1439] (through reference chain: org.hisp.dhis.constant.Constant[\\\"lastUpdatedBy\\\"])\"\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create constants",
        "tags": [
          "constants"
        ]
      }
    },
    "/constants/{id}": {
      "delete": {
        "operationId": "deleteConstant",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.constant.Constant",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Constant with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a constant by ID",
        "tags": [
          "constants"
        ]
      },
      "get": {
        "operationId": "getConstant",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/constant"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Constant with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a constant by ID",
        "tags": [
          "constants"
        ]
      },
      "put": {
        "operationId": "updateConstant",
        "parameters": [
          {
            "description": "unique id of the element in the system.",
            "in": "path",
            "name": "id",
            "schema": {
              "$ref": "./components_openapi.json#/components/schemas/uid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/constant"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.constant.Constant",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Constant with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.constant.Constant",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (Constant)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.constant.Constant",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Internal Server Error",
                  "httpStatusCode": 500,
                  "message": "Can not construct instance of double from String value (\"haha\"): not a valid Double value\n at [Source: org.apache.catalina.connector.CoyoteInputStream@4bc73863; line: 11, column: 9] (through reference chain: org.hisp.dhis.constant.Constant[\"value\"])",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a constant",
        "tags": [
          "constants"
        ]
      }
    },
    "/dashboardItems": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "dashboardItems": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/dashboardItem"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list dashboardItems",
        "tags": [
          "dashboardItems"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/dashboardItem"
              }
            }
          }
        },
        "responses": {
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"ObjectReport is required to be non-null.\"\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create dashboardItems",
        "tags": [
          "dashboardItems"
        ]
      }
    },
    "/dashboardItems/{id}": {
      "delete": {
        "operationId": "deleteDashboardItem",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.dashboardItem.DashboardItem",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "DashboardItem with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a dashboardItem by ID",
        "tags": [
          "dashboardItems"
        ]
      },
      "get": {
        "operationId": "getDashboardItem",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/dashboardItem"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "DashboardItem with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a dashboardItem by ID",
        "tags": [
          "dashboardItems"
        ]
      },
      "put": {
        "operationId": "updateDashboardItem",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/dashboardItem"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.dashboardItem.DashboardItem",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "DashboardItem with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.dashboardItem.DashboardItem",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (DashboardItem)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.dashboardItem.DashboardItem",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a dashboardItem",
        "tags": [
          "dashboardItems"
        ]
      }
    },
    "/dashboards": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "dashboards": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/dashboard"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list dashboards",
        "tags": [
          "dashboards"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/dashboard"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Created\",\n  \"httpStatusCode\": 201,\n  \"status\": \"OK\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"QP9quWHu0MN\",\n    \"klass\": \"org.hisp.dhis.dashboard.Dashboard\"\n  }\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Created"
          },
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"P2jWt3g97xr\",\n    \"klass\": \"org.hisp.dhis.dashboard.Dashboard\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.dashboard.Dashboard\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot construct instance of `org.hisp.dhis.user.User` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('UUE0Mnkopq9')\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 1473] (through reference chain: org.hisp.dhis.dashboard.Dashboard[\\\"lastUpdatedBy\\\"])\"\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create dashboards",
        "tags": [
          "dashboards"
        ]
      }
    },
    "/dashboards/{id}": {
      "delete": {
        "operationId": "deleteDashboard",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.dashboard.Dashboard",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Dashboard with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a dashboard by ID",
        "tags": [
          "dashboards"
        ]
      },
      "get": {
        "operationId": "getDashboard",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/dashboard"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Dashboard with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a dashboard by ID",
        "tags": [
          "dashboards"
        ]
      },
      "put": {
        "operationId": "updateDashboard",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/dashboard"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.dashboard.Dashboard",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Dashboard with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.dashboard.Dashboard",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (Dashboard)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.dashboard.Dashboard",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a dashboard",
        "tags": [
          "dashboards"
        ]
      }
    },
    "/dataApprovalLevels": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "dataApprovalLevels": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/dataApprovalLevel"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list dataApprovalLevels",
        "tags": [
          "dataApprovalLevels"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/dataApprovalLevel"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Created\",\n  \"httpStatusCode\": 201,\n  \"status\": \"OK\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"narp5la6Ifr\",\n    \"klass\": \"org.hisp.dhis.dataapproval.DataApprovalLevel\"\n  }\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Created"
          },
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"di1K5SerMWO\",\n    \"klass\": \"org.hisp.dhis.dataapproval.DataApprovalLevel\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.dataapproval.DataApprovalLevel\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot construct instance of `org.hisp.dhis.category.CategoryOptionGroupSet` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('X5uYLe7aShT')\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 158] (through reference chain: org.hisp.dhis.dataapproval.DataApprovalLevel[\\\"categoryOptionGroupSet\\\"])\"\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create dataApprovalLevels",
        "tags": [
          "dataApprovalLevels"
        ]
      }
    },
    "/dataApprovalLevels/{id}": {
      "delete": {
        "operationId": "deleteDataApprovalLevel",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.dataApprovalLevel.DataApprovalLevel",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "DataApprovalLevel with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a dataApprovalLevel by ID",
        "tags": [
          "dataApprovalLevels"
        ]
      },
      "get": {
        "operationId": "getDataApprovalLevel",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/dataApprovalLevel"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "DataApprovalLevel with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a dataApprovalLevel by ID",
        "tags": [
          "dataApprovalLevels"
        ]
      },
      "put": {
        "operationId": "updateDataApprovalLevel",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/dataApprovalLevel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.dataApprovalLevel.DataApprovalLevel",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "DataApprovalLevel with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.dataApprovalLevel.DataApprovalLevel",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (DataApprovalLevel)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.dataApprovalLevel.DataApprovalLevel",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a dataApprovalLevel",
        "tags": [
          "dataApprovalLevels"
        ]
      }
    },
    "/dataApprovalWorkflows": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "dataApprovalWorkflows": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/dataApprovalWorkflow"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list dataApprovalWorkflows",
        "tags": [
          "dataApprovalWorkflows"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/dataApprovalWorkflow"
              }
            }
          }
        },
        "responses": {
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"JonbbNZzh0o\",\n    \"klass\": \"org.hisp.dhis.dataapproval.DataApprovalWorkflow\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `periodType`.\",\n        \"mainKlass\": \"org.hisp.dhis.dataapproval.DataApprovalWorkflow\",\n        \"errorKlass\": \"org.hisp.dhis.period.PeriodType\",\n        \"errorProperty\": \"periodType\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot construct instance of `org.hisp.dhis.category.CategoryCombo` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('fHjK3Ttf8R9')\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 149] (through reference chain: org.hisp.dhis.dataapproval.DataApprovalWorkflow[\\\"categoryCombo\\\"])\"\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create dataApprovalWorkflows",
        "tags": [
          "dataApprovalWorkflows"
        ]
      }
    },
    "/dataApprovalWorkflows/{id}": {
      "delete": {
        "operationId": "deleteDataApprovalWorkflow",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.dataApprovalWorkflow.DataApprovalWorkflow",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "DataApprovalWorkflow with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a dataApprovalWorkflow by ID",
        "tags": [
          "dataApprovalWorkflows"
        ]
      },
      "get": {
        "operationId": "getDataApprovalWorkflow",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/dataApprovalWorkflow"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "DataApprovalWorkflow with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a dataApprovalWorkflow by ID",
        "tags": [
          "dataApprovalWorkflows"
        ]
      },
      "put": {
        "operationId": "updateDataApprovalWorkflow",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/dataApprovalWorkflow"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.dataApprovalWorkflow.DataApprovalWorkflow",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "DataApprovalWorkflow with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.dataApprovalWorkflow.DataApprovalWorkflow",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (DataApprovalWorkflow)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.dataApprovalWorkflow.DataApprovalWorkflow",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a dataApprovalWorkflow",
        "tags": [
          "dataApprovalWorkflows"
        ]
      }
    },
    "/dataElementGroupSets": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "dataElementGroupSets": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/dataElementGroupSet"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list dataElementGroupSets",
        "tags": [
          "dataElementGroupSets"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/dataElementGroupSet"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Created\",\n  \"httpStatusCode\": 201,\n  \"status\": \"OK\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"oB2VgFRz9nt\",\n    \"klass\": \"org.hisp.dhis.dataelement.DataElementGroupSet\"\n  }\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Created"
          },
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"vBMN5RtxikY\",\n    \"klass\": \"org.hisp.dhis.dataelement.DataElementGroupSet\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.dataelement.DataElementGroupSet\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot construct instance of `org.hisp.dhis.user.User` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('mgQdecI28PZ')\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 1923] (through reference chain: org.hisp.dhis.dataelement.DataElementGroupSet[\\\"lastUpdatedBy\\\"])\"\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create dataElementGroupSets",
        "tags": [
          "dataElementGroupSets"
        ]
      }
    },
    "/dataElementGroupSets/{id}": {
      "delete": {
        "operationId": "deleteDataElementGroupSet",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.dataElementGroupSet.DataElementGroupSet",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "DataElementGroupSet with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a dataElementGroupSet by ID",
        "tags": [
          "dataElementGroupSets"
        ]
      },
      "get": {
        "operationId": "getDataElementGroupSet",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/dataElementGroupSet"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "DataElementGroupSet with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a dataElementGroupSet by ID",
        "tags": [
          "dataElementGroupSets"
        ]
      },
      "put": {
        "operationId": "updateDataElementGroupSet",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/dataElementGroupSet"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.dataElementGroupSet.DataElementGroupSet",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "DataElementGroupSet with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.dataElementGroupSet.DataElementGroupSet",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (DataElementGroupSet)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.dataElementGroupSet.DataElementGroupSet",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a dataElementGroupSet",
        "tags": [
          "dataElementGroupSets"
        ]
      }
    },
    "/dataElementGroups": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "dataElementGroups": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/dataElementGroup"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list dataElementGroups",
        "tags": [
          "dataElementGroups"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/dataElementGroup"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Created\",\n  \"httpStatusCode\": 201,\n  \"status\": \"OK\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"HxHi37S9dsI\",\n    \"klass\": \"org.hisp.dhis.dataelement.DataElementGroup\"\n  }\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Created"
          },
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"vEYLsrEIpJk\",\n    \"klass\": \"org.hisp.dhis.dataelement.DataElementGroup\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.dataelement.DataElementGroup\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot construct instance of `org.hisp.dhis.user.User` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('VuIwAwx7aOa')\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 1613] (through reference chain: org.hisp.dhis.dataelement.DataElementGroup[\\\"lastUpdatedBy\\\"])\"\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create dataElementGroups",
        "tags": [
          "dataElementGroups"
        ]
      }
    },
    "/dataElementGroups/{id}": {
      "delete": {
        "operationId": "deleteDataElementGroup",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.dataElementGroup.DataElementGroup",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "DataElementGroup with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a dataElementGroup by ID",
        "tags": [
          "dataElementGroups"
        ]
      },
      "get": {
        "operationId": "getDataElementGroup",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/dataElementGroup"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "DataElementGroup with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a dataElementGroup by ID",
        "tags": [
          "dataElementGroups"
        ]
      },
      "put": {
        "operationId": "updateDataElementGroup",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/dataElementGroup"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.dataElementGroup.DataElementGroup",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "DataElementGroup with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.dataElementGroup.DataElementGroup",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (DataElementGroup)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.dataElementGroup.DataElementGroup",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a dataElementGroup",
        "tags": [
          "dataElementGroups"
        ]
      }
    },
    "/dataElementOperands": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "dataElementOperands": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/dataElementOperand"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list dataElementOperands",
        "tags": [
          "dataElementOperands"
        ]
      }
    },
    "/dataElementOperands/{id}": {
      "delete": {
        "operationId": "deleteDataElementOperand",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.dataElementOperand.DataElementOperand",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "DataElementOperand with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a dataElementOperand by ID",
        "tags": [
          "dataElementOperands"
        ]
      },
      "get": {
        "operationId": "getDataElementOperand",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/dataElementOperand"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "DataElementOperand with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a dataElementOperand by ID",
        "tags": [
          "dataElementOperands"
        ]
      },
      "put": {
        "operationId": "updateDataElementOperand",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/dataElementOperand"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.dataElementOperand.DataElementOperand",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "DataElementOperand with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.dataElementOperand.DataElementOperand",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (DataElementOperand)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.dataElementOperand.DataElementOperand",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a dataElementOperand",
        "tags": [
          "dataElementOperands"
        ]
      }
    },
    "/dataElements": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "dataElements": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/dataElement"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list dataElements",
        "tags": [
          "dataElements"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/dataElement"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Created\",\n  \"httpStatusCode\": 201,\n  \"status\": \"OK\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"ysB31AMO2Ny\",\n    \"klass\": \"org.hisp.dhis.dataelement.DataElement\"\n  }\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Created"
          },
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"hTuLV8aViwb\",\n    \"klass\": \"org.hisp.dhis.dataelement.DataElement\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `aggregationType`.\",\n        \"mainKlass\": \"org.hisp.dhis.dataelement.DataElement\",\n        \"errorKlass\": \"org.hisp.dhis.analytics.AggregationType\",\n        \"errorProperty\": \"aggregationType\",\n        \"errorCode\": \"E4000\"\n      },\n      {\n        \"message\": \"Missing required property `domainType`.\",\n        \"mainKlass\": \"org.hisp.dhis.dataelement.DataElement\",\n        \"errorKlass\": \"org.hisp.dhis.dataelement.DataElementDomain\",\n        \"errorProperty\": \"domainType\",\n        \"errorCode\": \"E4000\"\n      },\n      {\n        \"message\": \"Missing required property `valueType`.\",\n        \"mainKlass\": \"org.hisp.dhis.dataelement.DataElement\",\n        \"errorKlass\": \"org.hisp.dhis.common.ValueType\",\n        \"errorProperty\": \"valueType\",\n        \"errorCode\": \"E4000\"\n      },\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.dataelement.DataElement\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      },\n      {\n        \"message\": \"Missing required property `shortName`.\",\n        \"mainKlass\": \"org.hisp.dhis.dataelement.DataElement\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"shortName\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot deserialize value of type `java.lang.Integer` from String \\\"string\\\": not a valid Integer value\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 24] (through reference chain: org.hisp.dhis.dataelement.DataElement[\\\"aggregationLevels\\\"]->java.util.ArrayList[0])\"\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create dataElements",
        "tags": [
          "dataElements"
        ]
      }
    },
    "/dataElements/{id}": {
      "delete": {
        "operationId": "deleteDataElement",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.dataElement.DataElement",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "DataElement with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a dataElement by ID",
        "tags": [
          "dataElements"
        ]
      },
      "get": {
        "operationId": "getDataElement",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/dataElement"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "DataElement with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a dataElement by ID",
        "tags": [
          "dataElements"
        ]
      },
      "put": {
        "operationId": "updateDataElement",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/dataElement"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.dataElement.DataElement",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "DataElement with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.dataElement.DataElement",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (DataElement)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.dataElement.DataElement",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a dataElement",
        "tags": [
          "dataElements"
        ]
      }
    },
    "/dataEntryForms": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "dataEntryForms": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/dataEntryForm"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list dataEntryForms",
        "tags": [
          "dataEntryForms"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/dataEntryForm"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Created\",\n  \"httpStatusCode\": 201,\n  \"status\": \"OK\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"ihbApqKTY4M\",\n    \"klass\": \"org.hisp.dhis.dataentryform.DataEntryForm\"\n  }\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Created"
          },
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"LNksncAGxXa\",\n    \"klass\": \"org.hisp.dhis.dataentryform.DataEntryForm\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.dataentryform.DataEntryForm\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot deserialize value of type `int` from String \\\"string\\\": not a valid Integer value\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 501] (through reference chain: org.hisp.dhis.dataentryform.DataEntryForm[\\\"format\\\"])\"\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create dataEntryForms",
        "tags": [
          "dataEntryForms"
        ]
      }
    },
    "/dataEntryForms/{id}": {
      "delete": {
        "operationId": "deleteDataEntryForm",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.dataEntryForm.DataEntryForm",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "DataEntryForm with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a dataEntryForm by ID",
        "tags": [
          "dataEntryForms"
        ]
      },
      "get": {
        "operationId": "getDataEntryForm",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/dataEntryForm"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "DataEntryForm with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a dataEntryForm by ID",
        "tags": [
          "dataEntryForms"
        ]
      },
      "put": {
        "operationId": "updateDataEntryForm",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/dataEntryForm"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.dataEntryForm.DataEntryForm",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "DataEntryForm with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.dataEntryForm.DataEntryForm",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (DataEntryForm)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.dataEntryForm.DataEntryForm",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a dataEntryForm",
        "tags": [
          "dataEntryForms"
        ]
      }
    },
    "/dataSetNotificationTemplates": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "dataSetNotificationTemplates": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/dataSetNotificationTemplate"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list dataSetNotificationTemplates",
        "tags": [
          "dataSetNotificationTemplates"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/dataSetNotificationTemplate"
              }
            }
          }
        },
        "responses": {
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"qSf6p6axYWX\",\n    \"klass\": \"org.hisp.dhis.dataset.notifications.DataSetNotificationTemplate\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.dataset.notifications.DataSetNotificationTemplate\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      },\n      {\n        \"message\": \"Missing required property `messageTemplate`.\",\n        \"mainKlass\": \"org.hisp.dhis.dataset.notifications.DataSetNotificationTemplate\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"messageTemplate\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot construct instance of `org.hisp.dhis.user.User` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('oFMvKG6NDJG')\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 436] (through reference chain: org.hisp.dhis.dataset.notifications.DataSetNotificationTemplate[\\\"lastUpdatedBy\\\"])\"\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create dataSetNotificationTemplates",
        "tags": [
          "dataSetNotificationTemplates"
        ]
      }
    },
    "/dataSetNotificationTemplates/{id}": {
      "delete": {
        "operationId": "deleteDataSetNotificationTemplate",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.dataSetNotificationTemplate.DataSetNotificationTemplate",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "DataSetNotificationTemplate with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a dataSetNotificationTemplate by ID",
        "tags": [
          "dataSetNotificationTemplates"
        ]
      },
      "get": {
        "operationId": "getDataSetNotificationTemplate",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/dataSetNotificationTemplate"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "DataSetNotificationTemplate with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a dataSetNotificationTemplate by ID",
        "tags": [
          "dataSetNotificationTemplates"
        ]
      },
      "put": {
        "operationId": "updateDataSetNotificationTemplate",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/dataSetNotificationTemplate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.dataSetNotificationTemplate.DataSetNotificationTemplate",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "DataSetNotificationTemplate with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.dataSetNotificationTemplate.DataSetNotificationTemplate",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (DataSetNotificationTemplate)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.dataSetNotificationTemplate.DataSetNotificationTemplate",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a dataSetNotificationTemplate",
        "tags": [
          "dataSetNotificationTemplates"
        ]
      }
    },
    "/dataSets": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "dataSets": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/dataSet"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list dataSets",
        "tags": [
          "dataSets"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/dataSet"
              }
            }
          }
        },
        "responses": {
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"YrqJX98D8IF\",\n    \"klass\": \"org.hisp.dhis.dataset.DataSet\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `periodType`.\",\n        \"mainKlass\": \"org.hisp.dhis.dataset.DataSet\",\n        \"errorKlass\": \"org.hisp.dhis.period.PeriodType\",\n        \"errorProperty\": \"periodType\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot construct instance of `org.hisp.dhis.category.CategoryCombo` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('sYTzODdgwgE')\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 176] (through reference chain: org.hisp.dhis.dataset.DataSet[\\\"categoryCombo\\\"])\"\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create dataSets",
        "tags": [
          "dataSets"
        ]
      }
    },
    "/dataSets/{id}": {
      "delete": {
        "operationId": "deleteDataSet",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.dataSet.DataSet",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "DataSet with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a dataSet by ID",
        "tags": [
          "dataSets"
        ]
      },
      "get": {
        "operationId": "getDataSet",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/dataSet"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "DataSet with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a dataSet by ID",
        "tags": [
          "dataSets"
        ]
      },
      "put": {
        "operationId": "updateDataSet",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/dataSet"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.dataSet.DataSet",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "DataSet with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.dataSet.DataSet",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (DataSet)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.dataSet.DataSet",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a dataSet",
        "tags": [
          "dataSets"
        ]
      }
    },
    "/documents": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "documents": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/document"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list documents",
        "tags": [
          "documents"
        ]
      }
    },
    "/documents/{id}": {
      "delete": {
        "operationId": "deleteDocument",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.document.Document",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Document with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a document by ID",
        "tags": [
          "documents"
        ]
      },
      "get": {
        "operationId": "getDocument",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/document"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Document with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a document by ID",
        "tags": [
          "documents"
        ]
      },
      "put": {
        "operationId": "updateDocument",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/document"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.document.Document",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Document with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.document.Document",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (Document)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.document.Document",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a document",
        "tags": [
          "documents"
        ]
      }
    },
    "/eventCharts": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "eventCharts": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/eventChart"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list eventCharts",
        "tags": [
          "eventCharts"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/eventChart"
              }
            }
          }
        },
        "responses": {
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"Ehsl7eSF6m3\",\n    \"klass\": \"org.hisp.dhis.eventchart.EventChart\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `program`.\",\n        \"mainKlass\": \"org.hisp.dhis.eventchart.EventChart\",\n        \"errorKlass\": \"org.hisp.dhis.program.Program\",\n        \"errorProperty\": \"program\",\n        \"errorCode\": \"E4000\"\n      },\n      {\n        \"message\": \"Missing required property `type`.\",\n        \"mainKlass\": \"org.hisp.dhis.eventchart.EventChart\",\n        \"errorKlass\": \"org.hisp.dhis.chart.ChartType\",\n        \"errorProperty\": \"type\",\n        \"errorCode\": \"E4000\"\n      },\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.eventchart.EventChart\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot construct instance of `org.hisp.dhis.program.Program` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('2G6i9MIBZzu')\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 255] (through reference chain: org.hisp.dhis.eventchart.EventChart[\\\"program\\\"])\"\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create eventCharts",
        "tags": [
          "eventCharts"
        ]
      }
    },
    "/eventCharts/{id}": {
      "delete": {
        "operationId": "deleteEventChart",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.eventChart.EventChart",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "EventChart with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a eventChart by ID",
        "tags": [
          "eventCharts"
        ]
      },
      "get": {
        "operationId": "getEventChart",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/eventChart"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "EventChart with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a eventChart by ID",
        "tags": [
          "eventCharts"
        ]
      },
      "put": {
        "operationId": "updateEventChart",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/eventChart"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.eventChart.EventChart",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "EventChart with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.eventChart.EventChart",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (EventChart)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.eventChart.EventChart",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a eventChart",
        "tags": [
          "eventCharts"
        ]
      }
    },
    "/eventReports": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "eventReports": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/eventReport"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list eventReports",
        "tags": [
          "eventReports"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/eventReport"
              }
            }
          }
        },
        "responses": {
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"o47PUwSx71t\",\n    \"klass\": \"org.hisp.dhis.eventreport.EventReport\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `program`.\",\n        \"mainKlass\": \"org.hisp.dhis.eventreport.EventReport\",\n        \"errorKlass\": \"org.hisp.dhis.program.Program\",\n        \"errorProperty\": \"program\",\n        \"errorCode\": \"E4000\"\n      },\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.eventreport.EventReport\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot construct instance of `org.hisp.dhis.program.Program` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('lGA5D9YR7Kj')\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 255] (through reference chain: org.hisp.dhis.eventreport.EventReport[\\\"program\\\"])\"\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create eventReports",
        "tags": [
          "eventReports"
        ]
      }
    },
    "/eventReports/{id}": {
      "delete": {
        "operationId": "deleteEventReport",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.eventReport.EventReport",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "EventReport with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a eventReport by ID",
        "tags": [
          "eventReports"
        ]
      },
      "get": {
        "operationId": "getEventReport",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/eventReport"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "EventReport with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a eventReport by ID",
        "tags": [
          "eventReports"
        ]
      },
      "put": {
        "operationId": "updateEventReport",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/eventReport"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.eventReport.EventReport",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "EventReport with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.eventReport.EventReport",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (EventReport)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.eventReport.EventReport",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a eventReport",
        "tags": [
          "eventReports"
        ]
      }
    },
    "/externalMapLayers": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "externalMapLayers": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/externalMapLayer"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list externalMapLayers",
        "tags": [
          "externalMapLayers"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/externalMapLayer"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Created\",\n  \"httpStatusCode\": 201,\n  \"status\": \"OK\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"rjxbdonmsMQ\",\n    \"klass\": \"org.hisp.dhis.mapping.ExternalMapLayer\"\n  }\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Created"
          },
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"HI62yoP6Kkv\",\n    \"klass\": \"org.hisp.dhis.mapping.ExternalMapLayer\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `imageFormat`.\",\n        \"mainKlass\": \"org.hisp.dhis.mapping.ExternalMapLayer\",\n        \"errorKlass\": \"org.hisp.dhis.mapping.ImageFormat\",\n        \"errorProperty\": \"imageFormat\",\n        \"errorCode\": \"E4000\"\n      },\n      {\n        \"message\": \"Missing required property `mapService`.\",\n        \"mainKlass\": \"org.hisp.dhis.mapping.ExternalMapLayer\",\n        \"errorKlass\": \"org.hisp.dhis.mapping.MapService\",\n        \"errorProperty\": \"mapService\",\n        \"errorCode\": \"E4000\"\n      },\n      {\n        \"message\": \"Missing required property `mapLayerPosition`.\",\n        \"mainKlass\": \"org.hisp.dhis.mapping.ExternalMapLayer\",\n        \"errorKlass\": \"org.hisp.dhis.mapping.MapLayerPosition\",\n        \"errorProperty\": \"mapLayerPosition\",\n        \"errorCode\": \"E4000\"\n      },\n      {\n        \"message\": \"Missing required property `url`.\",\n        \"mainKlass\": \"org.hisp.dhis.mapping.ExternalMapLayer\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"url\",\n        \"errorCode\": \"E4000\"\n      },\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.mapping.ExternalMapLayer\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot construct instance of `org.hisp.dhis.user.User` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('gXCxJIVLcFe')\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 901] (through reference chain: org.hisp.dhis.mapping.ExternalMapLayer[\\\"lastUpdatedBy\\\"])\"\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create externalMapLayers",
        "tags": [
          "externalMapLayers"
        ]
      }
    },
    "/externalMapLayers/{id}": {
      "delete": {
        "operationId": "deleteExternalMapLayer",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.externalMapLayer.ExternalMapLayer",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ExternalMapLayer with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a externalMapLayer by ID",
        "tags": [
          "externalMapLayers"
        ]
      },
      "get": {
        "operationId": "getExternalMapLayer",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/externalMapLayer"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ExternalMapLayer with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a externalMapLayer by ID",
        "tags": [
          "externalMapLayers"
        ]
      },
      "put": {
        "operationId": "updateExternalMapLayer",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/externalMapLayer"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.externalMapLayer.ExternalMapLayer",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ExternalMapLayer with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.externalMapLayer.ExternalMapLayer",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (ExternalMapLayer)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.externalMapLayer.ExternalMapLayer",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a externalMapLayer",
        "tags": [
          "externalMapLayers"
        ]
      }
    },
    "/indicatorGroupSets": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "indicatorGroupSets": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/indicatorGroupSet"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list indicatorGroupSets",
        "tags": [
          "indicatorGroupSets"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/indicatorGroupSet"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Created\",\n  \"httpStatusCode\": 201,\n  \"status\": \"OK\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"eulfByaNhZZ\",\n    \"klass\": \"org.hisp.dhis.indicator.IndicatorGroupSet\"\n  }\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Created"
          },
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"Qez86nrK5HE\",\n    \"klass\": \"org.hisp.dhis.indicator.IndicatorGroupSet\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.indicator.IndicatorGroupSet\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot construct instance of `org.hisp.dhis.user.User` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('coXRt1rX7NO')\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 934] (through reference chain: org.hisp.dhis.indicator.IndicatorGroupSet[\\\"lastUpdatedBy\\\"])\"\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create indicatorGroupSets",
        "tags": [
          "indicatorGroupSets"
        ]
      }
    },
    "/indicatorGroupSets/{id}": {
      "delete": {
        "operationId": "deleteIndicatorGroupSet",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.indicatorGroupSet.IndicatorGroupSet",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "IndicatorGroupSet with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a indicatorGroupSet by ID",
        "tags": [
          "indicatorGroupSets"
        ]
      },
      "get": {
        "operationId": "getIndicatorGroupSet",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/indicatorGroupSet"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "IndicatorGroupSet with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a indicatorGroupSet by ID",
        "tags": [
          "indicatorGroupSets"
        ]
      },
      "put": {
        "operationId": "updateIndicatorGroupSet",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/indicatorGroupSet"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.indicatorGroupSet.IndicatorGroupSet",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "IndicatorGroupSet with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.indicatorGroupSet.IndicatorGroupSet",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (IndicatorGroupSet)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.indicatorGroupSet.IndicatorGroupSet",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a indicatorGroupSet",
        "tags": [
          "indicatorGroupSets"
        ]
      }
    },
    "/indicatorGroups": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "indicatorGroups": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/indicatorGroup"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list indicatorGroups",
        "tags": [
          "indicatorGroups"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/indicatorGroup"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Created\",\n  \"httpStatusCode\": 201,\n  \"status\": \"OK\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"lZsFJgLWAhu\",\n    \"klass\": \"org.hisp.dhis.indicator.IndicatorGroup\"\n  }\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Created"
          },
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"U0tn3cTzBju\",\n    \"klass\": \"org.hisp.dhis.indicator.IndicatorGroup\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.indicator.IndicatorGroup\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot construct instance of `org.hisp.dhis.indicator.IndicatorGroupSet` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('936N4W083Zk')\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 597] (through reference chain: org.hisp.dhis.indicator.IndicatorGroup[\\\"indicatorGroupSet\\\"])\"\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create indicatorGroups",
        "tags": [
          "indicatorGroups"
        ]
      }
    },
    "/indicatorGroups/{id}": {
      "delete": {
        "operationId": "deleteIndicatorGroup",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.indicatorGroup.IndicatorGroup",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "IndicatorGroup with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a indicatorGroup by ID",
        "tags": [
          "indicatorGroups"
        ]
      },
      "get": {
        "operationId": "getIndicatorGroup",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/indicatorGroup"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "IndicatorGroup with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a indicatorGroup by ID",
        "tags": [
          "indicatorGroups"
        ]
      },
      "put": {
        "operationId": "updateIndicatorGroup",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/indicatorGroup"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.indicatorGroup.IndicatorGroup",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "IndicatorGroup with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.indicatorGroup.IndicatorGroup",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (IndicatorGroup)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.indicatorGroup.IndicatorGroup",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a indicatorGroup",
        "tags": [
          "indicatorGroups"
        ]
      }
    },
    "/indicatorTypes": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "indicatorTypes": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/indicatorType"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list indicatorTypes",
        "tags": [
          "indicatorTypes"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/indicatorType"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Created\",\n  \"httpStatusCode\": 201,\n  \"status\": \"OK\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"M56UgqiLAXo\",\n    \"klass\": \"org.hisp.dhis.indicator.IndicatorType\"\n  }\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Created"
          },
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"skxh8LNzMhK\",\n    \"klass\": \"org.hisp.dhis.indicator.IndicatorType\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.indicator.IndicatorType\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot deserialize value of type `int` from String \\\"string\\\": not a valid Integer value\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 501] (through reference chain: org.hisp.dhis.indicator.IndicatorType[\\\"factor\\\"])\"\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create indicatorTypes",
        "tags": [
          "indicatorTypes"
        ]
      }
    },
    "/indicatorTypes/{id}": {
      "delete": {
        "operationId": "deleteIndicatorType",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.indicatorType.IndicatorType",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "IndicatorType with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a indicatorType by ID",
        "tags": [
          "indicatorTypes"
        ]
      },
      "get": {
        "operationId": "getIndicatorType",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/indicatorType"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "IndicatorType with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a indicatorType by ID",
        "tags": [
          "indicatorTypes"
        ]
      },
      "put": {
        "operationId": "updateIndicatorType",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/indicatorType"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.indicatorType.IndicatorType",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "IndicatorType with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.indicatorType.IndicatorType",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (IndicatorType)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.indicatorType.IndicatorType",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a indicatorType",
        "tags": [
          "indicatorTypes"
        ]
      }
    },
    "/indicators": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "indicators": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/indicator"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list indicators",
        "tags": [
          "indicators"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/indicator"
              }
            }
          }
        },
        "responses": {
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"we2v9JobUkA\",\n    \"klass\": \"org.hisp.dhis.indicator.Indicator\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `indicatorType`.\",\n        \"mainKlass\": \"org.hisp.dhis.indicator.Indicator\",\n        \"errorKlass\": \"org.hisp.dhis.indicator.IndicatorType\",\n        \"errorProperty\": \"indicatorType\",\n        \"errorCode\": \"E4000\"\n      },\n      {\n        \"message\": \"Missing required property `numerator`.\",\n        \"mainKlass\": \"org.hisp.dhis.indicator.Indicator\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"numerator\",\n        \"errorCode\": \"E4000\"\n      },\n      {\n        \"message\": \"Missing required property `denominator`.\",\n        \"mainKlass\": \"org.hisp.dhis.indicator.Indicator\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"denominator\",\n        \"errorCode\": \"E4000\"\n      },\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.indicator.Indicator\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      },\n      {\n        \"message\": \"Missing required property `shortName`.\",\n        \"mainKlass\": \"org.hisp.dhis.indicator.Indicator\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"shortName\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot construct instance of `org.hisp.dhis.indicator.IndicatorType` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('BL7Ffk0LaZN')\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 293] (through reference chain: org.hisp.dhis.indicator.Indicator[\\\"indicatorType\\\"])\"\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create indicators",
        "tags": [
          "indicators"
        ]
      }
    },
    "/indicators/{id}": {
      "delete": {
        "operationId": "deleteIndicator",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.indicator.Indicator",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Indicator with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a indicator by ID",
        "tags": [
          "indicators"
        ]
      },
      "get": {
        "operationId": "getIndicator",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/indicator"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Indicator with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a indicator by ID",
        "tags": [
          "indicators"
        ]
      },
      "put": {
        "operationId": "updateIndicator",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/indicator"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.indicator.Indicator",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Indicator with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.indicator.Indicator",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (Indicator)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.indicator.Indicator",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a indicator",
        "tags": [
          "indicators"
        ]
      }
    },
    "/interpretations": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "interpretations": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/interpretation"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list interpretations",
        "tags": [
          "interpretations"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/interpretation"
              }
            }
          }
        },
        "responses": {
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"ObjectReport is required to be non-null.\"\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create interpretations",
        "tags": [
          "interpretations"
        ]
      }
    },
    "/interpretations/{id}": {
      "delete": {
        "operationId": "deleteInterpretation",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.interpretation.Interpretation",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Interpretation with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a interpretation by ID",
        "tags": [
          "interpretations"
        ]
      },
      "get": {
        "operationId": "getInterpretation",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/interpretation"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Interpretation with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a interpretation by ID",
        "tags": [
          "interpretations"
        ]
      },
      "put": {
        "operationId": "updateInterpretation",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/interpretation"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.interpretation.Interpretation",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Interpretation with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.interpretation.Interpretation",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (Interpretation)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.interpretation.Interpretation",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a interpretation",
        "tags": [
          "interpretations"
        ]
      }
    },
    "/jobConfigurations": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "jobConfigurations": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/jobConfiguration"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list jobConfigurations",
        "tags": [
          "jobConfigurations"
        ]
      }
    },
    "/jobConfigurations/{id}": {
      "delete": {
        "operationId": "deleteJobConfiguration",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.jobConfiguration.JobConfiguration",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "JobConfiguration with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a jobConfiguration by ID",
        "tags": [
          "jobConfigurations"
        ]
      },
      "get": {
        "operationId": "getJobConfiguration",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/jobConfiguration"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "JobConfiguration with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a jobConfiguration by ID",
        "tags": [
          "jobConfigurations"
        ]
      },
      "put": {
        "operationId": "updateJobConfiguration",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/jobConfiguration"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.jobConfiguration.JobConfiguration",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "JobConfiguration with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.jobConfiguration.JobConfiguration",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (JobConfiguration)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.jobConfiguration.JobConfiguration",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a jobConfiguration",
        "tags": [
          "jobConfigurations"
        ]
      }
    },
    "/legendSets": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "legendSets": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/legendSet"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list legendSets",
        "tags": [
          "legendSets"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/legendSet"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Created\",\n  \"httpStatusCode\": 201,\n  \"status\": \"OK\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"giXl4xN3V7j\",\n    \"klass\": \"org.hisp.dhis.legend.LegendSet\"\n  }\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Created"
          },
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"gInRJcb4Jde\",\n    \"klass\": \"org.hisp.dhis.legend.LegendSet\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.legend.LegendSet\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot construct instance of `org.hisp.dhis.user.User` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('nFu1RwaXoyi')\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 644] (through reference chain: org.hisp.dhis.legend.LegendSet[\\\"lastUpdatedBy\\\"])\"\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create legendSets",
        "tags": [
          "legendSets"
        ]
      }
    },
    "/legendSets/{id}": {
      "delete": {
        "operationId": "deleteLegendSet",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.legendSet.LegendSet",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "LegendSet with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a legendSet by ID",
        "tags": [
          "legendSets"
        ]
      },
      "get": {
        "operationId": "getLegendSet",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/legendSet"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "LegendSet with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a legendSet by ID",
        "tags": [
          "legendSets"
        ]
      },
      "put": {
        "operationId": "updateLegendSet",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/legendSet"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.legendSet.LegendSet",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "LegendSet with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.legendSet.LegendSet",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (LegendSet)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.legendSet.LegendSet",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a legendSet",
        "tags": [
          "legendSets"
        ]
      }
    },
    "/mapViews": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "mapViews": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/mapView"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list mapViews",
        "tags": [
          "mapViews"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/mapView"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Created\",\n  \"httpStatusCode\": 201,\n  \"status\": \"OK\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"QHNOfVGCLGn\",\n    \"klass\": \"org.hisp.dhis.mapping.MapView\"\n  }\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Created"
          },
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"FbMKh0VhDAc\",\n    \"klass\": \"org.hisp.dhis.mapping.MapView\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `layer`.\",\n        \"mainKlass\": \"org.hisp.dhis.mapping.MapView\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"layer\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot deserialize value of type `java.lang.Integer` from String \\\"string\\\": not a valid Integer value\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 47] (through reference chain: org.hisp.dhis.mapping.MapView[\\\"areaRadius\\\"])\"\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create mapViews",
        "tags": [
          "mapViews"
        ]
      }
    },
    "/mapViews/{id}": {
      "delete": {
        "operationId": "deleteMapView",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.mapView.MapView",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "MapView with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a mapView by ID",
        "tags": [
          "mapViews"
        ]
      },
      "get": {
        "operationId": "getMapView",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/mapView"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "MapView with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a mapView by ID",
        "tags": [
          "mapViews"
        ]
      },
      "put": {
        "operationId": "updateMapView",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/mapView"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.mapView.MapView",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "MapView with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.mapView.MapView",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (MapView)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.mapView.MapView",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a mapView",
        "tags": [
          "mapViews"
        ]
      }
    },
    "/maps": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "maps": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/map"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list maps",
        "tags": [
          "maps"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/map"
              }
            }
          }
        },
        "responses": {
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"could not execute statement\"\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create maps",
        "tags": [
          "maps"
        ]
      }
    },
    "/maps/{id}": {
      "delete": {
        "operationId": "deleteMap",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.map.Map",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Map with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a map by ID",
        "tags": [
          "maps"
        ]
      },
      "get": {
        "operationId": "getMap",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/map"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Map with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a map by ID",
        "tags": [
          "maps"
        ]
      },
      "put": {
        "operationId": "updateMap",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/map"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.map.Map",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Map with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.map.Map",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (Map)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.map.Map",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a map",
        "tags": [
          "maps"
        ]
      }
    },
    "/messageConversations": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "messageConversations": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/messageConversation"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list messageConversations",
        "tags": [
          "messageConversations"
        ]
      }
    },
    "/messageConversations/{id}": {
      "delete": {
        "operationId": "deleteMessageConversation",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.messageConversation.MessageConversation",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "MessageConversation with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a messageConversation by ID",
        "tags": [
          "messageConversations"
        ]
      },
      "get": {
        "operationId": "getMessageConversation",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/messageConversation"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "MessageConversation with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a messageConversation by ID",
        "tags": [
          "messageConversations"
        ]
      },
      "put": {
        "operationId": "updateMessageConversation",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/messageConversation"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.messageConversation.MessageConversation",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "MessageConversation with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.messageConversation.MessageConversation",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (MessageConversation)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.messageConversation.MessageConversation",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a messageConversation",
        "tags": [
          "messageConversations"
        ]
      }
    },
    "/metadata/version": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata/version": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/version"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list metadata/version",
        "tags": [
          "metadata"
        ]
      }
    },
    "/metadata/{id}": {
      "delete": {
        "operationId": "deleteMetadata",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.metadata.Metadata",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Metadata with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a metadata by ID",
        "tags": [
          "metadata"
        ]
      },
      "get": {
        "operationId": "getMetadata",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/metadata"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Metadata with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a metadata by ID",
        "tags": [
          "metadata"
        ]
      },
      "put": {
        "operationId": "updateMetadata",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/metadata"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.metadata.Metadata",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Metadata with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.metadata.Metadata",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (Metadata)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.metadata.Metadata",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a metadata",
        "tags": [
          "metadata"
        ]
      }
    },
    "/minMaxDataElements": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "minMaxDataElements": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/minMaxDataElement"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list minMaxDataElements",
        "tags": [
          "minMaxDataElements"
        ]
      }
    },
    "/minMaxDataElements/{id}": {
      "delete": {
        "operationId": "deleteMinMaxDataElement",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.minMaxDataElement.MinMaxDataElement",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "MinMaxDataElement with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a minMaxDataElement by ID",
        "tags": [
          "minMaxDataElements"
        ]
      },
      "get": {
        "operationId": "getMinMaxDataElement",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/minMaxDataElement"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "MinMaxDataElement with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a minMaxDataElement by ID",
        "tags": [
          "minMaxDataElements"
        ]
      },
      "put": {
        "operationId": "updateMinMaxDataElement",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/minMaxDataElement"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.minMaxDataElement.MinMaxDataElement",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "MinMaxDataElement with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.minMaxDataElement.MinMaxDataElement",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (MinMaxDataElement)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.minMaxDataElement.MinMaxDataElement",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a minMaxDataElement",
        "tags": [
          "minMaxDataElements"
        ]
      }
    },
    "/oAuth2Clients": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "oAuth2Clients": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/oAuth2Client"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list oAuth2Clients",
        "tags": [
          "oAuth2Clients"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/oAuth2Client"
              }
            }
          }
        },
        "responses": {
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"Epy2rRMOufk\",\n    \"klass\": \"org.hisp.dhis.security.oauth2.OAuth2Client\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.security.oauth2.OAuth2Client\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot construct instance of `org.hisp.dhis.user.User` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('HV1ghpqiKPn')\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 370] (through reference chain: org.hisp.dhis.security.oauth2.OAuth2Client[\\\"lastUpdatedBy\\\"])\"\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create oAuth2Clients",
        "tags": [
          "oAuth2Clients"
        ]
      }
    },
    "/oAuth2Clients/{id}": {
      "delete": {
        "operationId": "deleteOAuth2Client",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.oAuth2Client.OAuth2Client",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "OAuth2Client with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a oAuth2Client by ID",
        "tags": [
          "oAuth2Clients"
        ]
      },
      "get": {
        "operationId": "getOAuth2Client",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/oAuth2Client"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "OAuth2Client with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a oAuth2Client by ID",
        "tags": [
          "oAuth2Clients"
        ]
      },
      "put": {
        "operationId": "updateOAuth2Client",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/oAuth2Client"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.oAuth2Client.OAuth2Client",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "OAuth2Client with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.oAuth2Client.OAuth2Client",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (OAuth2Client)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.oAuth2Client.OAuth2Client",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a oAuth2Client",
        "tags": [
          "oAuth2Clients"
        ]
      }
    },
    "/optionGroupSets": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "optionGroupSets": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/optionGroupSet"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list optionGroupSets",
        "tags": [
          "optionGroupSets"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/optionGroupSet"
              }
            }
          }
        },
        "responses": {
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"Nq85S5jfvnM\",\n    \"klass\": \"org.hisp.dhis.option.OptionGroupSet\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.option.OptionGroupSet\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot construct instance of `org.hisp.dhis.user.User` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('0xvS7L5UdBv')\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 468] (through reference chain: org.hisp.dhis.option.OptionGroupSet[\\\"lastUpdatedBy\\\"])\"\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create optionGroupSets",
        "tags": [
          "optionGroupSets"
        ]
      }
    },
    "/optionGroupSets/{id}": {
      "delete": {
        "operationId": "deleteOptionGroupSet",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.optionGroupSet.OptionGroupSet",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "OptionGroupSet with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a optionGroupSet by ID",
        "tags": [
          "optionGroupSets"
        ]
      },
      "get": {
        "operationId": "getOptionGroupSet",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/optionGroupSet"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "OptionGroupSet with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a optionGroupSet by ID",
        "tags": [
          "optionGroupSets"
        ]
      },
      "put": {
        "operationId": "updateOptionGroupSet",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/optionGroupSet"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.optionGroupSet.OptionGroupSet",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "OptionGroupSet with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.optionGroupSet.OptionGroupSet",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (OptionGroupSet)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.optionGroupSet.OptionGroupSet",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a optionGroupSet",
        "tags": [
          "optionGroupSets"
        ]
      }
    },
    "/optionGroups": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "optionGroups": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/optionGroup"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list optionGroups",
        "tags": [
          "optionGroups"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/optionGroup"
              }
            }
          }
        },
        "responses": {
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"pgl3dNGmZ8f\",\n    \"klass\": \"org.hisp.dhis.option.OptionGroup\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.option.OptionGroup\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      },\n      {\n        \"message\": \"Missing required property `shortName`.\",\n        \"mainKlass\": \"org.hisp.dhis.option.OptionGroup\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"shortName\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot construct instance of `org.hisp.dhis.user.User` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('hskgIVRFyw6')\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 408] (through reference chain: org.hisp.dhis.option.OptionGroup[\\\"lastUpdatedBy\\\"])\"\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create optionGroups",
        "tags": [
          "optionGroups"
        ]
      }
    },
    "/optionGroups/{id}": {
      "delete": {
        "operationId": "deleteOptionGroup",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.optionGroup.OptionGroup",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "OptionGroup with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a optionGroup by ID",
        "tags": [
          "optionGroups"
        ]
      },
      "get": {
        "operationId": "getOptionGroup",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/optionGroup"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "OptionGroup with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a optionGroup by ID",
        "tags": [
          "optionGroups"
        ]
      },
      "put": {
        "operationId": "updateOptionGroup",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/optionGroup"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.optionGroup.OptionGroup",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "OptionGroup with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.optionGroup.OptionGroup",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (OptionGroup)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.optionGroup.OptionGroup",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a optionGroup",
        "tags": [
          "optionGroups"
        ]
      }
    },
    "/optionSets": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "optionSets": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/optionSet"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list optionSets",
        "tags": [
          "optionSets"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/optionSet"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Created\",\n  \"httpStatusCode\": 201,\n  \"status\": \"OK\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"vmKR7fCAMha\",\n    \"klass\": \"org.hisp.dhis.option.OptionSet\"\n  }\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Created"
          },
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"pazvQQK9Bg5\",\n    \"klass\": \"org.hisp.dhis.option.OptionSet\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `valueType`.\",\n        \"mainKlass\": \"org.hisp.dhis.option.OptionSet\",\n        \"errorKlass\": \"org.hisp.dhis.common.ValueType\",\n        \"errorProperty\": \"valueType\",\n        \"errorCode\": \"E4000\"\n      },\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.option.OptionSet\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot construct instance of `org.hisp.dhis.user.User` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('IGt3TyUC48a')\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 644] (through reference chain: org.hisp.dhis.option.OptionSet[\\\"lastUpdatedBy\\\"])\"\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create optionSets",
        "tags": [
          "optionSets"
        ]
      }
    },
    "/optionSets/{id}": {
      "delete": {
        "operationId": "deleteOptionSet",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.optionSet.OptionSet",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "OptionSet with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a optionSet by ID",
        "tags": [
          "optionSets"
        ]
      },
      "get": {
        "operationId": "getOptionSet",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/optionSet"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "OptionSet with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a optionSet by ID",
        "tags": [
          "optionSets"
        ]
      },
      "put": {
        "operationId": "updateOptionSet",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/optionSet"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.optionSet.OptionSet",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "OptionSet with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.optionSet.OptionSet",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (OptionSet)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.optionSet.OptionSet",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a optionSet",
        "tags": [
          "optionSets"
        ]
      }
    },
    "/options": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "options": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/option"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list options",
        "tags": [
          "options"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/option"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Created\",\n  \"httpStatusCode\": 201,\n  \"status\": \"OK\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"kqeEUQ32K4o\",\n    \"klass\": \"org.hisp.dhis.option.Option\"\n  }\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Created"
          },
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"nE1pxRiIdzs\",\n    \"klass\": \"org.hisp.dhis.option.Option\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `code`.\",\n        \"mainKlass\": \"org.hisp.dhis.option.Option\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"code\",\n        \"errorCode\": \"E4000\"\n      },\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.option.Option\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot construct instance of `org.hisp.dhis.user.User` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('oPN9PS6J92N')\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 1369] (through reference chain: org.hisp.dhis.option.Option[\\\"lastUpdatedBy\\\"])\"\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create options",
        "tags": [
          "options"
        ]
      }
    },
    "/options/{id}": {
      "delete": {
        "operationId": "deleteOption",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.option.Option",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Option with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a option by ID",
        "tags": [
          "options"
        ]
      },
      "get": {
        "operationId": "getOption",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/option"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Option with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a option by ID",
        "tags": [
          "options"
        ]
      },
      "put": {
        "operationId": "updateOption",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/option"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.option.Option",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Option with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.option.Option",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (Option)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.option.Option",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a option",
        "tags": [
          "options"
        ]
      }
    },
    "/organisationUnitGroupSets": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "organisationUnitGroupSets": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/organisationUnitGroupSet"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list organisationUnitGroupSets",
        "tags": [
          "organisationUnitGroupSets"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/organisationUnitGroupSet"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Created\",\n  \"httpStatusCode\": 201,\n  \"status\": \"OK\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"vpDoUBEaetb\",\n    \"klass\": \"org.hisp.dhis.organisationunit.OrganisationUnitGroupSet\"\n  }\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Created"
          },
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"Kr31WWX6Sr4\",\n    \"klass\": \"org.hisp.dhis.organisationunit.OrganisationUnitGroupSet\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.organisationunit.OrganisationUnitGroupSet\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot construct instance of `org.hisp.dhis.user.User` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('yV8iW5bCGAL')\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 1989] (through reference chain: org.hisp.dhis.organisationunit.OrganisationUnitGroupSet[\\\"lastUpdatedBy\\\"])\"\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create organisationUnitGroupSets",
        "tags": [
          "organisationUnitGroupSets"
        ]
      }
    },
    "/organisationUnitGroupSets/{id}": {
      "delete": {
        "operationId": "deleteOrganisationUnitGroupSet",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.organisationUnitGroupSet.OrganisationUnitGroupSet",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "OrganisationUnitGroupSet with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a organisationUnitGroupSet by ID",
        "tags": [
          "organisationUnitGroupSets"
        ]
      },
      "get": {
        "operationId": "getOrganisationUnitGroupSet",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/organisationUnitGroupSet"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "OrganisationUnitGroupSet with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a organisationUnitGroupSet by ID",
        "tags": [
          "organisationUnitGroupSets"
        ]
      },
      "put": {
        "operationId": "updateOrganisationUnitGroupSet",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/organisationUnitGroupSet"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.organisationUnitGroupSet.OrganisationUnitGroupSet",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "OrganisationUnitGroupSet with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.organisationUnitGroupSet.OrganisationUnitGroupSet",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (OrganisationUnitGroupSet)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.organisationUnitGroupSet.OrganisationUnitGroupSet",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a organisationUnitGroupSet",
        "tags": [
          "organisationUnitGroupSets"
        ]
      }
    },
    "/organisationUnitGroups": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "organisationUnitGroups": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/organisationUnitGroup"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list organisationUnitGroups",
        "tags": [
          "organisationUnitGroups"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/organisationUnitGroup"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Created\",\n  \"httpStatusCode\": 201,\n  \"status\": \"OK\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"erBvaoXaCq5\",\n    \"klass\": \"org.hisp.dhis.organisationunit.OrganisationUnitGroup\"\n  }\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Created"
          },
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"Cmn637vh9RJ\",\n    \"klass\": \"org.hisp.dhis.organisationunit.OrganisationUnitGroup\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.organisationunit.OrganisationUnitGroup\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot construct instance of `org.hisp.dhis.user.User` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('ff38Tpkmdkr')\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 1916] (through reference chain: org.hisp.dhis.organisationunit.OrganisationUnitGroup[\\\"lastUpdatedBy\\\"])\"\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create organisationUnitGroups",
        "tags": [
          "organisationUnitGroups"
        ]
      }
    },
    "/organisationUnitGroups/{id}": {
      "delete": {
        "operationId": "deleteOrganisationUnitGroup",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.organisationUnitGroup.OrganisationUnitGroup",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "OrganisationUnitGroup with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a organisationUnitGroup by ID",
        "tags": [
          "organisationUnitGroups"
        ]
      },
      "get": {
        "operationId": "getOrganisationUnitGroup",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/organisationUnitGroup"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "OrganisationUnitGroup with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a organisationUnitGroup by ID",
        "tags": [
          "organisationUnitGroups"
        ]
      },
      "put": {
        "operationId": "updateOrganisationUnitGroup",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/organisationUnitGroup"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.organisationUnitGroup.OrganisationUnitGroup",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "OrganisationUnitGroup with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.organisationUnitGroup.OrganisationUnitGroup",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (OrganisationUnitGroup)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.organisationUnitGroup.OrganisationUnitGroup",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a organisationUnitGroup",
        "tags": [
          "organisationUnitGroups"
        ]
      }
    },
    "/organisationUnitLevels": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "organisationUnitLevels": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/organisationUnitLevel"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list organisationUnitLevels",
        "tags": [
          "organisationUnitLevels"
        ]
      }
    },
    "/organisationUnitLevels/{id}": {
      "delete": {
        "operationId": "deleteOrganisationUnitLevel",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.organisationUnitLevel.OrganisationUnitLevel",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "OrganisationUnitLevel with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a organisationUnitLevel by ID",
        "tags": [
          "organisationUnitLevels"
        ]
      },
      "get": {
        "operationId": "getOrganisationUnitLevel",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/organisationUnitLevel"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "OrganisationUnitLevel with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a organisationUnitLevel by ID",
        "tags": [
          "organisationUnitLevels"
        ]
      },
      "put": {
        "operationId": "updateOrganisationUnitLevel",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/organisationUnitLevel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.organisationUnitLevel.OrganisationUnitLevel",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "OrganisationUnitLevel with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.organisationUnitLevel.OrganisationUnitLevel",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (OrganisationUnitLevel)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.organisationUnitLevel.OrganisationUnitLevel",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a organisationUnitLevel",
        "tags": [
          "organisationUnitLevels"
        ]
      }
    },
    "/organisationUnits": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "organisationUnits": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/organisationUnit"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list organisationUnits",
        "tags": [
          "organisationUnits"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/organisationUnit"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Created\",\n  \"httpStatusCode\": 201,\n  \"status\": \"OK\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"CWKVANx4JP9\",\n    \"klass\": \"org.hisp.dhis.organisationunit.OrganisationUnit\"\n  }\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Created"
          },
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"HhcR4quDTiG\",\n    \"klass\": \"org.hisp.dhis.organisationunit.OrganisationUnit\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.organisationunit.OrganisationUnit\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      },\n      {\n        \"message\": \"Missing required property `shortName`.\",\n        \"mainKlass\": \"org.hisp.dhis.organisationunit.OrganisationUnit\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"shortName\",\n        \"errorCode\": \"E4000\"\n      },\n      {\n        \"message\": \"Missing required property `openingDate`.\",\n        \"mainKlass\": \"org.hisp.dhis.organisationunit.OrganisationUnit\",\n        \"errorKlass\": \"java.util.Date\",\n        \"errorProperty\": \"openingDate\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot construct instance of `org.hisp.dhis.user.User` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('JiucoNEge6x')\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 2842] (through reference chain: org.hisp.dhis.organisationunit.OrganisationUnit[\\\"lastUpdatedBy\\\"])\"\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create organisationUnits",
        "tags": [
          "organisationUnits"
        ]
      }
    },
    "/organisationUnits/{id}": {
      "delete": {
        "operationId": "deleteOrganisationUnit",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.organisationUnit.OrganisationUnit",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "OrganisationUnit with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a organisationUnit by ID",
        "tags": [
          "organisationUnits"
        ]
      },
      "get": {
        "operationId": "getOrganisationUnit",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/organisationUnit"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "OrganisationUnit with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a organisationUnit by ID",
        "tags": [
          "organisationUnits"
        ]
      },
      "put": {
        "operationId": "updateOrganisationUnit",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/organisationUnit"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.organisationUnit.OrganisationUnit",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "OrganisationUnit with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.organisationUnit.OrganisationUnit",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (OrganisationUnit)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.organisationUnit.OrganisationUnit",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a organisationUnit",
        "tags": [
          "organisationUnits"
        ]
      }
    },
    "/predictors": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    },
                    "predictors": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/predictor"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list predictors",
        "tags": [
          "predictors"
        ]
      }
    },
    "/predictors/{id}": {
      "delete": {
        "operationId": "deletePredictor",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.predictor.Predictor",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Predictor with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a predictor by ID",
        "tags": [
          "predictors"
        ]
      },
      "get": {
        "operationId": "getPredictor",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/predictor"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Predictor with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a predictor by ID",
        "tags": [
          "predictors"
        ]
      },
      "put": {
        "operationId": "updatePredictor",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/predictor"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.predictor.Predictor",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Predictor with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.predictor.Predictor",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (Predictor)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.predictor.Predictor",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a predictor",
        "tags": [
          "predictors"
        ]
      }
    },
    "/programDataElements": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    },
                    "programDataElements": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/programDataElement"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list programDataElements",
        "tags": [
          "programDataElements"
        ]
      }
    },
    "/programDataElements/{id}": {
      "delete": {
        "operationId": "deleteProgramDataElement",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.programDataElement.ProgramDataElement",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ProgramDataElement with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a programDataElement by ID",
        "tags": [
          "programDataElements"
        ]
      },
      "get": {
        "operationId": "getProgramDataElement",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/programDataElement"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ProgramDataElement with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a programDataElement by ID",
        "tags": [
          "programDataElements"
        ]
      },
      "put": {
        "operationId": "updateProgramDataElement",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/programDataElement"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.programDataElement.ProgramDataElement",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ProgramDataElement with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.programDataElement.ProgramDataElement",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (ProgramDataElement)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.programDataElement.ProgramDataElement",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a programDataElement",
        "tags": [
          "programDataElements"
        ]
      }
    },
    "/programIndicatorGroups": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    },
                    "programIndicatorGroups": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/programIndicatorGroup"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list programIndicatorGroups",
        "tags": [
          "programIndicatorGroups"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/programIndicatorGroup"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Created\",\n  \"httpStatusCode\": 201,\n  \"status\": \"OK\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"u34agM1WZnu\",\n    \"klass\": \"org.hisp.dhis.program.ProgramIndicatorGroup\"\n  }\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Created"
          },
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"tf0JLyKqBJy\",\n    \"klass\": \"org.hisp.dhis.program.ProgramIndicatorGroup\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.program.ProgramIndicatorGroup\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot construct instance of `org.hisp.dhis.user.User` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('8x6JPtU1Wmg')\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 918] (through reference chain: org.hisp.dhis.program.ProgramIndicatorGroup[\\\"lastUpdatedBy\\\"])\"\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create programIndicatorGroups",
        "tags": [
          "programIndicatorGroups"
        ]
      }
    },
    "/programIndicatorGroups/{id}": {
      "delete": {
        "operationId": "deleteProgramIndicatorGroup",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.programIndicatorGroup.ProgramIndicatorGroup",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ProgramIndicatorGroup with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a programIndicatorGroup by ID",
        "tags": [
          "programIndicatorGroups"
        ]
      },
      "get": {
        "operationId": "getProgramIndicatorGroup",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/programIndicatorGroup"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ProgramIndicatorGroup with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a programIndicatorGroup by ID",
        "tags": [
          "programIndicatorGroups"
        ]
      },
      "put": {
        "operationId": "updateProgramIndicatorGroup",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/programIndicatorGroup"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.programIndicatorGroup.ProgramIndicatorGroup",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ProgramIndicatorGroup with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.programIndicatorGroup.ProgramIndicatorGroup",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (ProgramIndicatorGroup)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.programIndicatorGroup.ProgramIndicatorGroup",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a programIndicatorGroup",
        "tags": [
          "programIndicatorGroups"
        ]
      }
    },
    "/programIndicators": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    },
                    "programIndicators": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/programIndicator"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list programIndicators",
        "tags": [
          "programIndicators"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/programIndicator"
              }
            }
          }
        },
        "responses": {
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"TTUWCJAwVRx\",\n    \"klass\": \"org.hisp.dhis.program.ProgramIndicator\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `program`.\",\n        \"mainKlass\": \"org.hisp.dhis.program.ProgramIndicator\",\n        \"errorKlass\": \"org.hisp.dhis.program.Program\",\n        \"errorProperty\": \"program\",\n        \"errorCode\": \"E4000\"\n      },\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.program.ProgramIndicator\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      },\n      {\n        \"message\": \"Missing required property `shortName`.\",\n        \"mainKlass\": \"org.hisp.dhis.program.ProgramIndicator\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"shortName\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot construct instance of `org.hisp.dhis.program.Program` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('S2saHxqdIs5')\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 255] (through reference chain: org.hisp.dhis.program.ProgramIndicator[\\\"program\\\"])\"\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create programIndicators",
        "tags": [
          "programIndicators"
        ]
      }
    },
    "/programIndicators/{id}": {
      "delete": {
        "operationId": "deleteProgramIndicator",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.programIndicator.ProgramIndicator",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ProgramIndicator with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a programIndicator by ID",
        "tags": [
          "programIndicators"
        ]
      },
      "get": {
        "operationId": "getProgramIndicator",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/programIndicator"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ProgramIndicator with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a programIndicator by ID",
        "tags": [
          "programIndicators"
        ]
      },
      "put": {
        "operationId": "updateProgramIndicator",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/programIndicator"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.programIndicator.ProgramIndicator",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ProgramIndicator with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.programIndicator.ProgramIndicator",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (ProgramIndicator)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.programIndicator.ProgramIndicator",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a programIndicator",
        "tags": [
          "programIndicators"
        ]
      }
    },
    "/programNotificationTemplates": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    },
                    "programNotificationTemplates": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/programNotificationTemplate"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list programNotificationTemplates",
        "tags": [
          "programNotificationTemplates"
        ]
      }
    },
    "/programNotificationTemplates/{id}": {
      "delete": {
        "operationId": "deleteProgramNotificationTemplate",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.programNotificationTemplate.ProgramNotificationTemplate",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ProgramNotificationTemplate with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a programNotificationTemplate by ID",
        "tags": [
          "programNotificationTemplates"
        ]
      },
      "get": {
        "operationId": "getProgramNotificationTemplate",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/programNotificationTemplate"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ProgramNotificationTemplate with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a programNotificationTemplate by ID",
        "tags": [
          "programNotificationTemplates"
        ]
      },
      "put": {
        "operationId": "updateProgramNotificationTemplate",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/programNotificationTemplate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.programNotificationTemplate.ProgramNotificationTemplate",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ProgramNotificationTemplate with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.programNotificationTemplate.ProgramNotificationTemplate",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (ProgramNotificationTemplate)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.programNotificationTemplate.ProgramNotificationTemplate",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a programNotificationTemplate",
        "tags": [
          "programNotificationTemplates"
        ]
      }
    },
    "/programRuleActions": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    },
                    "programRuleActions": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/programRuleAction"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list programRuleActions",
        "tags": [
          "programRuleActions"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/programRuleAction"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Created\",\n  \"httpStatusCode\": 201,\n  \"status\": \"OK\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"XLuM78pDLKu\",\n    \"klass\": \"org.hisp.dhis.programrule.ProgramRuleAction\"\n  }\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Created"
          },
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"jMyiyrOKh8E\",\n    \"klass\": \"org.hisp.dhis.programrule.ProgramRuleAction\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `programRuleActionType`.\",\n        \"mainKlass\": \"org.hisp.dhis.programrule.ProgramRuleAction\",\n        \"errorKlass\": \"org.hisp.dhis.programrule.ProgramRuleActionType\",\n        \"errorProperty\": \"programRuleActionType\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot construct instance of `org.hisp.dhis.dataelement.DataElement` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('pzyk6DJCnZZ')\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 745] (through reference chain: org.hisp.dhis.programrule.ProgramRuleAction[\\\"dataElement\\\"])\"\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create programRuleActions",
        "tags": [
          "programRuleActions"
        ]
      }
    },
    "/programRuleActions/{id}": {
      "delete": {
        "operationId": "deleteProgramRuleAction",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.programRuleAction.ProgramRuleAction",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ProgramRuleAction with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a programRuleAction by ID",
        "tags": [
          "programRuleActions"
        ]
      },
      "get": {
        "operationId": "getProgramRuleAction",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/programRuleAction"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ProgramRuleAction with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a programRuleAction by ID",
        "tags": [
          "programRuleActions"
        ]
      },
      "put": {
        "operationId": "updateProgramRuleAction",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/programRuleAction"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.programRuleAction.ProgramRuleAction",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ProgramRuleAction with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.programRuleAction.ProgramRuleAction",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (ProgramRuleAction)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.programRuleAction.ProgramRuleAction",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a programRuleAction",
        "tags": [
          "programRuleActions"
        ]
      }
    },
    "/programRuleVariables": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    },
                    "programRuleVariables": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/programRuleVariable"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list programRuleVariables",
        "tags": [
          "programRuleVariables"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/programRuleVariable"
              }
            }
          }
        },
        "responses": {
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"AlyNrddNzXn\",\n    \"klass\": \"org.hisp.dhis.programrule.ProgramRuleVariable\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `programRuleVariableSourceType`.\",\n        \"mainKlass\": \"org.hisp.dhis.programrule.ProgramRuleVariable\",\n        \"errorKlass\": \"org.hisp.dhis.programrule.ProgramRuleVariableSourceType\",\n        \"errorProperty\": \"programRuleVariableSourceType\",\n        \"errorCode\": \"E4000\"\n      },\n      {\n        \"message\": \"Missing required property `program`.\",\n        \"mainKlass\": \"org.hisp.dhis.programrule.ProgramRuleVariable\",\n        \"errorKlass\": \"org.hisp.dhis.program.Program\",\n        \"errorProperty\": \"program\",\n        \"errorCode\": \"E4000\"\n      },\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.programrule.ProgramRuleVariable\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot construct instance of `org.hisp.dhis.program.Program` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('LsifP7cc0Lr')\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 255] (through reference chain: org.hisp.dhis.programrule.ProgramRuleVariable[\\\"program\\\"])\"\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create programRuleVariables",
        "tags": [
          "programRuleVariables"
        ]
      }
    },
    "/programRuleVariables/{id}": {
      "delete": {
        "operationId": "deleteProgramRuleVariable",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.programRuleVariable.ProgramRuleVariable",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ProgramRuleVariable with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a programRuleVariable by ID",
        "tags": [
          "programRuleVariables"
        ]
      },
      "get": {
        "operationId": "getProgramRuleVariable",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/programRuleVariable"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ProgramRuleVariable with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a programRuleVariable by ID",
        "tags": [
          "programRuleVariables"
        ]
      },
      "put": {
        "operationId": "updateProgramRuleVariable",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/programRuleVariable"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.programRuleVariable.ProgramRuleVariable",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ProgramRuleVariable with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.programRuleVariable.ProgramRuleVariable",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (ProgramRuleVariable)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.programRuleVariable.ProgramRuleVariable",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a programRuleVariable",
        "tags": [
          "programRuleVariables"
        ]
      }
    },
    "/programRules": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    },
                    "programRules": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/programRule"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list programRules",
        "tags": [
          "programRules"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/programRule"
              }
            }
          }
        },
        "responses": {
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"e0ZhNflxPPR\",\n    \"klass\": \"org.hisp.dhis.programrule.ProgramRule\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `program`.\",\n        \"mainKlass\": \"org.hisp.dhis.programrule.ProgramRule\",\n        \"errorKlass\": \"org.hisp.dhis.program.Program\",\n        \"errorProperty\": \"program\",\n        \"errorCode\": \"E4000\"\n      },\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.programrule.ProgramRule\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot construct instance of `org.hisp.dhis.program.Program` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('ZHOkOdf5w6a')\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 255] (through reference chain: org.hisp.dhis.programrule.ProgramRule[\\\"program\\\"])\"\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create programRules",
        "tags": [
          "programRules"
        ]
      }
    },
    "/programRules/{id}": {
      "delete": {
        "operationId": "deleteProgramRule",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.programRule.ProgramRule",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ProgramRule with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a programRule by ID",
        "tags": [
          "programRules"
        ]
      },
      "get": {
        "operationId": "getProgramRule",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/programRule"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ProgramRule with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a programRule by ID",
        "tags": [
          "programRules"
        ]
      },
      "put": {
        "operationId": "updateProgramRule",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/programRule"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.programRule.ProgramRule",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ProgramRule with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.programRule.ProgramRule",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (ProgramRule)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.programRule.ProgramRule",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a programRule",
        "tags": [
          "programRules"
        ]
      }
    },
    "/programSections": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    },
                    "programSections": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/programSection"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list programSections",
        "tags": [
          "programSections"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/programSection"
              }
            }
          }
        },
        "responses": {
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"MpWQSt4GyrD\",\n    \"klass\": \"org.hisp.dhis.program.ProgramSection\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `sortOrder`.\",\n        \"mainKlass\": \"org.hisp.dhis.program.ProgramSection\",\n        \"errorKlass\": \"java.lang.Integer\",\n        \"errorProperty\": \"sortOrder\",\n        \"errorCode\": \"E4000\"\n      },\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.program.ProgramSection\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot deserialize value of type `java.lang.Integer` from String \\\"string\\\": not a valid Integer value\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 15] (through reference chain: org.hisp.dhis.program.ProgramSection[\\\"sortOrder\\\"])\"\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create programSections",
        "tags": [
          "programSections"
        ]
      }
    },
    "/programSections/{id}": {
      "delete": {
        "operationId": "deleteProgramSection",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.programSection.ProgramSection",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ProgramSection with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a programSection by ID",
        "tags": [
          "programSections"
        ]
      },
      "get": {
        "operationId": "getProgramSection",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/programSection"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ProgramSection with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a programSection by ID",
        "tags": [
          "programSections"
        ]
      },
      "put": {
        "operationId": "updateProgramSection",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/programSection"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.programSection.ProgramSection",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ProgramSection with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.programSection.ProgramSection",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (ProgramSection)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.programSection.ProgramSection",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a programSection",
        "tags": [
          "programSections"
        ]
      }
    },
    "/programStageSections": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    },
                    "programStageSections": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/programStageSection"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list programStageSections",
        "tags": [
          "programStageSections"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/programStageSection"
              }
            }
          }
        },
        "responses": {
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"lLUqRalk4kg\",\n    \"klass\": \"org.hisp.dhis.program.ProgramStageSection\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `sortOrder`.\",\n        \"mainKlass\": \"org.hisp.dhis.program.ProgramStageSection\",\n        \"errorKlass\": \"java.lang.Integer\",\n        \"errorProperty\": \"sortOrder\",\n        \"errorCode\": \"E4000\"\n      },\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.program.ProgramStageSection\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot deserialize value of type `java.lang.Integer` from String \\\"string\\\": not a valid Integer value\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 257] (through reference chain: org.hisp.dhis.program.ProgramStageSection[\\\"sortOrder\\\"])\"\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create programStageSections",
        "tags": [
          "programStageSections"
        ]
      }
    },
    "/programStageSections/{id}": {
      "delete": {
        "operationId": "deleteProgramStageSection",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.programStageSection.ProgramStageSection",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ProgramStageSection with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a programStageSection by ID",
        "tags": [
          "programStageSections"
        ]
      },
      "get": {
        "operationId": "getProgramStageSection",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/programStageSection"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ProgramStageSection with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a programStageSection by ID",
        "tags": [
          "programStageSections"
        ]
      },
      "put": {
        "operationId": "updateProgramStageSection",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/programStageSection"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.programStageSection.ProgramStageSection",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ProgramStageSection with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.programStageSection.ProgramStageSection",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (ProgramStageSection)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.programStageSection.ProgramStageSection",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a programStageSection",
        "tags": [
          "programStageSections"
        ]
      }
    },
    "/programStages": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    },
                    "programStages": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/programStage"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list programStages",
        "tags": [
          "programStages"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/programStage"
              }
            }
          }
        },
        "responses": {
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"could not execute statement\"\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create programStages",
        "tags": [
          "programStages"
        ]
      }
    },
    "/programStages/{id}": {
      "delete": {
        "operationId": "deleteProgramStage",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.programStage.ProgramStage",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ProgramStage with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a programStage by ID",
        "tags": [
          "programStages"
        ]
      },
      "get": {
        "operationId": "getProgramStage",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/programStage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ProgramStage with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a programStage by ID",
        "tags": [
          "programStages"
        ]
      },
      "put": {
        "operationId": "updateProgramStage",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/programStage"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.programStage.ProgramStage",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ProgramStage with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.programStage.ProgramStage",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (ProgramStage)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.programStage.ProgramStage",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a programStage",
        "tags": [
          "programStages"
        ]
      }
    },
    "/programTrackedEntityAttributeGroups": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    },
                    "programTrackedEntityAttributeGroups": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/programTrackedEntityAttributeGroup"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list programTrackedEntityAttributeGroups",
        "tags": [
          "programTrackedEntityAttributeGroups"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/programTrackedEntityAttributeGroup"
              }
            }
          }
        },
        "responses": {
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"yReyNuZMOwk\",\n    \"klass\": \"org.hisp.dhis.program.ProgramTrackedEntityAttributeGroup\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.program.ProgramTrackedEntityAttributeGroup\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot construct instance of `org.hisp.dhis.user.User` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('NSoSY7VHQH4')\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 361] (through reference chain: org.hisp.dhis.program.ProgramTrackedEntityAttributeGroup[\\\"lastUpdatedBy\\\"])\"\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create programTrackedEntityAttributeGroups",
        "tags": [
          "programTrackedEntityAttributeGroups"
        ]
      }
    },
    "/programTrackedEntityAttributeGroups/{id}": {
      "delete": {
        "operationId": "deleteProgramTrackedEntityAttributeGroup",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.programTrackedEntityAttributeGroup.ProgramTrackedEntityAttributeGroup",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ProgramTrackedEntityAttributeGroup with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a programTrackedEntityAttributeGroup by ID",
        "tags": [
          "programTrackedEntityAttributeGroups"
        ]
      },
      "get": {
        "operationId": "getProgramTrackedEntityAttributeGroup",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/programTrackedEntityAttributeGroup"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ProgramTrackedEntityAttributeGroup with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a programTrackedEntityAttributeGroup by ID",
        "tags": [
          "programTrackedEntityAttributeGroups"
        ]
      },
      "put": {
        "operationId": "updateProgramTrackedEntityAttributeGroup",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/programTrackedEntityAttributeGroup"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.programTrackedEntityAttributeGroup.ProgramTrackedEntityAttributeGroup",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ProgramTrackedEntityAttributeGroup with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.programTrackedEntityAttributeGroup.ProgramTrackedEntityAttributeGroup",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (ProgramTrackedEntityAttributeGroup)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.programTrackedEntityAttributeGroup.ProgramTrackedEntityAttributeGroup",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a programTrackedEntityAttributeGroup",
        "tags": [
          "programTrackedEntityAttributeGroups"
        ]
      }
    },
    "/programs": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    },
                    "programs": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/program"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list programs",
        "tags": [
          "programs"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/program"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Created\",\n  \"httpStatusCode\": 201,\n  \"status\": \"OK\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"hOTxxhQAAgI\",\n    \"klass\": \"org.hisp.dhis.program.Program\"\n  }\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Created"
          },
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"dcTcvxOusdF\",\n    \"klass\": \"org.hisp.dhis.program.Program\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.program.Program\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      },\n      {\n        \"message\": \"Missing required property `shortName`.\",\n        \"mainKlass\": \"org.hisp.dhis.program.Program\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"shortName\",\n        \"errorCode\": \"E4000\"\n      },\n      {\n        \"message\": \"Missing required property `programType`.\",\n        \"mainKlass\": \"org.hisp.dhis.program.Program\",\n        \"errorKlass\": \"org.hisp.dhis.program.ProgramType\",\n        \"errorProperty\": \"programType\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot construct instance of `org.hisp.dhis.category.CategoryCombo` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('q28Whf8Ib65')\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 202] (through reference chain: org.hisp.dhis.program.Program[\\\"categoryCombo\\\"])\"\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create programs",
        "tags": [
          "programs"
        ]
      }
    },
    "/programs/{id}": {
      "delete": {
        "operationId": "deleteProgram",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.program.Program",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Program with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a program by ID",
        "tags": [
          "programs"
        ]
      },
      "get": {
        "operationId": "getProgram",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/program"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Program with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a program by ID",
        "tags": [
          "programs"
        ]
      },
      "put": {
        "operationId": "updateProgram",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/program"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.program.Program",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Program with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.program.Program",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (Program)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.program.Program",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a program",
        "tags": [
          "programs"
        ]
      }
    },
    "/pushAnalysis": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    },
                    "pushAnalysis": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/pushAnalysi"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list pushAnalysis",
        "tags": [
          "pushAnalysis"
        ]
      }
    },
    "/pushAnalysis/{id}": {
      "delete": {
        "operationId": "deletePushAnalysi",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.pushAnalysi.PushAnalysi",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "PushAnalysi with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a pushAnalysi by ID",
        "tags": [
          "pushAnalysis"
        ]
      },
      "get": {
        "operationId": "getPushAnalysi",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/pushAnalysi"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "PushAnalysi with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a pushAnalysi by ID",
        "tags": [
          "pushAnalysis"
        ]
      },
      "put": {
        "operationId": "updatePushAnalysi",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/pushAnalysi"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.pushAnalysi.PushAnalysi",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "PushAnalysi with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.pushAnalysi.PushAnalysi",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (PushAnalysi)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.pushAnalysi.PushAnalysi",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a pushAnalysi",
        "tags": [
          "pushAnalysis"
        ]
      }
    },
    "/relationshipTypes": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    },
                    "relationshipTypes": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/relationshipType"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list relationshipTypes",
        "tags": [
          "relationshipTypes"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/relationshipType"
              }
            }
          }
        },
        "responses": {
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"iRxUCXqPIpZ\",\n    \"klass\": \"org.hisp.dhis.relationship.RelationshipType\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `leftConstraint`.\",\n        \"mainKlass\": \"org.hisp.dhis.relationship.RelationshipType\",\n        \"errorCode\": \"E4000\"\n      },\n      {\n        \"message\": \"Missing required property `rightConstraint`.\",\n        \"mainKlass\": \"org.hisp.dhis.relationship.RelationshipType\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot construct instance of `org.hisp.dhis.user.User` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('nJ7dZzKDlz5')\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 940] (through reference chain: org.hisp.dhis.relationship.RelationshipType[\\\"lastUpdatedBy\\\"])\"\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create relationshipTypes",
        "tags": [
          "relationshipTypes"
        ]
      }
    },
    "/relationshipTypes/{id}": {
      "delete": {
        "operationId": "deleteRelationshipType",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.relationshipType.RelationshipType",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "RelationshipType with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a relationshipType by ID",
        "tags": [
          "relationshipTypes"
        ]
      },
      "get": {
        "operationId": "getRelationshipType",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/relationshipType"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "RelationshipType with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a relationshipType by ID",
        "tags": [
          "relationshipTypes"
        ]
      },
      "put": {
        "operationId": "updateRelationshipType",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/relationshipType"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.relationshipType.RelationshipType",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "RelationshipType with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.relationshipType.RelationshipType",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (RelationshipType)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.relationshipType.RelationshipType",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a relationshipType",
        "tags": [
          "relationshipTypes"
        ]
      }
    },
    "/reportTables": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    },
                    "reportTables": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/reportTable"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list reportTables",
        "tags": [
          "reportTables"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/reportTable"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Created\",\n  \"httpStatusCode\": 201,\n  \"status\": \"OK\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"QshPuz3cu4h\",\n    \"klass\": \"org.hisp.dhis.reporttable.ReportTable\"\n  }\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Created"
          },
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"fINnJjt9TZy\",\n    \"klass\": \"org.hisp.dhis.reporttable.ReportTable\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.reporttable.ReportTable\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot construct instance of `org.hisp.dhis.user.User` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('yHAKLKdDm2a')\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 2897] (through reference chain: org.hisp.dhis.reporttable.ReportTable[\\\"lastUpdatedBy\\\"])\"\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create reportTables",
        "tags": [
          "reportTables"
        ]
      }
    },
    "/reportTables/{id}": {
      "delete": {
        "operationId": "deleteReportTable",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.reportTable.ReportTable",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ReportTable with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a reportTable by ID",
        "tags": [
          "reportTables"
        ]
      },
      "get": {
        "operationId": "getReportTable",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/reportTable"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ReportTable with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a reportTable by ID",
        "tags": [
          "reportTables"
        ]
      },
      "put": {
        "operationId": "updateReportTable",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/reportTable"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.reportTable.ReportTable",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ReportTable with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.reportTable.ReportTable",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (ReportTable)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.reportTable.ReportTable",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a reportTable",
        "tags": [
          "reportTables"
        ]
      }
    },
    "/reports": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    },
                    "reports": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/report"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list reports",
        "tags": [
          "reports"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/report"
              }
            }
          }
        },
        "responses": {
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"St6MNTLJUcO\",\n    \"klass\": \"org.hisp.dhis.report.Report\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.report.Report\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"could not execute statement\"\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create reports",
        "tags": [
          "reports"
        ]
      }
    },
    "/reports/{id}": {
      "delete": {
        "operationId": "deleteReport",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.report.Report",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Report with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a report by ID",
        "tags": [
          "reports"
        ]
      },
      "get": {
        "operationId": "getReport",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/report"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Report with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a report by ID",
        "tags": [
          "reports"
        ]
      },
      "put": {
        "operationId": "updateReport",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/report"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.report.Report",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Report with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.report.Report",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (Report)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.report.Report",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a report",
        "tags": [
          "reports"
        ]
      }
    },
    "/sections": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    },
                    "sections": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/section"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list sections",
        "tags": [
          "sections"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/section"
              }
            }
          }
        },
        "responses": {
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"MCfyqUQTq4H\",\n    \"klass\": \"org.hisp.dhis.dataset.Section\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `dataSet`.\",\n        \"mainKlass\": \"org.hisp.dhis.dataset.Section\",\n        \"errorKlass\": \"org.hisp.dhis.dataset.DataSet\",\n        \"errorProperty\": \"dataSet\",\n        \"errorCode\": \"E4000\"\n      },\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.dataset.Section\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot construct instance of `org.hisp.dhis.dataset.DataSet` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('L6rvxbIQpzT')\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 13] (through reference chain: org.hisp.dhis.dataset.Section[\\\"dataSet\\\"])\"\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create sections",
        "tags": [
          "sections"
        ]
      }
    },
    "/sections/{id}": {
      "delete": {
        "operationId": "deleteSection",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.section.Section",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Section with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a section by ID",
        "tags": [
          "sections"
        ]
      },
      "get": {
        "operationId": "getSection",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/section"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Section with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a section by ID",
        "tags": [
          "sections"
        ]
      },
      "put": {
        "operationId": "updateSection",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/section"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.section.Section",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Section with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.section.Section",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (Section)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.section.Section",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a section",
        "tags": [
          "sections"
        ]
      }
    },
    "/smsCommands": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    },
                    "smsCommands": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/smsCommand"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list smsCommands",
        "tags": [
          "smsCommands"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/smsCommand"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Created\",\n  \"httpStatusCode\": 201,\n  \"status\": \"OK\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"fyITrPlTomf\",\n    \"klass\": \"org.hisp.dhis.sms.command.SMSCommand\"\n  }\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Created"
          }
        },
        "summary": "create smsCommands",
        "tags": [
          "smsCommands"
        ]
      }
    },
    "/smsCommands/{id}": {
      "delete": {
        "operationId": "deleteSmsCommand",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.smsCommand.SmsCommand",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "SmsCommand with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a smsCommand by ID",
        "tags": [
          "smsCommands"
        ]
      },
      "get": {
        "operationId": "getSmsCommand",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/smsCommand"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "SmsCommand with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a smsCommand by ID",
        "tags": [
          "smsCommands"
        ]
      },
      "put": {
        "operationId": "updateSmsCommand",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/smsCommand"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.smsCommand.SmsCommand",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "SmsCommand with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.smsCommand.SmsCommand",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (SmsCommand)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.smsCommand.SmsCommand",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a smsCommand",
        "tags": [
          "smsCommands"
        ]
      }
    },
    "/sqlViews": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    },
                    "sqlViews": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/sqlView"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list sqlViews",
        "tags": [
          "sqlViews"
        ]
      },
      "post": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/preheatCache"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/strategy"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/mergeMode"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/sqlView"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Created\",\n  \"httpStatusCode\": 201,\n  \"status\": \"OK\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"RY51Lpa78Ah\",\n    \"klass\": \"org.hisp.dhis.sqlview.SqlView\"\n  }\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Created"
          },
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"piRVZq6uej4\",\n    \"klass\": \"org.hisp.dhis.sqlview.SqlView\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `sqlQuery`.\",\n        \"mainKlass\": \"org.hisp.dhis.sqlview.SqlView\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"sqlQuery\",\n        \"errorCode\": \"E4000\"\n      },\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.sqlview.SqlView\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot construct instance of `org.hisp.dhis.user.User` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('jeQgLdWMpUW')\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 908] (through reference chain: org.hisp.dhis.sqlview.SqlView[\\\"lastUpdatedBy\\\"])\"\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create sqlViews",
        "tags": [
          "sqlViews"
        ]
      }
    },
    "/sqlViews/{id}": {
      "delete": {
        "operationId": "deleteSqlView",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.sqlView.SqlView",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "SqlView with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a sqlView by ID",
        "tags": [
          "sqlViews"
        ]
      },
      "get": {
        "operationId": "getSqlView",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/sqlView"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "SqlView with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a sqlView by ID",
        "tags": [
          "sqlViews"
        ]
      },
      "put": {
        "operationId": "updateSqlView",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/sqlView"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.sqlView.SqlView",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "SqlView with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.sqlView.SqlView",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (SqlView)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.sqlView.SqlView",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a sqlView",
        "tags": [
          "sqlViews"
        ]
      }
    },
    "/trackedEntityAttributes": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    },
                    "trackedEntityAttributes": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/trackedEntityAttribute"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list trackedEntityAttributes",
        "tags": [
          "trackedEntityAttributes"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/trackedEntityAttribute"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Created\",\n  \"httpStatusCode\": 201,\n  \"status\": \"OK\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"XTODygqVz9q\",\n    \"klass\": \"org.hisp.dhis.trackedentity.TrackedEntityAttribute\"\n  }\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Created"
          },
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"BTd8Ic3rAip\",\n    \"klass\": \"org.hisp.dhis.trackedentity.TrackedEntityAttribute\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `aggregationType`.\",\n        \"mainKlass\": \"org.hisp.dhis.trackedentity.TrackedEntityAttribute\",\n        \"errorKlass\": \"org.hisp.dhis.analytics.AggregationType\",\n        \"errorProperty\": \"aggregationType\",\n        \"errorCode\": \"E4000\"\n      },\n      {\n        \"message\": \"Missing required property `valueType`.\",\n        \"mainKlass\": \"org.hisp.dhis.trackedentity.TrackedEntityAttribute\",\n        \"errorKlass\": \"org.hisp.dhis.common.ValueType\",\n        \"errorProperty\": \"valueType\",\n        \"errorCode\": \"E4000\"\n      },\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.trackedentity.TrackedEntityAttribute\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot construct instance of `org.hisp.dhis.user.User` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('yTJsp3CoqyL')\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 2219] (through reference chain: org.hisp.dhis.trackedentity.TrackedEntityAttribute[\\\"lastUpdatedBy\\\"])\"\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create trackedEntityAttributes",
        "tags": [
          "trackedEntityAttributes"
        ]
      }
    },
    "/trackedEntityAttributes/{id}": {
      "delete": {
        "operationId": "deleteTrackedEntityAttribute",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.trackedEntityAttribute.TrackedEntityAttribute",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "TrackedEntityAttribute with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a trackedEntityAttribute by ID",
        "tags": [
          "trackedEntityAttributes"
        ]
      },
      "get": {
        "operationId": "getTrackedEntityAttribute",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/trackedEntityAttribute"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "TrackedEntityAttribute with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a trackedEntityAttribute by ID",
        "tags": [
          "trackedEntityAttributes"
        ]
      },
      "put": {
        "operationId": "updateTrackedEntityAttribute",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/trackedEntityAttribute"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.trackedEntityAttribute.TrackedEntityAttribute",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "TrackedEntityAttribute with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.trackedEntityAttribute.TrackedEntityAttribute",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (TrackedEntityAttribute)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.trackedEntityAttribute.TrackedEntityAttribute",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a trackedEntityAttribute",
        "tags": [
          "trackedEntityAttributes"
        ]
      }
    },
    "/trackedEntityInstances": {
      "get": {
        "description": "list tracked entity instances (TEIs)",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    },
                    "trackedEntityInstances": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/trackedEntityInstance"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    }
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "At least one organisation unit must be specified",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "list trackedEntityInstances",
        "tags": [
          "trackedEntityInstances"
        ]
      },
      "post": {
        "description": "create a new tracked entity instance",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/preheatCache"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/strategy"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/mergeMode"
          }
        ],
        "responses": {},
        "tags": [
          "trackedEntityInstances"
        ]
      }
    },
    "/trackedEntityInstances/{id}": {
      "delete": {
        "operationId": "deleteTrackedEntityInstance",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.trackedEntityInstance.TrackedEntityInstance",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "TrackedEntityInstance with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a trackedEntityInstance by ID",
        "tags": [
          "trackedEntityInstances"
        ]
      },
      "get": {
        "operationId": "getTrackedEntityInstance",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/trackedEntityInstance"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "TrackedEntityInstance with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a trackedEntityInstance by ID",
        "tags": [
          "trackedEntityInstances"
        ]
      },
      "put": {
        "operationId": "updateTrackedEntityInstance",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/trackedEntityInstance"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.trackedEntityInstance.TrackedEntityInstance",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "TrackedEntityInstance with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.trackedEntityInstance.TrackedEntityInstance",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (TrackedEntityInstance)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.trackedEntityInstance.TrackedEntityInstance",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a trackedEntityInstance",
        "tags": [
          "trackedEntityInstances"
        ]
      }
    },
    "/trackedEntityTypes": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    },
                    "trackedEntityTypes": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/trackedEntityType"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list trackedEntityTypes",
        "tags": [
          "trackedEntityTypes"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/trackedEntityType"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Created\",\n  \"httpStatusCode\": 201,\n  \"status\": \"OK\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"kgKu2cxfwdy\",\n    \"klass\": \"org.hisp.dhis.trackedentity.TrackedEntityType\"\n  }\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Created"
          },
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"ZjB8dFDD2HI\",\n    \"klass\": \"org.hisp.dhis.trackedentity.TrackedEntityType\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.trackedentity.TrackedEntityType\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot construct instance of `org.hisp.dhis.user.User` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('EnN7GxDdxk3')\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 1733] (through reference chain: org.hisp.dhis.trackedentity.TrackedEntityType[\\\"lastUpdatedBy\\\"])\"\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create trackedEntityTypes",
        "tags": [
          "trackedEntityTypes"
        ]
      }
    },
    "/trackedEntityTypes/{id}": {
      "delete": {
        "operationId": "deleteTrackedEntityType",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.trackedEntityType.TrackedEntityType",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "TrackedEntityType with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a trackedEntityType by ID",
        "tags": [
          "trackedEntityTypes"
        ]
      },
      "get": {
        "operationId": "getTrackedEntityType",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/trackedEntityType"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "TrackedEntityType with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a trackedEntityType by ID",
        "tags": [
          "trackedEntityTypes"
        ]
      },
      "put": {
        "operationId": "updateTrackedEntityType",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/trackedEntityType"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.trackedEntityType.TrackedEntityType",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "TrackedEntityType with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.trackedEntityType.TrackedEntityType",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (TrackedEntityType)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.trackedEntityType.TrackedEntityType",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a trackedEntityType",
        "tags": [
          "trackedEntityTypes"
        ]
      }
    },
    "/userGroups": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    },
                    "userGroups": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/userGroup"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list userGroups",
        "tags": [
          "userGroups"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/userGroup"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Created\",\n  \"httpStatusCode\": 201,\n  \"status\": \"OK\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"BRsdsJ3nNlO\",\n    \"klass\": \"org.hisp.dhis.user.UserGroup\"\n  }\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Created"
          },
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"pyKerJLdC7C\",\n    \"klass\": \"org.hisp.dhis.user.UserGroup\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.user.UserGroup\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot construct instance of `org.hisp.dhis.user.User` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('sKxA983Ir3C')\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 605] (through reference chain: org.hisp.dhis.user.UserGroup[\\\"lastUpdatedBy\\\"])\"\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create userGroups",
        "tags": [
          "userGroups"
        ]
      }
    },
    "/userGroups/{id}": {
      "delete": {
        "operationId": "deleteUserGroup",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.userGroup.UserGroup",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "UserGroup with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a userGroup by ID",
        "tags": [
          "userGroups"
        ]
      },
      "get": {
        "operationId": "getUserGroup",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/userGroup"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "UserGroup with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a userGroup by ID",
        "tags": [
          "userGroups"
        ]
      },
      "put": {
        "operationId": "updateUserGroup",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/userGroup"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.userGroup.UserGroup",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "UserGroup with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.userGroup.UserGroup",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (UserGroup)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.userGroup.UserGroup",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a userGroup",
        "tags": [
          "userGroups"
        ]
      }
    },
    "/userRoles": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    },
                    "userRoles": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/userRole"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list userRoles",
        "tags": [
          "userRoles"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/userRole"
              }
            }
          }
        },
        "responses": {
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"V5T57w3h1FA\",\n    \"klass\": \"org.hisp.dhis.user.UserAuthorityGroup\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.user.UserAuthorityGroup\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"could not execute statement\"\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create userRoles",
        "tags": [
          "userRoles"
        ]
      }
    },
    "/userRoles/{id}": {
      "delete": {
        "operationId": "deleteUserRole",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.userRole.UserRole",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "UserRole with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a userRole by ID",
        "tags": [
          "userRoles"
        ]
      },
      "get": {
        "operationId": "getUserRole",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/userRole"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "UserRole with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a userRole by ID",
        "tags": [
          "userRoles"
        ]
      },
      "put": {
        "operationId": "updateUserRole",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/userRole"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.userRole.UserRole",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "UserRole with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.userRole.UserRole",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (UserRole)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.userRole.UserRole",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a userRole",
        "tags": [
          "userRoles"
        ]
      }
    },
    "/users": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    },
                    "users": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/user"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list users",
        "tags": [
          "users"
        ]
      }
    },
    "/users/{id}": {
      "delete": {
        "operationId": "deleteUser",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.user.User",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "User with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a user by ID",
        "tags": [
          "users"
        ]
      },
      "get": {
        "operationId": "getUser",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/user"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "User with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a user by ID",
        "tags": [
          "users"
        ]
      },
      "put": {
        "operationId": "updateUser",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/user"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.user.User",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "User with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.user.User",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (User)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.user.User",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a user",
        "tags": [
          "users"
        ]
      }
    },
    "/validationNotificationTemplates": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    },
                    "validationNotificationTemplates": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/validationNotificationTemplate"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list validationNotificationTemplates",
        "tags": [
          "validationNotificationTemplates"
        ]
      }
    },
    "/validationNotificationTemplates/{id}": {
      "delete": {
        "operationId": "deleteValidationNotificationTemplate",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.validationNotificationTemplate.ValidationNotificationTemplate",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ValidationNotificationTemplate with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a validationNotificationTemplate by ID",
        "tags": [
          "validationNotificationTemplates"
        ]
      },
      "get": {
        "operationId": "getValidationNotificationTemplate",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/validationNotificationTemplate"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ValidationNotificationTemplate with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a validationNotificationTemplate by ID",
        "tags": [
          "validationNotificationTemplates"
        ]
      },
      "put": {
        "operationId": "updateValidationNotificationTemplate",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/validationNotificationTemplate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.validationNotificationTemplate.ValidationNotificationTemplate",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ValidationNotificationTemplate with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.validationNotificationTemplate.ValidationNotificationTemplate",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (ValidationNotificationTemplate)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.validationNotificationTemplate.ValidationNotificationTemplate",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a validationNotificationTemplate",
        "tags": [
          "validationNotificationTemplates"
        ]
      }
    },
    "/validationResults": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    },
                    "validationResults": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/validationResult"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list validationResults",
        "tags": [
          "validationResults"
        ]
      }
    },
    "/validationResults/{id}": {
      "delete": {
        "operationId": "deleteValidationResult",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.validationResult.ValidationResult",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ValidationResult with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a validationResult by ID",
        "tags": [
          "validationResults"
        ]
      },
      "get": {
        "operationId": "getValidationResult",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/validationResult"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ValidationResult with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a validationResult by ID",
        "tags": [
          "validationResults"
        ]
      },
      "put": {
        "operationId": "updateValidationResult",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/validationResult"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.validationResult.ValidationResult",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ValidationResult with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.validationResult.ValidationResult",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (ValidationResult)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.validationResult.ValidationResult",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a validationResult",
        "tags": [
          "validationResults"
        ]
      }
    },
    "/validationRuleGroups": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    },
                    "validationRuleGroups": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/validationRuleGroup"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list validationRuleGroups",
        "tags": [
          "validationRuleGroups"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/validationRuleGroup"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Created\",\n  \"httpStatusCode\": 201,\n  \"status\": \"OK\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"tNOLvY38bdk\",\n    \"klass\": \"org.hisp.dhis.validation.ValidationRuleGroup\"\n  }\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Created"
          },
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"e25bTHAlPo3\",\n    \"klass\": \"org.hisp.dhis.validation.ValidationRuleGroup\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.validation.ValidationRuleGroup\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot construct instance of `org.hisp.dhis.user.User` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('TlL4tHV7EWA')\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 918] (through reference chain: org.hisp.dhis.validation.ValidationRuleGroup[\\\"lastUpdatedBy\\\"])\"\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create validationRuleGroups",
        "tags": [
          "validationRuleGroups"
        ]
      }
    },
    "/validationRuleGroups/{id}": {
      "delete": {
        "operationId": "deleteValidationRuleGroup",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.validationRuleGroup.ValidationRuleGroup",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ValidationRuleGroup with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a validationRuleGroup by ID",
        "tags": [
          "validationRuleGroups"
        ]
      },
      "get": {
        "operationId": "getValidationRuleGroup",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/validationRuleGroup"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ValidationRuleGroup with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a validationRuleGroup by ID",
        "tags": [
          "validationRuleGroups"
        ]
      },
      "put": {
        "operationId": "updateValidationRuleGroup",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/validationRuleGroup"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.validationRuleGroup.ValidationRuleGroup",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ValidationRuleGroup with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.validationRuleGroup.ValidationRuleGroup",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (ValidationRuleGroup)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.validationRuleGroup.ValidationRuleGroup",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a validationRuleGroup",
        "tags": [
          "validationRuleGroups"
        ]
      }
    },
    "/validationRules": {
      "get": {
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/paging"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/page"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/pageSize"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/order"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/filter"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "pager": {
                      "$ref": "./components_openapi.json#/components/schemas/pagination"
                    },
                    "validationRules": {
                      "items": {
                        "$ref": "./components_openapi.json#/components/schemas/validationRule"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list validationRules",
        "tags": [
          "validationRules"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/validationRule"
              }
            }
          }
        },
        "responses": {
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"XrbWrkKH54N\",\n    \"klass\": \"org.hisp.dhis.validation.ValidationRule\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `operator`.\",\n        \"mainKlass\": \"org.hisp.dhis.validation.ValidationRule\",\n        \"errorKlass\": \"org.hisp.dhis.expression.Operator\",\n        \"errorProperty\": \"operator\",\n        \"errorCode\": \"E4000\"\n      },\n      {\n        \"message\": \"Missing required property `leftSide`.\",\n        \"mainKlass\": \"org.hisp.dhis.validation.ValidationRule\",\n        \"errorKlass\": \"org.hisp.dhis.expression.Expression\",\n        \"errorProperty\": \"leftSide\",\n        \"errorCode\": \"E4000\"\n      },\n      {\n        \"message\": \"Missing required property `rightSide`.\",\n        \"mainKlass\": \"org.hisp.dhis.validation.ValidationRule\",\n        \"errorKlass\": \"org.hisp.dhis.expression.Expression\",\n        \"errorProperty\": \"rightSide\",\n        \"errorCode\": \"E4000\"\n      },\n      {\n        \"message\": \"Missing required property `periodType`.\",\n        \"mainKlass\": \"org.hisp.dhis.validation.ValidationRule\",\n        \"errorKlass\": \"org.hisp.dhis.period.PeriodType\",\n        \"errorProperty\": \"periodType\",\n        \"errorCode\": \"E4000\"\n      },\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.validation.ValidationRule\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot deserialize value of type `org.hisp.dhis.expression.Operator` from String \\\"myoperator\\\": value not one of declared Enum instance names: [compulsory_pair, not_equal_to, equal_to, less_than, greater_than_or_equal_to, less_than_or_equal_to, exclusive_pair, greater_than]\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 272] (through reference chain: org.hisp.dhis.validation.ValidationRule[\\\"operator\\\"])\"\n}",
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create validationRules",
        "tags": [
          "validationRules"
        ]
      }
    },
    "/validationRules/{id}": {
      "delete": {
        "operationId": "deleteValidationRule",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.validationRule.ValidationRule",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ValidationRule with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a validationRule by ID",
        "tags": [
          "validationRules"
        ]
      },
      "get": {
        "operationId": "getValidationRule",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/field"
          },
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/validationRule"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ValidationRule with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a validationRule by ID",
        "tags": [
          "validationRules"
        ]
      },
      "put": {
        "operationId": "updateValidationRule",
        "parameters": [
          {
            "$ref": "./components_openapi.json#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "./components_openapi.json#/components/schemas/validationRule"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.validationRule.ValidationRule",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ValidationRule with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.validationRule.ValidationRule",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (ValidationRule)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.validationRule.ValidationRule",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "./components_openapi.json#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a validationRule",
        "tags": [
          "validationRules"
        ]
      }
    }
  }
}