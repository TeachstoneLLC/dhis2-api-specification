{
  "components": {
    "callbacks": {},
    "parameters": {
      "field": {
        "description": "Limit the response to specific field(s). See <a href='#section/Metadata-field-filter'>Metadata-field-filter</a>.",
        "in": "query",
        "name": "fields",
        "schema": {
          "default": ":all",
          "type": "string"
        }
      },
      "filter": {
        "description": "Apply filter operations to the returned list of metadata. See <a href='#section/Metadata-object-filter'>Metadata-object-filter</a>.",
        "in": "query",
        "name": "filter",
        "required": false,
        "schema": {
          "format": "property>:<operator>:<value",
          "type": "string"
        }
      },
      "id": {
        "description": "unique id of the element in the system.",
        "in": "path",
        "name": "id",
        "schema": {
          "$ref": "#/components/schemas/uid"
        }
      },
      "mergeMode": {
        "description": "Strategy for merging of objects when doing updates. REPLACE will just overwrite the propery with the new value provided, MERGE will only set the property if its not null (only if the property was provided).",
        "in": "query",
        "name": "mergeMode",
        "required": false,
        "schema": {
          "default": "REPLACE",
          "enum": [
            "MERGE",
            "REPLACE"
          ],
          "type": "string"
        }
      },
      "order": {
        "description": "Order the output using a specified order, only properties that are both persisted and simple (no collections, idObjects etc) are supported. iasc and idesc are case insensitive sorting.",
        "in": "query",
        "name": "order",
        "schema": {
          "enum": [
            "<property>:asc",
            "<property>:desc",
            "<property>:iasc",
            "<property>:idesc"
          ],
          "type": "string"
        }
      },
      "page": {
        "description": "Defines which page number to return.",
        "in": "query",
        "name": "page",
        "schema": {
          "default": 1,
          "type": "integer"
        }
      },
      "pageSize": {
        "description": "Defines the number of elements to return for each page.",
        "in": "query",
        "name": "pageSize",
        "schema": {
          "default": 50,
          "type": "integer"
        }
      },
      "paging": {
        "description": "Indicates whether to return lists of elements in pages.",
        "in": "query",
        "name": "paging",
        "schema": {
          "default": true,
          "type": "boolean"
        }
      },
      "preheatCache": {
        "description": "Turn cache-map preheating on/off. This is on by default, turning this off will make initial load time for importer much shorter (but will make the import itself slower). This is mostly used for cases where you have a small XML/JSON file you want to import, and don't want to wait for cache-map preheating.",
        "in": "query",
        "name": "preheatCache",
        "required": false,
        "schema": {
          "type": "boolean"
        }
      },
      "strategy": {
        "description": "Import strategy to use, see below for more information.",
        "in": "query",
        "name": "strategy",
        "required": false,
        "schema": {
          "default": "CREATE_AND_UPDATE",
          "enum": [
            "CREATE",
            "CREATE_AND_UPDATE",
            "DELETE",
            "UPDATE"
          ],
          "type": "string"
        }
      }
    },
    "schemas": {
      "access": {
        "properties": {
          "delete": {
            "$ref": "#/components/schemas/delete"
          },
          "externalize": {
            "$ref": "#/components/schemas/externalize"
          },
          "manage": {
            "$ref": "#/components/schemas/manage"
          },
          "read": {
            "$ref": "#/components/schemas/read"
          },
          "update": {
            "$ref": "#/components/schemas/update"
          },
          "write": {
            "$ref": "#/components/schemas/write"
          }
        },
        "readOnly": true
      },
      "accessLevel": {
        "enum": [
          "AUDITED",
          "CLOSED",
          "OPEN",
          "PROTECTED"
        ],
        "example": "OPEN",
        "format": "enum",
        "type": "string"
      },
      "address": {
        "example": "myaddress",
        "format": "general",
        "maxLength": 255,
        "minLength": 0,
        "type": "string"
      },
      "aggregateExportAttributeOptionCombo": {
        "format": "general",
        "maxLength": 255,
        "minLength": 0,
        "type": "string"
      },
      "aggregateExportCategoryOptionCombo": {
        "example": "sqGRzCziswD",
        "format": "general",
        "maxLength": 255,
        "minLength": 0,
        "type": "string"
      },
      "aggregationType": {
        "enum": [
          "AVERAGE",
          "AVERAGE_SUM_ORG_UNIT",
          "COUNT",
          "CUSTOM",
          "DEFAULT",
          "LAST",
          "LAST_AVERAGE_ORG_UNIT",
          "MAX",
          "MIN",
          "NONE",
          "STDDEV",
          "SUM",
          "VARIANCE"
        ],
        "format": "enum",
        "type": "string"
      },
      "allItems": {
        "type": "boolean"
      },
      "allowAuditLog": {
        "type": "boolean"
      },
      "allowFutureDate": {
        "type": "boolean"
      },
      "allowGenerateNextVisit": {
        "type": "boolean"
      },
      "allowProvidedElsewhere": {
        "type": "boolean"
      },
      "analyticsPeriodBoundaryType": {
        "enum": [
          "AFTER_START_OF_REPORTING_PERIOD",
          "BEFORE_END_OF_REPORTING_PERIOD"
        ],
        "example": "BEFORE_END_OF_REPORTING_PERIOD",
        "format": "enum",
        "type": "string"
      },
      "analyticsTableHook": {
        "maxProperties": 21,
        "minProperties": 0,
        "properties": {
          "access": {
            "maxProperties": 6,
            "minProperties": 1,
            "properties": {
              "delete": {
                "$ref": "#/components/schemas/delete"
              },
              "externalize": {
                "$ref": "#/components/schemas/externalize"
              },
              "manage": {
                "$ref": "#/components/schemas/manage"
              },
              "read": {
                "$ref": "#/components/schemas/read"
              },
              "update": {
                "$ref": "#/components/schemas/update"
              },
              "write": {
                "$ref": "#/components/schemas/write"
              }
            },
            "readOnly": true,
            "type": "object"
          },
          "analyticsTableType": {
            "$ref": "#/components/schemas/analyticsTableType"
          },
          "attributeValue": {
            "items": {
              "maxProperties": 4,
              "minProperties": 0,
              "properties": {
                "attribute": {
                  "format": "uid",
                  "maxLength": 11,
                  "minLength": 11,
                  "readOnly": false,
                  "type": "string"
                },
                "created": {
                  "$ref": "#/components/schemas/created"
                },
                "lastUpdated": {
                  "$ref": "#/components/schemas/lastUpdated"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": false,
            "type": "array"
          },
          "code": {
            "$ref": "#/components/schemas/code"
          },
          "created": {
            "$ref": "#/components/schemas/created"
          },
          "displayName": {
            "$ref": "#/components/schemas/displayName"
          },
          "externalAccess": {
            "$ref": "#/components/schemas/externalAccess"
          },
          "favorite": {
            "type": "boolean"
          },
          "href": {
            "$ref": "#/components/schemas/href"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "lastUpdated": {
            "$ref": "#/components/schemas/lastUpdated"
          },
          "lastUpdatedBy": {
            "$ref": "#/components/schemas/lastUpdatedBy"
          },
          "name": {
            "$ref": "#/components/schemas/name"
          },
          "phase": {
            "$ref": "#/components/schemas/phase"
          },
          "publicAccess": {
            "$ref": "#/components/schemas/publicAccess"
          },
          "resourceTableType": {
            "$ref": "#/components/schemas/resourceTableType"
          },
          "sql": {
            "$ref": "#/components/schemas/sql"
          },
          "translation": {
            "items": {
              "maxProperties": 0,
              "minProperties": 0,
              "properties": {}
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": false,
            "type": "array"
          },
          "user": {
            "format": "uid",
            "maxLength": 11,
            "minLength": 11,
            "readOnly": true,
            "type": "string"
          },
          "userAccess": {
            "items": {
              "maxProperties": 4,
              "minProperties": 0,
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 8,
                  "minLength": 8,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userUid": {
                  "$ref": "#/components/schemas/userUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": false,
            "type": "array"
          },
          "userGroupAccess": {
            "items": {
              "maxProperties": 4,
              "minProperties": 0,
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 8,
                  "minLength": 8,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userGroupUid": {
                  "$ref": "#/components/schemas/userGroupUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": false,
            "type": "array"
          }
        },
        "required": [
          "name",
          "phase",
          "sql"
        ],
        "type": "object",
        "x-status-dhis2": "template"
      },
      "analyticsTableType": {
        "enum": [
          "COMPLETENESS",
          "COMPLETENESS_TARGET",
          "DATA_VALUE",
          "ENROLLMENT",
          "EVENT",
          "ORG_UNIT_TARGET",
          "VALIDATION_RESULT"
        ],
        "format": "enum",
        "readOnly": false,
        "type": "string"
      },
      "analyticsType": {
        "enum": [
          "ENROLLMENT",
          "EVENT"
        ],
        "example": "EVENT",
        "format": "enum",
        "type": "string"
      },
      "annualSampleCount": {
        "example": 3,
        "format": "int32",
        "maximum": 10,
        "minimum": 0,
        "type": "integer"
      },
      "annualized": {
        "type": "boolean"
      },
      "appKey": {
        "example": "myappKey",
        "format": "general",
        "maxLength": 255,
        "minLength": 0,
        "type": "string"
      },
      "areaRadius": {
        "example": 5000,
        "format": "int32",
        "maximum": 2147483647,
        "minimum": 0,
        "type": "integer"
      },
      "attachment": {
        "type": "boolean"
      },
      "attribute": {
        "maxProperties": 58,
        "minProperties": 0,
        "properties": {
          "access": {
            "maxProperties": 6,
            "minProperties": 1,
            "properties": {
              "delete": {
                "$ref": "#/components/schemas/delete"
              },
              "externalize": {
                "$ref": "#/components/schemas/externalize"
              },
              "manage": {
                "$ref": "#/components/schemas/manage"
              },
              "read": {
                "$ref": "#/components/schemas/read"
              },
              "update": {
                "$ref": "#/components/schemas/update"
              },
              "write": {
                "$ref": "#/components/schemas/write"
              }
            },
            "readOnly": true,
            "required": [
              "delete",
              "externalize",
              "manage",
              "read",
              "update",
              "write"
            ],
            "type": "object"
          },
          "attributeValues": {
            "items": {
              "properties": {
                "attribute": {
                  "format": "uid",
                  "maxLength": 255,
                  "readOnly": false,
                  "type": "string"
                },
                "created": {
                  "$ref": "#/components/schemas/created"
                },
                "lastUpdated": {
                  "$ref": "#/components/schemas/lastUpdated"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              },
              "required": [
                "attribute"
              ]
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "categoryAttribute": {
            "$ref": "#/components/schemas/categoryAttribute"
          },
          "categoryOptionAttribute": {
            "$ref": "#/components/schemas/categoryOptionAttribute"
          },
          "categoryOptionComboAttribute": {
            "$ref": "#/components/schemas/categoryOptionComboAttribute"
          },
          "categoryOptionGroupAttribute": {
            "$ref": "#/components/schemas/categoryOptionGroupAttribute"
          },
          "categoryOptionGroupSetAttribute": {
            "$ref": "#/components/schemas/categoryOptionGroupSetAttribute"
          },
          "code": {
            "$ref": "#/components/schemas/code"
          },
          "constantAttribute": {
            "$ref": "#/components/schemas/constantAttribute"
          },
          "created": {
            "$ref": "#/components/schemas/created"
          },
          "dataElementAttribute": {
            "$ref": "#/components/schemas/dataElementAttribute"
          },
          "dataElementGroupAttribute": {
            "$ref": "#/components/schemas/dataElementGroupAttribute"
          },
          "dataElementGroupSetAttribute": {
            "$ref": "#/components/schemas/dataElementGroupSetAttribute"
          },
          "dataSetAttribute": {
            "$ref": "#/components/schemas/dataSetAttribute"
          },
          "description": {
            "$ref": "#/components/schemas/description"
          },
          "displayDescription": {
            "$ref": "#/components/schemas/displayDescription"
          },
          "displayName": {
            "$ref": "#/components/schemas/displayName"
          },
          "displayShortName": {
            "$ref": "#/components/schemas/displayShortName"
          },
          "documentAttribute": {
            "$ref": "#/components/schemas/documentAttribute"
          },
          "externalAccess": {
            "$ref": "#/components/schemas/externalAccess"
          },
          "favorite": {
            "type": "boolean"
          },
          "favorites": {
            "items": {
              "$ref": "#/components/schemas/favorite"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "href": {
            "$ref": "#/components/schemas/href"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "indicatorAttribute": {
            "$ref": "#/components/schemas/indicatorAttribute"
          },
          "indicatorGroupAttribute": {
            "$ref": "#/components/schemas/indicatorGroupAttribute"
          },
          "lastUpdated": {
            "$ref": "#/components/schemas/lastUpdated"
          },
          "lastUpdatedBy": {
            "$ref": "#/components/schemas/lastUpdatedBy"
          },
          "legendSetAttribute": {
            "$ref": "#/components/schemas/legendSetAttribute"
          },
          "mandatory": {
            "$ref": "#/components/schemas/mandatory"
          },
          "name": {
            "$ref": "#/components/schemas/name"
          },
          "optionAttribute": {
            "$ref": "#/components/schemas/optionAttribute"
          },
          "optionSet": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "optionSetAttribute": {
            "$ref": "#/components/schemas/optionSetAttribute"
          },
          "organisationUnitAttribute": {
            "$ref": "#/components/schemas/organisationUnitAttribute"
          },
          "organisationUnitGroupAttribute": {
            "$ref": "#/components/schemas/organisationUnitGroupAttribute"
          },
          "organisationUnitGroupSetAttribute": {
            "$ref": "#/components/schemas/organisationUnitGroupSetAttribute"
          },
          "programAttribute": {
            "$ref": "#/components/schemas/programAttribute"
          },
          "programIndicatorAttribute": {
            "$ref": "#/components/schemas/programIndicatorAttribute"
          },
          "programStageAttribute": {
            "$ref": "#/components/schemas/programStageAttribute"
          },
          "publicAccess": {
            "$ref": "#/components/schemas/publicAccess"
          },
          "sectionAttribute": {
            "$ref": "#/components/schemas/sectionAttribute"
          },
          "shortName": {
            "$ref": "#/components/schemas/shortName"
          },
          "sortOrder": {
            "$ref": "#/components/schemas/sortOrder"
          },
          "sqlViewAttribute": {
            "$ref": "#/components/schemas/sqlViewAttribute"
          },
          "trackedEntityAttributeAttribute": {
            "$ref": "#/components/schemas/trackedEntityAttributeAttribute"
          },
          "trackedEntityTypeAttribute": {
            "$ref": "#/components/schemas/trackedEntityTypeAttribute"
          },
          "translations": {
            "items": {
              "properties": {
                "locale": {
                  "$ref": "#/components/schemas/locale"
                },
                "property": {
                  "$ref": "#/components/schemas/property"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "unique": {
            "$ref": "#/components/schemas/unique"
          },
          "user": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "userAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userUid": {
                  "$ref": "#/components/schemas/userUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "userAttribute": {
            "$ref": "#/components/schemas/userAttribute"
          },
          "userGroupAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userGroupUid": {
                  "$ref": "#/components/schemas/userGroupUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "userGroupAttribute": {
            "$ref": "#/components/schemas/userGroupAttribute"
          },
          "validationRuleAttribute": {
            "$ref": "#/components/schemas/validationRuleAttribute"
          },
          "validationRuleGroupAttribute": {
            "$ref": "#/components/schemas/validationRuleGroupAttribute"
          },
          "valueType": {
            "$ref": "#/components/schemas/valueType"
          },
          "x-unique": {
            "$ref": "#/components/schemas/x-unique"
          }
        },
        "required": [
          "name",
          "valueType"
        ],
        "type": "object",
        "x-status-dhis2": "template"
      },
      "attributeCategoryOptions": {
        "format": "uid",
        "maxLength": 11,
        "minLength": 11,
        "readOnly": false,
        "type": "string"
      },
      "attributeDimension": {
        "properties": {}
      },
      "attributeOptionCombo": {
        "format": "uid",
        "type": "string"
      },
      "attributeValue": {
        "properties": {
          "attribute": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "created": {
            "$ref": "#/components/schemas/created"
          },
          "lastUpdated": {
            "$ref": "#/components/schemas/lastUpdated"
          },
          "value": {
            "$ref": "#/components/schemas/value"
          }
        },
        "required": [
          "attribute"
        ]
      },
      "attributeValueDimension": {
        "format": "uid",
        "maxLength": 11,
        "minLength": 11,
        "type": "string",
        "x-association": "true"
      },
      "attribution": {
        "example": "myattribution",
        "format": "general",
        "maxLength": 2147483647,
        "minLength": 0,
        "type": "string"
      },
      "autoGenerateEvent": {
        "type": "boolean"
      },
      "baseLineLabel": {
        "example": "mybaseLi",
        "format": "general",
        "maxLength": 255,
        "minLength": 0,
        "type": "string"
      },
      "baseLineValue": {
        "example": 85.0,
        "format": "double",
        "maximum": 2147483647,
        "minimum": 0,
        "type": "number"
      },
      "basemap": {
        "example": "mybasem",
        "format": "general",
        "maxLength": 255,
        "minLength": 0,
        "type": "string"
      },
      "biMonthsThisYear": {
        "type": "boolean"
      },
      "birthday": {
        "example": "1971-04-08T00:00:00.000",
        "format": "date-time",
        "maxLength": 23,
        "minLength": 23,
        "type": "string"
      },
      "blockEntryForm": {
        "type": "boolean"
      },
      "boundaryTarget": {
        "enum": [
          "ENROLLMENT_DATE",
          "EVENT_DATE"
        ],
        "example": "EVENT_DATE",
        "format": "enum",
        "type": "string"
      },
      "cacheStrategy": {
        "enum": [
          "CACHE_15_MINUTES",
          "CACHE_1_HOUR",
          "CACHE_30_MINUTES",
          "CACHE_6AM_TOMORROW",
          "CACHE_TWO_WEEKS",
          "NO_CACHE",
          "RESPECT_SYSTEM_SETTING"
        ],
        "example": "RESPECT_SYSTEM_SETTING",
        "format": "enum",
        "type": "string"
      },
      "captureCoordinates": {
        "type": "boolean"
      },
      "catDimensionConstraint": {
        "properties": {}
      },
      "category": {
        "maxProperties": 2147483647,
        "minProperties": 0,
        "properties": {
          "access": {
            "maxProperties": 6,
            "minProperties": 1,
            "properties": {
              "delete": {
                "$ref": "#/components/schemas/delete"
              },
              "externalize": {
                "$ref": "#/components/schemas/externalize"
              },
              "manage": {
                "$ref": "#/components/schemas/manage"
              },
              "read": {
                "$ref": "#/components/schemas/read"
              },
              "update": {
                "$ref": "#/components/schemas/update"
              },
              "write": {
                "$ref": "#/components/schemas/write"
              }
            },
            "readOnly": true,
            "required": [
              "delete",
              "externalize",
              "manage",
              "read",
              "update",
              "write"
            ],
            "type": "object"
          },
          "aggregationType": {
            "$ref": "#/components/schemas/aggregationType"
          },
          "allItems": {
            "$ref": "#/components/schemas/allItems"
          },
          "attributeValues": {
            "items": {
              "properties": {
                "attribute": {
                  "format": "uid",
                  "maxLength": 255,
                  "readOnly": false,
                  "type": "string"
                },
                "created": {
                  "$ref": "#/components/schemas/created"
                },
                "lastUpdated": {
                  "$ref": "#/components/schemas/lastUpdated"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              },
              "required": [
                "attribute"
              ]
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "categoryCombos": {
            "items": {
              "maxProperties": 1,
              "minProperties": 0,
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/id"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": true,
            "type": "array"
          },
          "categoryOptions": {
            "items": {
              "maxProperties": 1,
              "minProperties": 0,
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/id"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "code": {
            "$ref": "#/components/schemas/code"
          },
          "created": {
            "$ref": "#/components/schemas/created"
          },
          "dataDimension": {
            "$ref": "#/components/schemas/dataDimension"
          },
          "dataDimensionType": {
            "$ref": "#/components/schemas/dataDimensionType"
          },
          "description": {
            "$ref": "#/components/schemas/description"
          },
          "dimension": {
            "$ref": "#/components/schemas/dimension"
          },
          "dimensionType": {
            "$ref": "#/components/schemas/dimensionType"
          },
          "displayDescription": {
            "$ref": "#/components/schemas/displayDescription"
          },
          "displayName": {
            "$ref": "#/components/schemas/displayName"
          },
          "displayShortName": {
            "$ref": "#/components/schemas/displayShortName"
          },
          "externalAccess": {
            "$ref": "#/components/schemas/externalAccess"
          },
          "favorite": {
            "type": "boolean"
          },
          "favorites": {
            "items": {
              "$ref": "#/components/schemas/favorite"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "filter": {
            "format": "general",
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "href": {
            "$ref": "#/components/schemas/href"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "items": {
            "items": {
              "maxProperties": 1,
              "minProperties": 0,
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/id"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "lastUpdated": {
            "$ref": "#/components/schemas/lastUpdated"
          },
          "lastUpdatedBy": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "legendSet": {
            "format": "uid",
            "maxLength": 11,
            "minLength": 11,
            "type": "string",
            "x-association": "true"
          },
          "name": {
            "$ref": "#/components/schemas/name"
          },
          "publicAccess": {
            "$ref": "#/components/schemas/publicAccess"
          },
          "shortName": {
            "$ref": "#/components/schemas/shortName"
          },
          "translations": {
            "items": {
              "maxProperties": 3,
              "minProperties": 0,
              "properties": {
                "locale": {
                  "$ref": "#/components/schemas/locale"
                },
                "property": {
                  "enum": [
                    "NAME",
                    "SHORT_NAME"
                  ],
                  "example": "NAME",
                  "format": "enum",
                  "type": "string"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              },
              "required": [
                "locale",
                "property",
                "value"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": true,
            "type": "array"
          },
          "user": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "userAccesses": {
            "items": {
              "maxProperties": 4,
              "minProperties": 0,
              "properties": {
                "access": {
                  "example": "rw------",
                  "format": "access",
                  "maxLength": 8,
                  "minLength": 8,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userUid": {
                  "$ref": "#/components/schemas/userUid"
                }
              },
              "required": [
                "access",
                "displayName",
                "id",
                "userUid"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "userGroupAccesses": {
            "items": {
              "maxProperties": 4,
              "minProperties": 0,
              "properties": {
                "access": {
                  "example": "rwr-----",
                  "format": "access",
                  "maxLength": 8,
                  "minLength": 8,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userGroupUid": {
                  "$ref": "#/components/schemas/userGroupUid"
                }
              },
              "required": [
                "access",
                "displayName",
                "id",
                "userGroupUid"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          }
        },
        "required": [
          "dataDimensionType",
          "name"
        ],
        "type": "object",
        "x-status-dhis2": "template"
      },
      "categoryAttribute": {
        "type": "boolean"
      },
      "categoryCombo": {
        "maxProperties": 2147483647,
        "minProperties": 0,
        "properties": {
          "access": {
            "maxProperties": 6,
            "minProperties": 1,
            "properties": {
              "delete": {
                "$ref": "#/components/schemas/delete"
              },
              "externalize": {
                "$ref": "#/components/schemas/externalize"
              },
              "manage": {
                "$ref": "#/components/schemas/manage"
              },
              "read": {
                "$ref": "#/components/schemas/read"
              },
              "update": {
                "$ref": "#/components/schemas/update"
              },
              "write": {
                "$ref": "#/components/schemas/write"
              }
            },
            "readOnly": true,
            "required": [
              "delete",
              "externalize",
              "manage",
              "read",
              "update",
              "write"
            ],
            "type": "object"
          },
          "attributeValues": {
            "items": {
              "properties": {
                "attribute": {
                  "format": "uid",
                  "maxLength": 255,
                  "readOnly": false,
                  "type": "string"
                },
                "created": {
                  "$ref": "#/components/schemas/created"
                },
                "lastUpdated": {
                  "$ref": "#/components/schemas/lastUpdated"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              },
              "required": [
                "attribute"
              ]
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "categories": {
            "items": {
              "maxProperties": 1,
              "minProperties": 0,
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/id"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "category": {
            "items": {
              "format": "uid",
              "maxLength": 11,
              "minLength": 11,
              "type": "string"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": false,
            "type": "array"
          },
          "categoryOptionCombos": {
            "items": {
              "maxProperties": 1,
              "minProperties": 0,
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/id"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "code": {
            "$ref": "#/components/schemas/code"
          },
          "created": {
            "$ref": "#/components/schemas/created"
          },
          "dataDimensionType": {
            "$ref": "#/components/schemas/dataDimensionType"
          },
          "displayName": {
            "$ref": "#/components/schemas/displayName"
          },
          "externalAccess": {
            "$ref": "#/components/schemas/externalAccess"
          },
          "favorite": {
            "type": "boolean"
          },
          "favorites": {
            "items": {
              "$ref": "#/components/schemas/favorite"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "href": {
            "$ref": "#/components/schemas/href"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "isDefault": {
            "$ref": "#/components/schemas/isDefault"
          },
          "lastUpdated": {
            "$ref": "#/components/schemas/lastUpdated"
          },
          "lastUpdatedBy": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "name": {
            "$ref": "#/components/schemas/name"
          },
          "publicAccess": {
            "$ref": "#/components/schemas/publicAccess"
          },
          "skipTotal": {
            "$ref": "#/components/schemas/skipTotal"
          },
          "translations": {
            "items": {
              "maxProperties": 3,
              "minProperties": 0,
              "properties": {
                "locale": {
                  "$ref": "#/components/schemas/locale"
                },
                "property": {
                  "enum": [
                    "DESCRIPTION",
                    "FORM_NAME",
                    "NAME",
                    "SHORT_NAME"
                  ],
                  "example": "NAME",
                  "format": "enum",
                  "type": "string"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              },
              "required": [
                "locale",
                "property",
                "value"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": true,
            "type": "array"
          },
          "user": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "userAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userUid": {
                  "$ref": "#/components/schemas/userUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "userGroupAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userGroupUid": {
                  "$ref": "#/components/schemas/userGroupUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          }
        },
        "required": [
          "dataDimensionType",
          "name"
        ],
        "type": "object",
        "x-association": "true",
        "x-status-dhis2": "template"
      },
      "categoryDimension": {
        "properties": {}
      },
      "categoryOption": {
        "maxProperties": 34,
        "minProperties": 0,
        "properties": {
          "access": {
            "maxProperties": 7,
            "minProperties": 1,
            "properties": {
              "data": {
                "properties": {
                  "read": {
                    "$ref": "#/components/schemas/read"
                  },
                  "write": {
                    "$ref": "#/components/schemas/write"
                  }
                },
                "required": [
                  "read",
                  "write"
                ],
                "type": "object"
              },
              "delete": {
                "$ref": "#/components/schemas/delete"
              },
              "externalize": {
                "$ref": "#/components/schemas/externalize"
              },
              "manage": {
                "$ref": "#/components/schemas/manage"
              },
              "read": {
                "$ref": "#/components/schemas/read"
              },
              "update": {
                "$ref": "#/components/schemas/update"
              },
              "write": {
                "$ref": "#/components/schemas/write"
              }
            },
            "readOnly": true,
            "required": [
              "data",
              "delete",
              "externalize",
              "manage",
              "read",
              "update",
              "write"
            ],
            "type": "object"
          },
          "aggregationType": {
            "$ref": "#/components/schemas/aggregationType"
          },
          "attributeValues": {
            "items": {
              "properties": {
                "attribute": {
                  "format": "uid",
                  "maxLength": 255,
                  "readOnly": false,
                  "type": "string"
                },
                "created": {
                  "$ref": "#/components/schemas/created"
                },
                "lastUpdated": {
                  "$ref": "#/components/schemas/lastUpdated"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              },
              "required": [
                "attribute"
              ]
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "categories": {
            "items": {
              "maxProperties": 1,
              "minProperties": 0,
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/id"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": true,
            "type": "array"
          },
          "category": {
            "items": {
              "format": "uid",
              "maxLength": 11,
              "minLength": 11,
              "type": "string"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": false,
            "type": "array"
          },
          "categoryOptionCombos": {
            "items": {
              "maxProperties": 1,
              "minProperties": 0,
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/id"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": true,
            "type": "array"
          },
          "categoryOptionGroups": {
            "items": {
              "maxProperties": 1,
              "minProperties": 0,
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/id"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": true,
            "type": "array"
          },
          "code": {
            "$ref": "#/components/schemas/code"
          },
          "created": {
            "$ref": "#/components/schemas/created"
          },
          "description": {
            "$ref": "#/components/schemas/description"
          },
          "dimensionItem": {
            "$ref": "#/components/schemas/dimensionItem"
          },
          "dimensionItemType": {
            "$ref": "#/components/schemas/dimensionItemType"
          },
          "displayDescription": {
            "$ref": "#/components/schemas/displayDescription"
          },
          "displayName": {
            "$ref": "#/components/schemas/displayName"
          },
          "displayShortName": {
            "$ref": "#/components/schemas/displayShortName"
          },
          "endDate": {
            "$ref": "#/components/schemas/endDate"
          },
          "externalAccess": {
            "$ref": "#/components/schemas/externalAccess"
          },
          "favorite": {
            "type": "boolean"
          },
          "favorites": {
            "items": {
              "$ref": "#/components/schemas/favorite"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "href": {
            "$ref": "#/components/schemas/href"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "lastUpdated": {
            "$ref": "#/components/schemas/lastUpdated"
          },
          "lastUpdatedBy": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "legendSets": {
            "items": {
              "format": "uid",
              "maxLength": 11,
              "minLength": 11,
              "type": "string",
              "x-association": "true"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": false,
            "type": "array",
            "x-association": "true"
          },
          "name": {
            "$ref": "#/components/schemas/name"
          },
          "organisationUnits": {
            "items": {
              "maxProperties": 1,
              "minProperties": 0,
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/id"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "publicAccess": {
            "$ref": "#/components/schemas/publicAccess"
          },
          "shortName": {
            "$ref": "#/components/schemas/shortName"
          },
          "startDate": {
            "$ref": "#/components/schemas/startDate"
          },
          "style": {
            "maxProperties": 1,
            "minProperties": 1,
            "readOnly": false,
            "type": "object"
          },
          "translations": {
            "items": {
              "maxProperties": 3,
              "minProperties": 0,
              "properties": {
                "locale": {
                  "$ref": "#/components/schemas/locale"
                },
                "property": {
                  "enum": [
                    "NAME",
                    "SHORT_NAME"
                  ],
                  "example": "NAME",
                  "format": "enum",
                  "type": "string"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              },
              "required": [
                "locale",
                "property",
                "value"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": true,
            "type": "array"
          },
          "user": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "userAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userUid": {
                  "$ref": "#/components/schemas/userUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "userGroupAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userGroupUid": {
                  "$ref": "#/components/schemas/userGroupUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          }
        },
        "required": [
          "name"
        ],
        "type": "object",
        "x-status-dhis2": "template"
      },
      "categoryOptionAttribute": {
        "type": "boolean"
      },
      "categoryOptionCombo": {
        "maxProperties": 2147483647,
        "minProperties": 0,
        "properties": {
          "access": {
            "maxProperties": 6,
            "minProperties": 1,
            "properties": {
              "delete": {
                "$ref": "#/components/schemas/delete"
              },
              "externalize": {
                "$ref": "#/components/schemas/externalize"
              },
              "manage": {
                "$ref": "#/components/schemas/manage"
              },
              "read": {
                "$ref": "#/components/schemas/read"
              },
              "update": {
                "$ref": "#/components/schemas/update"
              },
              "write": {
                "$ref": "#/components/schemas/write"
              }
            },
            "readOnly": true,
            "required": [
              "delete",
              "externalize",
              "manage",
              "read",
              "update",
              "write"
            ],
            "type": "object"
          },
          "aggregationType": {
            "$ref": "#/components/schemas/aggregationType"
          },
          "attributeValues": {
            "items": {
              "$ref": "#/components/schemas/attributeValue"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array",
            "x-association": "true"
          },
          "categoryCombo": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "categoryOptions": {
            "items": {
              "maxProperties": 1,
              "minProperties": 0,
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/id"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "code": {
            "$ref": "#/components/schemas/code"
          },
          "created": {
            "$ref": "#/components/schemas/created"
          },
          "description": {
            "$ref": "#/components/schemas/description"
          },
          "dimensionItem": {
            "$ref": "#/components/schemas/dimensionItem"
          },
          "dimensionItemType": {
            "enum": [
              "CATEGORY_OPTION",
              "CATEGORY_OPTION_GROUP",
              "DATA_ELEMENT",
              "DATA_ELEMENT_GROUP",
              "DATA_ELEMENT_OPERAND",
              "INDICATOR",
              "OPTION_GROUP",
              "ORGANISATION_UNIT",
              "ORGANISATION_UNIT_GROUP",
              "PERIOD",
              "PROGRAM_ATTRIBUTE",
              "PROGRAM_DATA_ELEMENT",
              "PROGRAM_INDICATOR",
              "REPORTING_RATE"
            ],
            "format": "enum",
            "type": "string"
          },
          "displayDescription": {
            "$ref": "#/components/schemas/displayDescription"
          },
          "displayName": {
            "$ref": "#/components/schemas/displayName"
          },
          "displayShortName": {
            "$ref": "#/components/schemas/displayShortName"
          },
          "externalAccess": {
            "$ref": "#/components/schemas/externalAccess"
          },
          "favorite": {
            "type": "boolean"
          },
          "favorites": {
            "items": {
              "$ref": "#/components/schemas/favorite"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "href": {
            "$ref": "#/components/schemas/href"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "ignoreApproval": {
            "$ref": "#/components/schemas/ignoreApproval"
          },
          "lastUpdated": {
            "$ref": "#/components/schemas/lastUpdated"
          },
          "lastUpdatedBy": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "legendSets": {
            "items": {
              "format": "uid",
              "maxLength": 11,
              "minLength": 11,
              "type": "string",
              "x-association": "true"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": false,
            "type": "array",
            "x-association": "true"
          },
          "name": {
            "$ref": "#/components/schemas/name"
          },
          "publicAccess": {
            "$ref": "#/components/schemas/publicAccess"
          },
          "shortName": {
            "$ref": "#/components/schemas/shortName"
          },
          "translations": {
            "items": {
              "properties": {
                "locale": {
                  "$ref": "#/components/schemas/locale"
                },
                "property": {
                  "$ref": "#/components/schemas/property"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "user": {
            "format": "uid",
            "maxLength": 11,
            "minLength": 11,
            "type": "string",
            "x-association": "true"
          },
          "userAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userUid": {
                  "$ref": "#/components/schemas/userUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "userGroupAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userGroupUid": {
                  "$ref": "#/components/schemas/userGroupUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          }
        },
        "required": [
          "access",
          "attributeValues",
          "categoryCombo",
          "categoryOptions",
          "created",
          "dimensionItem",
          "displayName",
          "displayShortName",
          "externalAccess",
          "favorite",
          "favorites",
          "href",
          "id",
          "ignoreApproval",
          "lastUpdated",
          "legendSets",
          "name",
          "shortName",
          "translations",
          "userAccesses",
          "userGroupAccesses"
        ],
        "type": "object",
        "x-status-dhis2": "template"
      },
      "categoryOptionComboAttribute": {
        "type": "boolean"
      },
      "categoryOptionGroup": {
        "maxProperties": 2147483647,
        "minProperties": 0,
        "properties": {
          "access": {
            "maxProperties": 6,
            "minProperties": 1,
            "properties": {
              "delete": {
                "$ref": "#/components/schemas/delete"
              },
              "externalize": {
                "$ref": "#/components/schemas/externalize"
              },
              "manage": {
                "$ref": "#/components/schemas/manage"
              },
              "read": {
                "$ref": "#/components/schemas/read"
              },
              "update": {
                "$ref": "#/components/schemas/update"
              },
              "write": {
                "$ref": "#/components/schemas/write"
              }
            },
            "readOnly": true,
            "required": [
              "delete",
              "externalize",
              "manage",
              "read",
              "update",
              "write"
            ],
            "type": "object"
          },
          "aggregationType": {
            "$ref": "#/components/schemas/aggregationType"
          },
          "attributeValues": {
            "items": {
              "$ref": "#/components/schemas/attributeValue"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "categoryOptions": {
            "items": {
              "maxProperties": 1,
              "minProperties": 0,
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/id"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "code": {
            "$ref": "#/components/schemas/code"
          },
          "created": {
            "$ref": "#/components/schemas/created"
          },
          "dataDimensionType": {
            "$ref": "#/components/schemas/dataDimensionType"
          },
          "description": {
            "$ref": "#/components/schemas/description"
          },
          "dimensionItem": {
            "$ref": "#/components/schemas/dimensionItem"
          },
          "dimensionItemType": {
            "enum": [
              "CATEGORY_OPTION",
              "CATEGORY_OPTION_GROUP",
              "DATA_ELEMENT",
              "DATA_ELEMENT_GROUP",
              "DATA_ELEMENT_OPERAND",
              "INDICATOR",
              "OPTION_GROUP",
              "ORGANISATION_UNIT",
              "ORGANISATION_UNIT_GROUP",
              "PERIOD",
              "PROGRAM_ATTRIBUTE",
              "PROGRAM_DATA_ELEMENT",
              "PROGRAM_INDICATOR",
              "REPORTING_RATE"
            ],
            "example": "CATEGORY_OPTION_GROUP",
            "format": "enum",
            "type": "string"
          },
          "displayDescription": {
            "$ref": "#/components/schemas/displayDescription"
          },
          "displayName": {
            "$ref": "#/components/schemas/displayName"
          },
          "displayShortName": {
            "$ref": "#/components/schemas/displayShortName"
          },
          "externalAccess": {
            "$ref": "#/components/schemas/externalAccess"
          },
          "favorite": {
            "type": "boolean"
          },
          "favorites": {
            "items": {
              "$ref": "#/components/schemas/favorite"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "groupSets": {
            "items": {
              "maxProperties": 1,
              "minProperties": 0,
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/id"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": true,
            "type": "array"
          },
          "href": {
            "$ref": "#/components/schemas/href"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "lastUpdated": {
            "$ref": "#/components/schemas/lastUpdated"
          },
          "lastUpdatedBy": {
            "$ref": "#/components/schemas/lastUpdatedBy"
          },
          "legendSets": {
            "items": {
              "format": "uid",
              "maxLength": 11,
              "minLength": 11,
              "type": "string",
              "x-association": "true"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": false,
            "type": "array",
            "x-association": "true"
          },
          "name": {
            "$ref": "#/components/schemas/name"
          },
          "publicAccess": {
            "$ref": "#/components/schemas/publicAccess"
          },
          "shortName": {
            "$ref": "#/components/schemas/shortName"
          },
          "translations": {
            "items": {
              "properties": {
                "locale": {
                  "$ref": "#/components/schemas/locale"
                },
                "property": {
                  "$ref": "#/components/schemas/property"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "user": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "userAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userUid": {
                  "$ref": "#/components/schemas/userUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "userGroupAccesses": {
            "items": {
              "maxProperties": 4,
              "minProperties": 0,
              "properties": {
                "access": {
                  "example": "r-r-----",
                  "format": "access",
                  "maxLength": 8,
                  "minLength": 8,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userGroupUid": {
                  "$ref": "#/components/schemas/userGroupUid"
                }
              },
              "required": [
                "access",
                "displayName",
                "id",
                "userGroupUid"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          }
        },
        "required": [
          "name",
          "shortName"
        ],
        "type": "object",
        "x-status-dhis2": "template"
      },
      "categoryOptionGroupAttribute": {
        "type": "boolean"
      },
      "categoryOptionGroupSet": {
        "maxProperties": 32,
        "minProperties": 0,
        "properties": {
          "access": {
            "maxProperties": 6,
            "minProperties": 1,
            "properties": {
              "delete": {
                "$ref": "#/components/schemas/delete"
              },
              "externalize": {
                "$ref": "#/components/schemas/externalize"
              },
              "manage": {
                "$ref": "#/components/schemas/manage"
              },
              "read": {
                "$ref": "#/components/schemas/read"
              },
              "update": {
                "$ref": "#/components/schemas/update"
              },
              "write": {
                "$ref": "#/components/schemas/write"
              }
            },
            "readOnly": true,
            "required": [
              "delete",
              "externalize",
              "manage",
              "read",
              "update",
              "write"
            ],
            "type": "object"
          },
          "aggregationType": {
            "$ref": "#/components/schemas/aggregationType"
          },
          "allItems": {
            "$ref": "#/components/schemas/allItems"
          },
          "attributeValues": {
            "items": {
              "properties": {
                "attribute": {
                  "format": "uid",
                  "maxLength": 255,
                  "readOnly": false,
                  "type": "string"
                },
                "created": {
                  "$ref": "#/components/schemas/created"
                },
                "lastUpdated": {
                  "$ref": "#/components/schemas/lastUpdated"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              },
              "required": [
                "attribute"
              ]
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "categoryOptionGroups": {
            "items": {
              "maxProperties": 1,
              "minProperties": 0,
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/id"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "code": {
            "$ref": "#/components/schemas/code"
          },
          "created": {
            "$ref": "#/components/schemas/created"
          },
          "dataDimension": {
            "$ref": "#/components/schemas/dataDimension"
          },
          "dataDimensionType": {
            "enum": [
              "ATTRIBUTE",
              "DISAGGREGATION"
            ],
            "example": "ATTRIBUTE",
            "format": "enum",
            "type": "string"
          },
          "description": {
            "$ref": "#/components/schemas/description"
          },
          "dimension": {
            "$ref": "#/components/schemas/dimension"
          },
          "dimensionType": {
            "enum": [
              "ATTRIBUTE_OPTION_COMBO",
              "CATEGORY",
              "CATEGORY_OPTION_COMBO",
              "CATEGORY_OPTION_GROUP_SET",
              "DATA_COLLAPSED",
              "DATA_ELEMENT_GROUP_SET",
              "DATA_X",
              "OPTION_GROUP_SET",
              "ORGANISATION_UNIT",
              "ORGANISATION_UNIT_GROUP",
              "ORGANISATION_UNIT_GROUP_SET",
              "ORGANISATION_UNIT_LEVEL",
              "PERIOD",
              "PROGRAM_ATTRIBUTE",
              "PROGRAM_DATA_ELEMENT",
              "PROGRAM_INDICATOR",
              "STATIC",
              "VALIDATION_RULE"
            ],
            "example": "CATEGORY_OPTION_GROUP_SET",
            "format": "enum",
            "type": "string"
          },
          "displayDescription": {
            "$ref": "#/components/schemas/displayDescription"
          },
          "displayName": {
            "$ref": "#/components/schemas/displayName"
          },
          "displayShortName": {
            "$ref": "#/components/schemas/displayShortName"
          },
          "externalAccess": {
            "$ref": "#/components/schemas/externalAccess"
          },
          "favorite": {
            "type": "boolean"
          },
          "favorites": {
            "items": {
              "$ref": "#/components/schemas/favorite"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "filter": {
            "format": "general",
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "href": {
            "$ref": "#/components/schemas/href"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "items": {
            "items": {
              "maxProperties": 1,
              "minProperties": 0,
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/id"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "lastUpdated": {
            "$ref": "#/components/schemas/lastUpdated"
          },
          "lastUpdatedBy": {
            "$ref": "#/components/schemas/lastUpdatedBy"
          },
          "legendSet": {
            "format": "uid",
            "maxLength": 11,
            "minLength": 11,
            "type": "string",
            "x-association": "true"
          },
          "name": {
            "$ref": "#/components/schemas/name"
          },
          "publicAccess": {
            "$ref": "#/components/schemas/publicAccess"
          },
          "shortName": {
            "$ref": "#/components/schemas/shortName"
          },
          "translations": {
            "items": {
              "properties": {
                "locale": {
                  "$ref": "#/components/schemas/locale"
                },
                "property": {
                  "$ref": "#/components/schemas/property"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "user": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "userAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userUid": {
                  "$ref": "#/components/schemas/userUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "userGroupAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userGroupUid": {
                  "$ref": "#/components/schemas/userGroupUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          }
        },
        "required": [
          "name"
        ],
        "type": "object",
        "x-status-dhis2": "template"
      },
      "categoryOptionGroupSetAttribute": {
        "type": "boolean"
      },
      "categoryOptionGroupSetDimension": {
        "properties": {}
      },
      "chart": {
        "maxProperties": 80,
        "minProperties": 0,
        "properties": {
          "access": {
            "maxProperties": 6,
            "minProperties": 1,
            "properties": {
              "delete": {
                "$ref": "#/components/schemas/delete"
              },
              "externalize": {
                "$ref": "#/components/schemas/externalize"
              },
              "manage": {
                "$ref": "#/components/schemas/manage"
              },
              "read": {
                "$ref": "#/components/schemas/read"
              },
              "update": {
                "$ref": "#/components/schemas/update"
              },
              "write": {
                "$ref": "#/components/schemas/write"
              }
            },
            "readOnly": true,
            "required": [
              "delete",
              "externalize",
              "manage",
              "read",
              "update",
              "write"
            ],
            "type": "object"
          },
          "aggregationType": {
            "enum": [
              "AVERAGE",
              "AVERAGE_SUM_ORG_UNIT",
              "COUNT",
              "CUSTOM",
              "DEFAULT",
              "LAST",
              "LAST_AVERAGE_ORG_UNIT",
              "MAX",
              "MIN",
              "NONE",
              "STDDEV",
              "SUM",
              "VARIANCE"
            ],
            "example": "DEFAULT",
            "format": "enum",
            "type": "string"
          },
          "attributeDimensions": {
            "items": {
              "properties": {}
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "attributeValues": {
            "items": {
              "properties": {
                "attribute": {
                  "format": "uid",
                  "maxLength": 255,
                  "readOnly": false,
                  "type": "string"
                },
                "created": {
                  "$ref": "#/components/schemas/created"
                },
                "lastUpdated": {
                  "$ref": "#/components/schemas/lastUpdated"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              },
              "required": [
                "attribute"
              ]
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "baseLineLabel": {
            "$ref": "#/components/schemas/baseLineLabel"
          },
          "baseLineValue": {
            "$ref": "#/components/schemas/baseLineValue"
          },
          "category": {
            "example": "m",
            "format": "dimension",
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "categoryDimensions": {
            "items": {
              "maxProperties": 2,
              "minProperties": 0,
              "properties": {
                "category": {
                  "maxProperties": 1,
                  "minProperties": 0,
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    }
                  },
                  "required": [
                    "id"
                  ],
                  "type": "object"
                },
                "categoryOptions": {
                  "items": {
                    "maxProperties": 1,
                    "minProperties": 0,
                    "properties": {
                      "id": {
                        "$ref": "#/components/schemas/id"
                      }
                    },
                    "required": [
                      "id"
                    ],
                    "type": "object"
                  },
                  "maxItems": 2147483647,
                  "minItems": 0,
                  "type": "array"
                }
              },
              "required": [
                "category",
                "categoryOptions"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "categoryOptionGroupSetDimensions": {
            "items": {
              "properties": {}
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "code": {
            "$ref": "#/components/schemas/code"
          },
          "colorSet": {
            "format": "uid",
            "maxLength": 11,
            "minLength": 11,
            "type": "string",
            "x-association": "true"
          },
          "columns": {
            "items": {
              "properties": {}
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "completedOnly": {
            "$ref": "#/components/schemas/completedOnly"
          },
          "created": {
            "$ref": "#/components/schemas/created"
          },
          "cumulativeValues": {
            "$ref": "#/components/schemas/cumulativeValues"
          },
          "dataDimensionItems": {
            "items": {
              "maxProperties": 6,
              "minProperties": 0,
              "properties": {
                "dataDimensionItemType": {
                  "enum": [
                    "DATA_ELEMENT",
                    "DATA_ELEMENT_OPERAND",
                    "INDICATOR",
                    "PROGRAM_INDICATOR",
                    "REPORTING_RATE"
                  ],
                  "example": "INDICATOR",
                  "format": "enum",
                  "type": "string"
                },
                "dataElement": {
                  "maxProperties": 1,
                  "minProperties": 0,
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    }
                  },
                  "required": [
                    "id"
                  ],
                  "type": "object"
                },
                "dataElementOperand": {
                  "maxProperties": 21,
                  "minProperties": 0,
                  "properties": {
                    "access": {
                      "maxProperties": 6,
                      "minProperties": 0,
                      "properties": {
                        "delete": {
                          "$ref": "#/components/schemas/delete"
                        },
                        "externalize": {
                          "$ref": "#/components/schemas/externalize"
                        },
                        "manage": {
                          "$ref": "#/components/schemas/manage"
                        },
                        "read": {
                          "$ref": "#/components/schemas/read"
                        },
                        "update": {
                          "$ref": "#/components/schemas/update"
                        },
                        "write": {
                          "$ref": "#/components/schemas/write"
                        }
                      },
                      "required": [
                        "delete",
                        "externalize",
                        "manage",
                        "read",
                        "update",
                        "write"
                      ],
                      "type": "object"
                    },
                    "aggregationType": {
                      "$ref": "#/components/schemas/aggregationType"
                    },
                    "attributeValues": {
                      "items": {
                        "properties": {
                          "attribute": {
                            "format": "uid",
                            "maxLength": 255,
                            "readOnly": false,
                            "type": "string"
                          },
                          "created": {
                            "$ref": "#/components/schemas/created"
                          },
                          "lastUpdated": {
                            "$ref": "#/components/schemas/lastUpdated"
                          },
                          "value": {
                            "$ref": "#/components/schemas/value"
                          }
                        },
                        "required": [
                          "attribute"
                        ]
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "type": "array"
                    },
                    "categoryOptionCombo": {
                      "maxProperties": 1,
                      "minProperties": 0,
                      "properties": {
                        "id": {
                          "$ref": "#/components/schemas/id"
                        }
                      },
                      "required": [
                        "id"
                      ],
                      "type": "object"
                    },
                    "created": {
                      "$ref": "#/components/schemas/created"
                    },
                    "dataElement": {
                      "maxProperties": 1,
                      "minProperties": 0,
                      "properties": {
                        "id": {
                          "$ref": "#/components/schemas/id"
                        }
                      },
                      "required": [
                        "id"
                      ],
                      "type": "object"
                    },
                    "dimensionItem": {
                      "$ref": "#/components/schemas/dimensionItem"
                    },
                    "dimensionItemType": {
                      "enum": [
                        "DATA_ELEMENT_OPERAND"
                      ],
                      "example": "DATA_ELEMENT_OPERAND",
                      "format": "enum",
                      "type": "string"
                    },
                    "displayName": {
                      "$ref": "#/components/schemas/displayName"
                    },
                    "displayShortName": {
                      "$ref": "#/components/schemas/displayShortName"
                    },
                    "externalAccess": {
                      "$ref": "#/components/schemas/externalAccess"
                    },
                    "favorite": {
                      "type": "boolean"
                    },
                    "favorites": {
                      "items": {
                        "$ref": "#/components/schemas/favorite"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "type": "array"
                    },
                    "id": {
                      "$ref": "#/components/schemas/id"
                    },
                    "lastUpdated": {
                      "$ref": "#/components/schemas/lastUpdated"
                    },
                    "legendSets": {
                      "items": {
                        "maxProperties": 20,
                        "minProperties": 0,
                        "properties": {
                          "access": {
                            "maxProperties": 6,
                            "minProperties": 1,
                            "properties": {
                              "delete": {
                                "$ref": "#/components/schemas/delete"
                              },
                              "externalize": {
                                "$ref": "#/components/schemas/externalize"
                              },
                              "manage": {
                                "$ref": "#/components/schemas/manage"
                              },
                              "read": {
                                "$ref": "#/components/schemas/read"
                              },
                              "update": {
                                "$ref": "#/components/schemas/update"
                              },
                              "write": {
                                "$ref": "#/components/schemas/write"
                              }
                            },
                            "readOnly": true,
                            "required": [
                              "delete",
                              "externalize",
                              "manage",
                              "read",
                              "update",
                              "write"
                            ],
                            "type": "object"
                          },
                          "attributeValues": {
                            "items": {
                              "properties": {
                                "attribute": {
                                  "format": "uid",
                                  "maxLength": 255,
                                  "readOnly": false,
                                  "type": "string"
                                },
                                "created": {
                                  "$ref": "#/components/schemas/created"
                                },
                                "lastUpdated": {
                                  "$ref": "#/components/schemas/lastUpdated"
                                },
                                "value": {
                                  "$ref": "#/components/schemas/value"
                                }
                              },
                              "required": [
                                "attribute"
                              ]
                            },
                            "maxItems": 2147483647,
                            "minItems": 0,
                            "type": "array"
                          },
                          "code": {
                            "$ref": "#/components/schemas/code"
                          },
                          "created": {
                            "$ref": "#/components/schemas/created"
                          },
                          "displayName": {
                            "$ref": "#/components/schemas/displayName"
                          },
                          "externalAccess": {
                            "$ref": "#/components/schemas/externalAccess"
                          },
                          "favorite": {
                            "type": "boolean"
                          },
                          "favorites": {
                            "items": {
                              "$ref": "#/components/schemas/favorite"
                            },
                            "maxItems": 2147483647,
                            "minItems": 0,
                            "type": "array"
                          },
                          "href": {
                            "$ref": "#/components/schemas/href"
                          },
                          "id": {
                            "$ref": "#/components/schemas/id"
                          },
                          "lastUpdated": {
                            "$ref": "#/components/schemas/lastUpdated"
                          },
                          "lastUpdatedBy": {
                            "properties": {
                              "id": {
                                "$ref": "#/components/schemas/id"
                              }
                            },
                            "required": [
                              "id"
                            ],
                            "type": "object"
                          },
                          "legends": {
                            "items": {
                              "maxProperties": 16,
                              "minProperties": 0,
                              "properties": {
                                "access": {
                                  "maxProperties": 6,
                                  "minProperties": 0,
                                  "properties": {
                                    "delete": {
                                      "$ref": "#/components/schemas/delete"
                                    },
                                    "externalize": {
                                      "$ref": "#/components/schemas/externalize"
                                    },
                                    "manage": {
                                      "$ref": "#/components/schemas/manage"
                                    },
                                    "read": {
                                      "$ref": "#/components/schemas/read"
                                    },
                                    "update": {
                                      "$ref": "#/components/schemas/update"
                                    },
                                    "write": {
                                      "$ref": "#/components/schemas/write"
                                    }
                                  },
                                  "required": [
                                    "delete",
                                    "externalize",
                                    "manage",
                                    "read",
                                    "update",
                                    "write"
                                  ],
                                  "type": "object"
                                },
                                "attributeValues": {
                                  "items": {
                                    "properties": {
                                      "attribute": {
                                        "format": "uid",
                                        "maxLength": 255,
                                        "readOnly": false,
                                        "type": "string"
                                      },
                                      "created": {
                                        "$ref": "#/components/schemas/created"
                                      },
                                      "lastUpdated": {
                                        "$ref": "#/components/schemas/lastUpdated"
                                      },
                                      "value": {
                                        "$ref": "#/components/schemas/value"
                                      }
                                    },
                                    "required": [
                                      "attribute"
                                    ]
                                  },
                                  "maxItems": 2147483647,
                                  "minItems": 0,
                                  "type": "array"
                                },
                                "color": {
                                  "$ref": "#/components/schemas/color"
                                },
                                "created": {
                                  "$ref": "#/components/schemas/created"
                                },
                                "displayName": {
                                  "$ref": "#/components/schemas/displayName"
                                },
                                "endValue": {
                                  "example": 40.0,
                                  "format": "double",
                                  "maximum": 2147483647,
                                  "minimum": -2.0,
                                  "type": "number"
                                },
                                "externalAccess": {
                                  "$ref": "#/components/schemas/externalAccess"
                                },
                                "favorite": {
                                  "type": "boolean"
                                },
                                "favorites": {
                                  "items": {
                                    "$ref": "#/components/schemas/favorite"
                                  },
                                  "maxItems": 2147483647,
                                  "minItems": 0,
                                  "type": "array"
                                },
                                "id": {
                                  "$ref": "#/components/schemas/id"
                                },
                                "lastUpdated": {
                                  "$ref": "#/components/schemas/lastUpdated"
                                },
                                "name": {
                                  "$ref": "#/components/schemas/name"
                                },
                                "startValue": {
                                  "example": 30.0,
                                  "format": "double",
                                  "maximum": 2147483647.0,
                                  "minimum": -10.0,
                                  "type": "number"
                                },
                                "translations": {
                                  "items": {
                                    "properties": {
                                      "locale": {
                                        "$ref": "#/components/schemas/locale"
                                      },
                                      "property": {
                                        "$ref": "#/components/schemas/property"
                                      },
                                      "value": {
                                        "$ref": "#/components/schemas/value"
                                      }
                                    }
                                  },
                                  "maxItems": 2147483647,
                                  "minItems": 0,
                                  "type": "array"
                                },
                                "userAccesses": {
                                  "items": {
                                    "properties": {
                                      "access": {
                                        "format": "access",
                                        "maxLength": 255,
                                        "minLength": 0,
                                        "readOnly": false,
                                        "type": "string"
                                      },
                                      "displayName": {
                                        "$ref": "#/components/schemas/displayName"
                                      },
                                      "id": {
                                        "$ref": "#/components/schemas/id"
                                      },
                                      "userUid": {
                                        "$ref": "#/components/schemas/userUid"
                                      }
                                    }
                                  },
                                  "maxItems": 2147483647,
                                  "minItems": 0,
                                  "type": "array"
                                },
                                "userGroupAccesses": {
                                  "items": {
                                    "properties": {
                                      "access": {
                                        "format": "access",
                                        "maxLength": 255,
                                        "minLength": 0,
                                        "readOnly": false,
                                        "type": "string"
                                      },
                                      "displayName": {
                                        "$ref": "#/components/schemas/displayName"
                                      },
                                      "id": {
                                        "$ref": "#/components/schemas/id"
                                      },
                                      "userGroupUid": {
                                        "$ref": "#/components/schemas/userGroupUid"
                                      }
                                    }
                                  },
                                  "maxItems": 2147483647,
                                  "minItems": 0,
                                  "type": "array"
                                }
                              },
                              "required": [
                                "access",
                                "attributeValues",
                                "color",
                                "created",
                                "displayName",
                                "endValue",
                                "externalAccess",
                                "favorite",
                                "favorites",
                                "id",
                                "lastUpdated",
                                "name",
                                "startValue",
                                "translations",
                                "userAccesses",
                                "userGroupAccesses"
                              ],
                              "type": "object"
                            },
                            "maxItems": 2147483647,
                            "minItems": 0,
                            "type": "array"
                          },
                          "name": {
                            "$ref": "#/components/schemas/name"
                          },
                          "publicAccess": {
                            "$ref": "#/components/schemas/publicAccess"
                          },
                          "symbolizer": {
                            "$ref": "#/components/schemas/symbolizer"
                          },
                          "translations": {
                            "items": {
                              "properties": {
                                "locale": {
                                  "$ref": "#/components/schemas/locale"
                                },
                                "property": {
                                  "$ref": "#/components/schemas/property"
                                },
                                "value": {
                                  "$ref": "#/components/schemas/value"
                                }
                              }
                            },
                            "maxItems": 2147483647,
                            "minItems": 0,
                            "type": "array"
                          },
                          "user": {
                            "properties": {
                              "id": {
                                "$ref": "#/components/schemas/id"
                              }
                            },
                            "required": [
                              "id"
                            ],
                            "type": "object"
                          },
                          "userAccesses": {
                            "items": {
                              "properties": {
                                "access": {
                                  "format": "access",
                                  "maxLength": 255,
                                  "minLength": 0,
                                  "readOnly": false,
                                  "type": "string"
                                },
                                "displayName": {
                                  "$ref": "#/components/schemas/displayName"
                                },
                                "id": {
                                  "$ref": "#/components/schemas/id"
                                },
                                "userUid": {
                                  "$ref": "#/components/schemas/userUid"
                                }
                              }
                            },
                            "maxItems": 2147483647,
                            "minItems": 0,
                            "type": "array"
                          },
                          "userGroupAccesses": {
                            "items": {
                              "properties": {
                                "access": {
                                  "format": "access",
                                  "maxLength": 255,
                                  "minLength": 0,
                                  "readOnly": false,
                                  "type": "string"
                                },
                                "displayName": {
                                  "$ref": "#/components/schemas/displayName"
                                },
                                "id": {
                                  "$ref": "#/components/schemas/id"
                                },
                                "userGroupUid": {
                                  "$ref": "#/components/schemas/userGroupUid"
                                }
                              }
                            },
                            "maxItems": 2147483647,
                            "minItems": 0,
                            "type": "array"
                          }
                        },
                        "required": [
                          "name"
                        ],
                        "type": "object",
                        "x-status-dhis2": "template"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "type": "array"
                    },
                    "name": {
                      "$ref": "#/components/schemas/name"
                    },
                    "shortName": {
                      "$ref": "#/components/schemas/shortName"
                    },
                    "translations": {
                      "items": {
                        "properties": {
                          "locale": {
                            "$ref": "#/components/schemas/locale"
                          },
                          "property": {
                            "$ref": "#/components/schemas/property"
                          },
                          "value": {
                            "$ref": "#/components/schemas/value"
                          }
                        }
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "type": "array"
                    },
                    "userAccesses": {
                      "items": {
                        "properties": {
                          "access": {
                            "format": "access",
                            "maxLength": 255,
                            "minLength": 0,
                            "readOnly": false,
                            "type": "string"
                          },
                          "displayName": {
                            "$ref": "#/components/schemas/displayName"
                          },
                          "id": {
                            "$ref": "#/components/schemas/id"
                          },
                          "userUid": {
                            "$ref": "#/components/schemas/userUid"
                          }
                        }
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "type": "array"
                    },
                    "userGroupAccesses": {
                      "items": {
                        "properties": {
                          "access": {
                            "format": "access",
                            "maxLength": 255,
                            "minLength": 0,
                            "readOnly": false,
                            "type": "string"
                          },
                          "displayName": {
                            "$ref": "#/components/schemas/displayName"
                          },
                          "id": {
                            "$ref": "#/components/schemas/id"
                          },
                          "userGroupUid": {
                            "$ref": "#/components/schemas/userGroupUid"
                          }
                        }
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "type": "array"
                    }
                  },
                  "required": [
                    "access",
                    "attributeValues",
                    "categoryOptionCombo",
                    "created",
                    "dataElement",
                    "dimensionItem",
                    "dimensionItemType",
                    "displayName",
                    "displayShortName",
                    "externalAccess",
                    "favorite",
                    "favorites",
                    "id",
                    "lastUpdated",
                    "legendSets",
                    "name",
                    "shortName",
                    "translations",
                    "userAccesses",
                    "userGroupAccesses"
                  ],
                  "type": "object"
                },
                "indicator": {
                  "maxProperties": 1,
                  "minProperties": 0,
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    }
                  },
                  "required": [
                    "id"
                  ],
                  "type": "object"
                },
                "programIndicator": {
                  "maxProperties": 1,
                  "minProperties": 0,
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    }
                  },
                  "required": [
                    "id"
                  ],
                  "type": "object"
                },
                "reportingRate": {
                  "maxProperties": 18,
                  "minProperties": 0,
                  "properties": {
                    "access": {
                      "maxProperties": 6,
                      "minProperties": 0,
                      "properties": {
                        "delete": {
                          "$ref": "#/components/schemas/delete"
                        },
                        "externalize": {
                          "$ref": "#/components/schemas/externalize"
                        },
                        "manage": {
                          "$ref": "#/components/schemas/manage"
                        },
                        "read": {
                          "$ref": "#/components/schemas/read"
                        },
                        "update": {
                          "$ref": "#/components/schemas/update"
                        },
                        "write": {
                          "$ref": "#/components/schemas/write"
                        }
                      },
                      "required": [
                        "delete",
                        "externalize",
                        "manage",
                        "read",
                        "update",
                        "write"
                      ],
                      "type": "object"
                    },
                    "attributeValues": {
                      "items": {
                        "properties": {
                          "attribute": {
                            "format": "uid",
                            "maxLength": 255,
                            "readOnly": false,
                            "type": "string"
                          },
                          "created": {
                            "$ref": "#/components/schemas/created"
                          },
                          "lastUpdated": {
                            "$ref": "#/components/schemas/lastUpdated"
                          },
                          "value": {
                            "$ref": "#/components/schemas/value"
                          }
                        },
                        "required": [
                          "attribute"
                        ]
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "type": "array"
                    },
                    "dataSet": {
                      "maxProperties": 1,
                      "minProperties": 0,
                      "properties": {
                        "id": {
                          "$ref": "#/components/schemas/id"
                        }
                      },
                      "required": [
                        "id"
                      ],
                      "type": "object"
                    },
                    "dimensionItem": {
                      "$ref": "#/components/schemas/dimensionItem"
                    },
                    "dimensionItemType": {
                      "enum": [
                        "REPORTING_RATE"
                      ],
                      "example": "REPORTING_RATE",
                      "format": "enum",
                      "type": "string"
                    },
                    "displayName": {
                      "$ref": "#/components/schemas/displayName"
                    },
                    "displayShortName": {
                      "$ref": "#/components/schemas/displayShortName"
                    },
                    "externalAccess": {
                      "$ref": "#/components/schemas/externalAccess"
                    },
                    "favorite": {
                      "type": "boolean"
                    },
                    "favorites": {
                      "items": {
                        "$ref": "#/components/schemas/favorite"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "type": "array"
                    },
                    "id": {
                      "$ref": "#/components/schemas/id"
                    },
                    "legendSets": {
                      "items": {
                        "maxProperties": 1,
                        "minProperties": 0,
                        "properties": {
                          "id": {
                            "$ref": "#/components/schemas/id"
                          }
                        },
                        "required": [
                          "id"
                        ],
                        "type": "object"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "type": "array"
                    },
                    "metric": {
                      "enum": [
                        "REPORTING_RATE"
                      ],
                      "example": "REPORTING_RATE",
                      "format": "enum",
                      "type": "string"
                    },
                    "name": {
                      "$ref": "#/components/schemas/name"
                    },
                    "shortName": {
                      "$ref": "#/components/schemas/shortName"
                    },
                    "translations": {
                      "items": {
                        "properties": {
                          "locale": {
                            "$ref": "#/components/schemas/locale"
                          },
                          "property": {
                            "$ref": "#/components/schemas/property"
                          },
                          "value": {
                            "$ref": "#/components/schemas/value"
                          }
                        }
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "type": "array"
                    },
                    "userAccesses": {
                      "items": {
                        "properties": {
                          "access": {
                            "format": "access",
                            "maxLength": 255,
                            "minLength": 0,
                            "readOnly": false,
                            "type": "string"
                          },
                          "displayName": {
                            "$ref": "#/components/schemas/displayName"
                          },
                          "id": {
                            "$ref": "#/components/schemas/id"
                          },
                          "userUid": {
                            "$ref": "#/components/schemas/userUid"
                          }
                        }
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "type": "array"
                    },
                    "userGroupAccesses": {
                      "items": {
                        "properties": {
                          "access": {
                            "format": "access",
                            "maxLength": 255,
                            "minLength": 0,
                            "readOnly": false,
                            "type": "string"
                          },
                          "displayName": {
                            "$ref": "#/components/schemas/displayName"
                          },
                          "id": {
                            "$ref": "#/components/schemas/id"
                          },
                          "userGroupUid": {
                            "$ref": "#/components/schemas/userGroupUid"
                          }
                        }
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "type": "array"
                    }
                  },
                  "required": [
                    "access",
                    "attributeValues",
                    "dataSet",
                    "dimensionItem",
                    "dimensionItemType",
                    "displayName",
                    "displayShortName",
                    "externalAccess",
                    "favorite",
                    "favorites",
                    "id",
                    "legendSets",
                    "metric",
                    "name",
                    "shortName",
                    "translations",
                    "userAccesses",
                    "userGroupAccesses"
                  ],
                  "type": "object"
                }
              },
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "dataElementDimensions": {
            "items": {
              "properties": {}
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "dataElementGroupSetDimensions": {
            "items": {
              "maxProperties": 2,
              "minProperties": 0,
              "properties": {
                "dataElementGroupSet": {
                  "maxProperties": 1,
                  "minProperties": 0,
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    }
                  },
                  "required": [
                    "id"
                  ],
                  "type": "object"
                },
                "dataElementGroups": {
                  "items": {
                    "maxProperties": 1,
                    "minProperties": 0,
                    "properties": {
                      "id": {
                        "$ref": "#/components/schemas/id"
                      }
                    },
                    "required": [
                      "id"
                    ],
                    "type": "object"
                  },
                  "maxItems": 2147483647,
                  "minItems": 0,
                  "type": "array"
                }
              },
              "required": [
                "dataElementGroupSet",
                "dataElementGroups"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "description": {
            "$ref": "#/components/schemas/description"
          },
          "digitGroupSeparator": {
            "$ref": "#/components/schemas/digitGroupSeparator"
          },
          "displayDescription": {
            "$ref": "#/components/schemas/displayDescription"
          },
          "displayName": {
            "$ref": "#/components/schemas/displayName"
          },
          "displayShortName": {
            "$ref": "#/components/schemas/displayShortName"
          },
          "domainAxisLabel": {
            "$ref": "#/components/schemas/domainAxisLabel"
          },
          "externalAccess": {
            "$ref": "#/components/schemas/externalAccess"
          },
          "favorite": {
            "type": "boolean"
          },
          "favorites": {
            "items": {
              "$ref": "#/components/schemas/favorite"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "filterDimensions": {
            "items": {
              "example": "m",
              "format": "dimension",
              "maxLength": 255,
              "minLength": 1,
              "type": "string"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "filters": {
            "items": {
              "properties": {}
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "hideEmptyRowItems": {
            "$ref": "#/components/schemas/hideEmptyRowItems"
          },
          "hideLegend": {
            "$ref": "#/components/schemas/hideLegend"
          },
          "hideSubtitle": {
            "$ref": "#/components/schemas/hideSubtitle"
          },
          "hideTitle": {
            "$ref": "#/components/schemas/hideTitle"
          },
          "href": {
            "$ref": "#/components/schemas/href"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "interpretations": {
            "items": {
              "maxProperties": 1,
              "minProperties": 0,
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/id"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "itemOrganisationUnitGroups": {
            "items": {
              "maxProperties": 1,
              "minProperties": 0,
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/id"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "lastUpdated": {
            "$ref": "#/components/schemas/lastUpdated"
          },
          "lastUpdatedBy": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "legendDisplayStrategy": {
            "$ref": "#/components/schemas/legendDisplayStrategy"
          },
          "legendSet": {
            "format": "uid",
            "maxLength": 11,
            "minLength": 11,
            "type": "string",
            "x-association": "true"
          },
          "name": {
            "$ref": "#/components/schemas/name"
          },
          "noSpaceBetweenColumns": {
            "$ref": "#/components/schemas/noSpaceBetweenColumns"
          },
          "organisationUnitGroupSetDimensions": {
            "items": {
              "maxProperties": 2,
              "minProperties": 0,
              "properties": {
                "organisationUnitGroupSet": {
                  "maxProperties": 1,
                  "minProperties": 0,
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    }
                  },
                  "required": [
                    "id"
                  ],
                  "type": "object"
                },
                "organisationUnitGroups": {
                  "items": {
                    "maxProperties": 1,
                    "minProperties": 0,
                    "properties": {
                      "id": {
                        "$ref": "#/components/schemas/id"
                      }
                    },
                    "required": [
                      "id"
                    ],
                    "type": "object"
                  },
                  "maxItems": 2147483647,
                  "minItems": 0,
                  "type": "array"
                }
              },
              "required": [
                "organisationUnitGroupSet",
                "organisationUnitGroups"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "organisationUnitLevels": {
            "items": {
              "example": 3,
              "format": "int32",
              "maximum": 255,
              "minimum": 1,
              "type": "integer"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "organisationUnits": {
            "items": {
              "maxProperties": 1,
              "minProperties": 0,
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/id"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "parentGraphMap": {
            "maxProperties": 1,
            "minProperties": 0,
            "readOnly": false,
            "type": "object"
          },
          "percentStackedValues": {
            "$ref": "#/components/schemas/percentStackedValues"
          },
          "periods": {
            "items": {
              "maxProperties": 1,
              "minProperties": 0,
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/id"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "programIndicatorDimensions": {
            "items": {
              "properties": {}
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "publicAccess": {
            "$ref": "#/components/schemas/publicAccess"
          },
          "rangeAxisDecimals": {
            "$ref": "#/components/schemas/rangeAxisDecimals"
          },
          "rangeAxisLabel": {
            "$ref": "#/components/schemas/rangeAxisLabel"
          },
          "rangeAxisMaxValue": {
            "$ref": "#/components/schemas/rangeAxisMaxValue"
          },
          "rangeAxisMinValue": {
            "$ref": "#/components/schemas/rangeAxisMinValue"
          },
          "rangeAxisSteps": {
            "$ref": "#/components/schemas/rangeAxisSteps"
          },
          "regressionType": {
            "$ref": "#/components/schemas/regressionType"
          },
          "relativePeriods": {
            "maxProperties": 39,
            "minProperties": 1,
            "properties": {
              "biMonthsThisYear": {
                "type": "boolean"
              },
              "last12Months": {
                "type": "boolean"
              },
              "last12Weeks": {
                "type": "boolean"
              },
              "last14Days": {
                "type": "boolean"
              },
              "last2SixMonths": {
                "type": "boolean"
              },
              "last3Days": {
                "type": "boolean"
              },
              "last3Months": {
                "type": "boolean"
              },
              "last4BiWeeks": {
                "type": "boolean"
              },
              "last4Quarters": {
                "type": "boolean"
              },
              "last4Weeks": {
                "type": "boolean"
              },
              "last52Weeks": {
                "type": "boolean"
              },
              "last5FinancialYears": {
                "type": "boolean"
              },
              "last5Years": {
                "type": "boolean"
              },
              "last6BiMonths": {
                "type": "boolean"
              },
              "last6Months": {
                "type": "boolean"
              },
              "last7Days": {
                "type": "boolean"
              },
              "lastBiWeek": {
                "type": "boolean"
              },
              "lastBimonth": {
                "type": "boolean"
              },
              "lastFinancialYear": {
                "type": "boolean"
              },
              "lastMonth": {
                "type": "boolean"
              },
              "lastQuarter": {
                "type": "boolean"
              },
              "lastSixMonth": {
                "type": "boolean"
              },
              "lastWeek": {
                "type": "boolean"
              },
              "lastYear": {
                "type": "boolean"
              },
              "monthsLastYear": {
                "type": "boolean"
              },
              "monthsThisYear": {
                "type": "boolean"
              },
              "quartersLastYear": {
                "type": "boolean"
              },
              "quartersThisYear": {
                "type": "boolean"
              },
              "thisBiWeek": {
                "type": "boolean"
              },
              "thisBimonth": {
                "type": "boolean"
              },
              "thisDay": {
                "type": "boolean"
              },
              "thisFinancialYear": {
                "type": "boolean"
              },
              "thisMonth": {
                "type": "boolean"
              },
              "thisQuarter": {
                "type": "boolean"
              },
              "thisSixMonth": {
                "type": "boolean"
              },
              "thisWeek": {
                "type": "boolean"
              },
              "thisYear": {
                "type": "boolean"
              },
              "weeksThisYear": {
                "type": "boolean"
              },
              "yesterday": {
                "type": "boolean"
              }
            },
            "readOnly": false,
            "required": [
              "biMonthsThisYear",
              "last12Months",
              "last12Weeks",
              "last14Days",
              "last2SixMonths",
              "last3Days",
              "last3Months",
              "last4BiWeeks",
              "last4Quarters",
              "last4Weeks",
              "last52Weeks",
              "last5FinancialYears",
              "last5Years",
              "last6BiMonths",
              "last6Months",
              "last7Days",
              "lastBiWeek",
              "lastBimonth",
              "lastFinancialYear",
              "lastMonth",
              "lastQuarter",
              "lastSixMonth",
              "lastWeek",
              "lastYear",
              "monthsLastYear",
              "monthsThisYear",
              "quartersLastYear",
              "quartersThisYear",
              "thisBiWeek",
              "thisBimonth",
              "thisDay",
              "thisFinancialYear",
              "thisMonth",
              "thisQuarter",
              "thisSixMonth",
              "thisWeek",
              "thisYear",
              "weeksThisYear",
              "yesterday"
            ],
            "type": "object"
          },
          "rows": {
            "items": {
              "properties": {}
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "series": {
            "$ref": "#/components/schemas/series"
          },
          "shortName": {
            "$ref": "#/components/schemas/shortName"
          },
          "showData": {
            "$ref": "#/components/schemas/showData"
          },
          "sortOrder": {
            "$ref": "#/components/schemas/sortOrder"
          },
          "subscribed": {
            "$ref": "#/components/schemas/subscribed"
          },
          "subscribers": {
            "items": {
              "properties": {}
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "subtitle": {
            "$ref": "#/components/schemas/subtitle"
          },
          "targetLineLabel": {
            "$ref": "#/components/schemas/targetLineLabel"
          },
          "targetLineValue": {
            "$ref": "#/components/schemas/targetLineValue"
          },
          "timeField": {
            "$ref": "#/components/schemas/timeField"
          },
          "title": {
            "$ref": "#/components/schemas/title"
          },
          "topLimit": {
            "$ref": "#/components/schemas/topLimit"
          },
          "translations": {
            "items": {
              "properties": {
                "locale": {
                  "$ref": "#/components/schemas/locale"
                },
                "property": {
                  "$ref": "#/components/schemas/property"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "type": {
            "$ref": "#/components/schemas/type"
          },
          "user": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "userAccesses": {
            "items": {
              "maxProperties": 4,
              "minProperties": 0,
              "properties": {
                "access": {
                  "example": "r-------",
                  "format": "access",
                  "maxLength": 8,
                  "minLength": 8,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userUid": {
                  "$ref": "#/components/schemas/userUid"
                }
              },
              "required": [
                "access",
                "displayName",
                "id",
                "userUid"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "userGroupAccesses": {
            "items": {
              "maxProperties": 4,
              "minProperties": 0,
              "properties": {
                "access": {
                  "example": "r-r-----",
                  "format": "access",
                  "maxLength": 8,
                  "minLength": 8,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userGroupUid": {
                  "$ref": "#/components/schemas/userGroupUid"
                }
              },
              "required": [
                "access",
                "displayName",
                "id",
                "userGroupUid"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "userOrganisationUnit": {
            "$ref": "#/components/schemas/userOrganisationUnit"
          },
          "userOrganisationUnitChildren": {
            "$ref": "#/components/schemas/userOrganisationUnitChildren"
          },
          "userOrganisationUnitGrandChildren": {
            "$ref": "#/components/schemas/userOrganisationUnitGrandChildren"
          },
          "yearlySeries": {
            "items": {
              "enum": [
                "LAST_YEAR",
                "THIS_YEAR"
              ],
              "example": "THIS_YEAR",
              "format": "enum",
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "name",
          "type"
        ],
        "type": "object",
        "x-status-dhis2": "template"
      },
      "cid": {
        "maxLength": 230,
        "minLength": 0,
        "readOnly": false,
        "type": "string"
      },
      "classes": {
        "example": 5,
        "format": "int32",
        "maximum": 2147483647,
        "minimum": 0,
        "type": "integer"
      },
      "closedDate": {
        "example": "2014-03-02T00:00:00.000",
        "format": "date-time",
        "maxLength": 23,
        "minLength": 23,
        "type": "string"
      },
      "code": {
        "maxLength": 50,
        "minLength": 0,
        "readOnly": false,
        "type": "string"
      },
      "colSubTotals": {
        "type": "boolean"
      },
      "colTotals": {
        "type": "boolean"
      },
      "collapseDataDimensions": {
        "type": "boolean"
      },
      "color": {
        "format": "general",
        "maxLength": 2147483647,
        "minLength": 0,
        "type": "string"
      },
      "colorHigh": {
        "example": "mycol",
        "format": "general",
        "maxLength": 255,
        "minLength": 0,
        "type": "string"
      },
      "colorLow": {
        "example": "mycol",
        "format": "general",
        "maxLength": 255,
        "minLength": 0,
        "type": "string"
      },
      "colorScale": {
        "example": "mycolorScale",
        "format": "general",
        "maxLength": 255,
        "minLength": 0,
        "type": "string"
      },
      "colorSet": {
        "maxProperties": 18,
        "minProperties": 0,
        "properties": {
          "access": {
            "maxProperties": 6,
            "minProperties": 1,
            "properties": {
              "delete": {
                "$ref": "#/components/schemas/delete"
              },
              "externalize": {
                "$ref": "#/components/schemas/externalize"
              },
              "manage": {
                "$ref": "#/components/schemas/manage"
              },
              "read": {
                "$ref": "#/components/schemas/read"
              },
              "update": {
                "$ref": "#/components/schemas/update"
              },
              "write": {
                "$ref": "#/components/schemas/write"
              }
            },
            "readOnly": true,
            "type": "object"
          },
          "attributeValue": {
            "items": {
              "maxProperties": 4,
              "minProperties": 0,
              "properties": {
                "attribute": {
                  "format": "uid",
                  "maxLength": 11,
                  "minLength": 11,
                  "readOnly": false,
                  "type": "string"
                },
                "created": {
                  "$ref": "#/components/schemas/created"
                },
                "lastUpdated": {
                  "$ref": "#/components/schemas/lastUpdated"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": false,
            "type": "array"
          },
          "code": {
            "$ref": "#/components/schemas/code"
          },
          "color": {
            "items": {
              "format": "uid",
              "maxLength": 11,
              "minLength": 11,
              "type": "string"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": false,
            "type": "array"
          },
          "created": {
            "$ref": "#/components/schemas/created"
          },
          "displayName": {
            "$ref": "#/components/schemas/displayName"
          },
          "externalAccess": {
            "$ref": "#/components/schemas/externalAccess"
          },
          "favorite": {
            "type": "boolean"
          },
          "href": {
            "$ref": "#/components/schemas/href"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "lastUpdated": {
            "$ref": "#/components/schemas/lastUpdated"
          },
          "lastUpdatedBy": {
            "$ref": "#/components/schemas/lastUpdatedBy"
          },
          "name": {
            "$ref": "#/components/schemas/name"
          },
          "publicAccess": {
            "$ref": "#/components/schemas/publicAccess"
          },
          "translation": {
            "items": {
              "maxProperties": 0,
              "minProperties": 0,
              "properties": {}
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": false,
            "type": "array"
          },
          "user": {
            "format": "uid",
            "maxLength": 11,
            "minLength": 11,
            "readOnly": false,
            "type": "string"
          },
          "userAccess": {
            "items": {
              "maxProperties": 4,
              "minProperties": 0,
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 8,
                  "minLength": 8,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userUid": {
                  "$ref": "#/components/schemas/userUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": false,
            "type": "array"
          },
          "userGroupAccess": {
            "items": {
              "maxProperties": 4,
              "minProperties": 0,
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 8,
                  "minLength": 8,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userGroupUid": {
                  "$ref": "#/components/schemas/userGroupUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": false,
            "type": "array"
          }
        },
        "required": [
          "name"
        ],
        "x-status-dhis2": "template"
      },
      "column": {
        "properties": {}
      },
      "comment": {
        "example": "mycomment",
        "format": "general",
        "maxLength": 2147483647,
        "minLength": 0,
        "type": "string"
      },
      "completeEventsExpiryDays": {
        "example": 0,
        "format": "int32",
        "maximum": 2147483647,
        "minimum": 0,
        "type": "integer"
      },
      "completedOnly": {
        "type": "boolean"
      },
      "compulsory": {
        "type": "boolean"
      },
      "compulsoryFieldsCompleteOnly": {
        "type": "boolean"
      },
      "condition": {
        "example": "mycondition",
        "format": "general",
        "maxLength": 2147483647,
        "minLength": 0,
        "type": "string"
      },
      "confidential": {
        "type": "boolean"
      },
      "config": {
        "example": "myconfig",
        "format": "general",
        "maxLength": 2147483647,
        "minLength": 0,
        "type": "string"
      },
      "configurable": {
        "readOnly": true,
        "type": "boolean"
      },
      "constant": {
        "maxProperties": 23,
        "minProperties": 0,
        "properties": {
          "access": {
            "maxProperties": 6,
            "minProperties": 1,
            "properties": {
              "delete": {
                "$ref": "#/components/schemas/delete"
              },
              "externalize": {
                "$ref": "#/components/schemas/externalize"
              },
              "manage": {
                "$ref": "#/components/schemas/manage"
              },
              "read": {
                "$ref": "#/components/schemas/read"
              },
              "update": {
                "$ref": "#/components/schemas/update"
              },
              "write": {
                "$ref": "#/components/schemas/write"
              }
            },
            "readOnly": true,
            "required": [
              "delete",
              "externalize",
              "manage",
              "read",
              "update",
              "write"
            ],
            "type": "object"
          },
          "attributeValues": {
            "items": {
              "properties": {
                "attribute": {
                  "format": "uid",
                  "maxLength": 255,
                  "readOnly": false,
                  "type": "string"
                },
                "created": {
                  "$ref": "#/components/schemas/created"
                },
                "lastUpdated": {
                  "$ref": "#/components/schemas/lastUpdated"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              },
              "required": [
                "attribute"
              ]
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "code": {
            "$ref": "#/components/schemas/code"
          },
          "created": {
            "$ref": "#/components/schemas/created"
          },
          "description": {
            "$ref": "#/components/schemas/description"
          },
          "displayDescription": {
            "$ref": "#/components/schemas/displayDescription"
          },
          "displayName": {
            "$ref": "#/components/schemas/displayName"
          },
          "displayShortName": {
            "$ref": "#/components/schemas/displayShortName"
          },
          "externalAccess": {
            "$ref": "#/components/schemas/externalAccess"
          },
          "favorite": {
            "type": "boolean"
          },
          "favorites": {
            "items": {
              "$ref": "#/components/schemas/favorite"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "href": {
            "$ref": "#/components/schemas/href"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "lastUpdated": {
            "$ref": "#/components/schemas/lastUpdated"
          },
          "lastUpdatedBy": {
            "$ref": "#/components/schemas/lastUpdatedBy"
          },
          "name": {
            "$ref": "#/components/schemas/name"
          },
          "publicAccess": {
            "$ref": "#/components/schemas/publicAccess"
          },
          "shortName": {
            "$ref": "#/components/schemas/shortName"
          },
          "translations": {
            "items": {
              "properties": {
                "locale": {
                  "$ref": "#/components/schemas/locale"
                },
                "property": {
                  "$ref": "#/components/schemas/property"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "user": {
            "format": "uid",
            "maxLength": 11,
            "minLength": 11,
            "type": "string",
            "x-association": "true"
          },
          "userAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userUid": {
                  "$ref": "#/components/schemas/userUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "userGroupAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userGroupUid": {
                  "$ref": "#/components/schemas/userGroupUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "value": {
            "$ref": "#/components/schemas/numberValue"
          }
        },
        "required": [
          "name"
        ],
        "type": "object",
        "x-status-dhis2": "template"
      },
      "constantAttribute": {
        "type": "boolean"
      },
      "contactPerson": {
        "example": "mycontactPerson",
        "format": "general",
        "maxLength": 255,
        "minLength": 0,
        "type": "string"
      },
      "content": {
        "example": "mycontent",
        "format": "general",
        "maxLength": 2147483647,
        "minLength": 0,
        "type": "string"
      },
      "contentCount": {
        "format": "integer",
        "readOnly": true,
        "type": "string"
      },
      "contentType": {
        "example": "mycontentType",
        "format": "general",
        "maxLength": 255,
        "minLength": 0,
        "type": "string"
      },
      "continuousExecution": {
        "type": "boolean"
      },
      "coordinates": {
        "example": "[-12.9487,9.0131]",
        "format": "coordinates",
        "maxLength": 80284,
        "minLength": 1,
        "type": "string"
      },
      "created": {
        "format": "date-time",
        "maxLength": 23,
        "minLength": 0,
        "readOnly": false,
        "type": "string"
      },
      "createdAtClient": {
        "format": "date-time",
        "maxLength": 255,
        "readOnly": true,
        "type": "string"
      },
      "cronExpression": {
        "example": "mycronExpr",
        "format": "general",
        "maxLength": 255,
        "minLength": 0,
        "type": "string"
      },
      "cumulative": {
        "type": "boolean"
      },
      "cumulativeValues": {
        "type": "boolean"
      },
      "currentPeriodUsedForReporting": {
        "type": "boolean"
      },
      "dashboard": {
        "maxProperties": 24,
        "minProperties": 0,
        "properties": {
          "access": {
            "maxProperties": 6,
            "minProperties": 1,
            "properties": {
              "delete": {
                "$ref": "#/components/schemas/delete"
              },
              "externalize": {
                "$ref": "#/components/schemas/externalize"
              },
              "manage": {
                "$ref": "#/components/schemas/manage"
              },
              "read": {
                "$ref": "#/components/schemas/read"
              },
              "update": {
                "$ref": "#/components/schemas/update"
              },
              "write": {
                "$ref": "#/components/schemas/write"
              }
            },
            "readOnly": true,
            "required": [
              "delete",
              "externalize",
              "manage",
              "read",
              "update",
              "write"
            ],
            "type": "object"
          },
          "attributeValues": {
            "items": {
              "properties": {
                "attribute": {
                  "format": "uid",
                  "maxLength": 255,
                  "readOnly": false,
                  "type": "string"
                },
                "created": {
                  "$ref": "#/components/schemas/created"
                },
                "lastUpdated": {
                  "$ref": "#/components/schemas/lastUpdated"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              },
              "required": [
                "attribute"
              ]
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "code": {
            "$ref": "#/components/schemas/code"
          },
          "created": {
            "$ref": "#/components/schemas/created"
          },
          "dashboardItems": {
            "items": {
              "maxProperties": 30,
              "minProperties": 0,
              "properties": {
                "access": {
                  "maxProperties": 6,
                  "minProperties": 0,
                  "properties": {
                    "delete": {
                      "$ref": "#/components/schemas/delete"
                    },
                    "externalize": {
                      "$ref": "#/components/schemas/externalize"
                    },
                    "manage": {
                      "$ref": "#/components/schemas/manage"
                    },
                    "read": {
                      "$ref": "#/components/schemas/read"
                    },
                    "update": {
                      "$ref": "#/components/schemas/update"
                    },
                    "write": {
                      "$ref": "#/components/schemas/write"
                    }
                  },
                  "required": [
                    "delete",
                    "externalize",
                    "manage",
                    "read",
                    "update",
                    "write"
                  ],
                  "type": "object"
                },
                "appKey": {
                  "$ref": "#/components/schemas/appKey"
                },
                "attributeValues": {
                  "items": {
                    "properties": {
                      "attribute": {
                        "format": "uid",
                        "maxLength": 255,
                        "readOnly": false,
                        "type": "string"
                      },
                      "created": {
                        "$ref": "#/components/schemas/created"
                      },
                      "lastUpdated": {
                        "$ref": "#/components/schemas/lastUpdated"
                      },
                      "value": {
                        "$ref": "#/components/schemas/value"
                      }
                    },
                    "required": [
                      "attribute"
                    ]
                  },
                  "maxItems": 2147483647,
                  "minItems": 0,
                  "type": "array"
                },
                "chart": {
                  "maxProperties": 1,
                  "minProperties": 0,
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    }
                  },
                  "readOnly": true,
                  "required": [
                    "id"
                  ],
                  "type": "object"
                },
                "contentCount": {
                  "$ref": "#/components/schemas/contentCount"
                },
                "created": {
                  "$ref": "#/components/schemas/created"
                },
                "eventChart": {
                  "maxProperties": 1,
                  "minProperties": 0,
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    }
                  },
                  "readOnly": true,
                  "required": [
                    "id"
                  ],
                  "type": "object"
                },
                "eventReport": {
                  "maxProperties": 1,
                  "minProperties": 0,
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    }
                  },
                  "readOnly": true,
                  "required": [
                    "id"
                  ],
                  "type": "object"
                },
                "externalAccess": {
                  "$ref": "#/components/schemas/externalAccess"
                },
                "favorite": {
                  "type": "boolean"
                },
                "favorites": {
                  "items": {
                    "$ref": "#/components/schemas/favorite"
                  },
                  "maxItems": 2147483647,
                  "minItems": 0,
                  "type": "array"
                },
                "height": {
                  "$ref": "#/components/schemas/height"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "interpretationCount": {
                  "$ref": "#/components/schemas/interpretationCount"
                },
                "interpretationLikeCount": {
                  "$ref": "#/components/schemas/interpretationLikeCount"
                },
                "lastUpdated": {
                  "$ref": "#/components/schemas/lastUpdated"
                },
                "map": {
                  "maxProperties": 1,
                  "minProperties": 0,
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    }
                  },
                  "readOnly": true,
                  "required": [
                    "id"
                  ],
                  "type": "object"
                },
                "messages": {
                  "$ref": "#/components/schemas/messages"
                },
                "reportTable": {
                  "maxProperties": 1,
                  "minProperties": 0,
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    }
                  },
                  "readOnly": true,
                  "required": [
                    "id"
                  ],
                  "type": "object"
                },
                "reports": {
                  "items": {
                    "maxProperties": 24,
                    "minProperties": 0,
                    "properties": {
                      "access": {
                        "maxProperties": 6,
                        "minProperties": 1,
                        "properties": {
                          "delete": {
                            "$ref": "#/components/schemas/delete"
                          },
                          "externalize": {
                            "$ref": "#/components/schemas/externalize"
                          },
                          "manage": {
                            "$ref": "#/components/schemas/manage"
                          },
                          "read": {
                            "$ref": "#/components/schemas/read"
                          },
                          "update": {
                            "$ref": "#/components/schemas/update"
                          },
                          "write": {
                            "$ref": "#/components/schemas/write"
                          }
                        },
                        "readOnly": true,
                        "required": [
                          "delete",
                          "externalize",
                          "manage",
                          "read",
                          "update",
                          "write"
                        ],
                        "type": "object"
                      },
                      "attributeValues": {
                        "items": {
                          "properties": {
                            "attribute": {
                              "format": "uid",
                              "maxLength": 255,
                              "readOnly": false,
                              "type": "string"
                            },
                            "created": {
                              "$ref": "#/components/schemas/created"
                            },
                            "lastUpdated": {
                              "$ref": "#/components/schemas/lastUpdated"
                            },
                            "value": {
                              "$ref": "#/components/schemas/value"
                            }
                          },
                          "required": [
                            "attribute"
                          ]
                        },
                        "maxItems": 2147483647,
                        "minItems": 0,
                        "type": "array"
                      },
                      "cacheStrategy": {
                        "$ref": "#/components/schemas/cacheStrategy"
                      },
                      "code": {
                        "$ref": "#/components/schemas/code"
                      },
                      "created": {
                        "$ref": "#/components/schemas/created"
                      },
                      "designContent": {
                        "$ref": "#/components/schemas/designContent"
                      },
                      "displayName": {
                        "$ref": "#/components/schemas/displayName"
                      },
                      "externalAccess": {
                        "$ref": "#/components/schemas/externalAccess"
                      },
                      "favorite": {
                        "type": "boolean"
                      },
                      "favorites": {
                        "items": {
                          "$ref": "#/components/schemas/favorite"
                        },
                        "maxItems": 2147483647,
                        "minItems": 0,
                        "type": "array"
                      },
                      "href": {
                        "$ref": "#/components/schemas/href"
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "lastUpdated": {
                        "$ref": "#/components/schemas/lastUpdated"
                      },
                      "lastUpdatedBy": {
                        "$ref": "#/components/schemas/lastUpdatedBy"
                      },
                      "name": {
                        "$ref": "#/components/schemas/name"
                      },
                      "publicAccess": {
                        "$ref": "#/components/schemas/publicAccess"
                      },
                      "relativePeriods": {
                        "maxProperties": 39,
                        "minProperties": 1,
                        "properties": {
                          "biMonthsThisYear": {
                            "$ref": "#/components/schemas/biMonthsThisYear"
                          },
                          "last12Months": {
                            "$ref": "#/components/schemas/last12Months"
                          },
                          "last12Weeks": {
                            "$ref": "#/components/schemas/last12Weeks"
                          },
                          "last14Days": {
                            "$ref": "#/components/schemas/last14Days"
                          },
                          "last2SixMonths": {
                            "$ref": "#/components/schemas/last2SixMonths"
                          },
                          "last3Days": {
                            "$ref": "#/components/schemas/last3Days"
                          },
                          "last3Months": {
                            "$ref": "#/components/schemas/last3Months"
                          },
                          "last4BiWeeks": {
                            "$ref": "#/components/schemas/last4BiWeeks"
                          },
                          "last4Quarters": {
                            "$ref": "#/components/schemas/last4Quarters"
                          },
                          "last4Weeks": {
                            "$ref": "#/components/schemas/last4Weeks"
                          },
                          "last52Weeks": {
                            "$ref": "#/components/schemas/last52Weeks"
                          },
                          "last5FinancialYears": {
                            "$ref": "#/components/schemas/last5FinancialYears"
                          },
                          "last5Years": {
                            "$ref": "#/components/schemas/last5Years"
                          },
                          "last6BiMonths": {
                            "$ref": "#/components/schemas/last6BiMonths"
                          },
                          "last6Months": {
                            "$ref": "#/components/schemas/last6Months"
                          },
                          "last7Days": {
                            "$ref": "#/components/schemas/last7Days"
                          },
                          "lastBiWeek": {
                            "$ref": "#/components/schemas/lastBiWeek"
                          },
                          "lastBimonth": {
                            "$ref": "#/components/schemas/lastBimonth"
                          },
                          "lastFinancialYear": {
                            "$ref": "#/components/schemas/lastFinancialYear"
                          },
                          "lastMonth": {
                            "$ref": "#/components/schemas/lastMonth"
                          },
                          "lastQuarter": {
                            "$ref": "#/components/schemas/lastQuarter"
                          },
                          "lastSixMonth": {
                            "$ref": "#/components/schemas/lastSixMonth"
                          },
                          "lastWeek": {
                            "$ref": "#/components/schemas/lastWeek"
                          },
                          "lastYear": {
                            "$ref": "#/components/schemas/lastYear"
                          },
                          "monthsLastYear": {
                            "$ref": "#/components/schemas/monthsLastYear"
                          },
                          "monthsThisYear": {
                            "$ref": "#/components/schemas/monthsThisYear"
                          },
                          "quartersLastYear": {
                            "$ref": "#/components/schemas/quartersLastYear"
                          },
                          "quartersThisYear": {
                            "$ref": "#/components/schemas/quartersThisYear"
                          },
                          "thisBiWeek": {
                            "$ref": "#/components/schemas/thisBiWeek"
                          },
                          "thisBimonth": {
                            "$ref": "#/components/schemas/thisBimonth"
                          },
                          "thisDay": {
                            "$ref": "#/components/schemas/thisDay"
                          },
                          "thisFinancialYear": {
                            "$ref": "#/components/schemas/thisFinancialYear"
                          },
                          "thisMonth": {
                            "$ref": "#/components/schemas/thisMonth"
                          },
                          "thisQuarter": {
                            "$ref": "#/components/schemas/thisQuarter"
                          },
                          "thisSixMonth": {
                            "$ref": "#/components/schemas/thisSixMonth"
                          },
                          "thisWeek": {
                            "$ref": "#/components/schemas/thisWeek"
                          },
                          "thisYear": {
                            "$ref": "#/components/schemas/thisYear"
                          },
                          "weeksThisYear": {
                            "$ref": "#/components/schemas/weeksThisYear"
                          },
                          "yesterday": {
                            "$ref": "#/components/schemas/yesterday"
                          }
                        },
                        "readOnly": false,
                        "required": [
                          "biMonthsThisYear",
                          "last12Months",
                          "last12Weeks",
                          "last14Days",
                          "last2SixMonths",
                          "last3Days",
                          "last3Months",
                          "last4BiWeeks",
                          "last4Quarters",
                          "last4Weeks",
                          "last52Weeks",
                          "last5FinancialYears",
                          "last5Years",
                          "last6BiMonths",
                          "last6Months",
                          "last7Days",
                          "lastBiWeek",
                          "lastBimonth",
                          "lastFinancialYear",
                          "lastMonth",
                          "lastQuarter",
                          "lastSixMonth",
                          "lastWeek",
                          "lastYear",
                          "monthsLastYear",
                          "monthsThisYear",
                          "quartersLastYear",
                          "quartersThisYear",
                          "thisBiWeek",
                          "thisBimonth",
                          "thisDay",
                          "thisFinancialYear",
                          "thisMonth",
                          "thisQuarter",
                          "thisSixMonth",
                          "thisWeek",
                          "thisYear",
                          "weeksThisYear",
                          "yesterday"
                        ],
                        "type": "object"
                      },
                      "reportParams": {
                        "maxProperties": 4,
                        "minProperties": 1,
                        "properties": {
                          "paramGrandParentOrganisationUnit": {
                            "type": "boolean"
                          },
                          "paramOrganisationUnit": {
                            "type": "boolean"
                          },
                          "paramParentOrganisationUnit": {
                            "type": "boolean"
                          },
                          "paramReportingPeriod": {
                            "type": "boolean"
                          }
                        },
                        "readOnly": false,
                        "required": [
                          "paramGrandParentOrganisationUnit",
                          "paramOrganisationUnit",
                          "paramParentOrganisationUnit",
                          "paramReportingPeriod"
                        ],
                        "type": "object"
                      },
                      "reportTable": {
                        "properties": {
                          "id": {
                            "$ref": "#/components/schemas/id"
                          }
                        },
                        "required": [
                          "id"
                        ],
                        "type": "object"
                      },
                      "translations": {
                        "items": {
                          "properties": {
                            "locale": {
                              "$ref": "#/components/schemas/locale"
                            },
                            "property": {
                              "$ref": "#/components/schemas/property"
                            },
                            "value": {
                              "$ref": "#/components/schemas/value"
                            }
                          }
                        },
                        "maxItems": 2147483647,
                        "minItems": 0,
                        "type": "array"
                      },
                      "type": {
                        "enum": [
                          "HTML",
                          "JASPER_JDBC",
                          "JASPER_REPORT_TABLE"
                        ],
                        "example": "JASPER_REPORT_TABLE",
                        "format": "enum",
                        "type": "string"
                      },
                      "user": {
                        "properties": {
                          "id": {
                            "$ref": "#/components/schemas/id"
                          }
                        },
                        "required": [
                          "id"
                        ],
                        "type": "object"
                      },
                      "userAccesses": {
                        "items": {
                          "properties": {
                            "access": {
                              "format": "access",
                              "maxLength": 255,
                              "minLength": 0,
                              "readOnly": false,
                              "type": "string"
                            },
                            "displayName": {
                              "$ref": "#/components/schemas/displayName"
                            },
                            "id": {
                              "$ref": "#/components/schemas/id"
                            },
                            "userUid": {
                              "$ref": "#/components/schemas/userUid"
                            }
                          }
                        },
                        "maxItems": 2147483647,
                        "minItems": 0,
                        "type": "array"
                      },
                      "userGroupAccesses": {
                        "items": {
                          "maxProperties": 4,
                          "minProperties": 0,
                          "properties": {
                            "access": {
                              "example": "rwr-----",
                              "format": "access",
                              "maxLength": 8,
                              "minLength": 8,
                              "type": "string"
                            },
                            "displayName": {
                              "$ref": "#/components/schemas/displayName"
                            },
                            "id": {
                              "$ref": "#/components/schemas/id"
                            },
                            "userGroupUid": {
                              "$ref": "#/components/schemas/userGroupUid"
                            }
                          },
                          "required": [
                            "access",
                            "displayName",
                            "id",
                            "userGroupUid"
                          ],
                          "type": "object"
                        },
                        "maxItems": 2147483647,
                        "minItems": 0,
                        "type": "array"
                      }
                    },
                    "required": [
                      "name"
                    ],
                    "type": "object",
                    "x-status-dhis2": "template"
                  },
                  "maxItems": 2147483647,
                  "minItems": 0,
                  "type": "array"
                },
                "resources": {
                  "items": {
                    "maxProperties": 1,
                    "minProperties": 0,
                    "properties": {
                      "id": {
                        "$ref": "#/components/schemas/id"
                      }
                    },
                    "required": [
                      "id"
                    ],
                    "type": "object"
                  },
                  "maxItems": 2147483647,
                  "minItems": 0,
                  "readOnly": true,
                  "type": "array"
                },
                "shape": {
                  "enum": [
                    "DOUBLE_WIDTH",
                    "NORMAL"
                  ],
                  "example": "NORMAL",
                  "format": "enum",
                  "type": "string"
                },
                "translations": {
                  "items": {
                    "properties": {
                      "locale": {
                        "$ref": "#/components/schemas/locale"
                      },
                      "property": {
                        "$ref": "#/components/schemas/property"
                      },
                      "value": {
                        "$ref": "#/components/schemas/value"
                      }
                    }
                  },
                  "maxItems": 2147483647,
                  "minItems": 0,
                  "type": "array"
                },
                "type": {
                  "enum": [
                    "APP",
                    "CHART",
                    "EVENT_CHART",
                    "EVENT_REPORT",
                    "MAP",
                    "MESSAGES",
                    "REPORT_TABLE",
                    "RESOURCES",
                    "USERS"
                  ],
                  "example": "CHART",
                  "format": "enum",
                  "readOnly": true,
                  "type": "string"
                },
                "userAccesses": {
                  "items": {
                    "properties": {
                      "access": {
                        "format": "access",
                        "maxLength": 255,
                        "minLength": 0,
                        "readOnly": false,
                        "type": "string"
                      },
                      "displayName": {
                        "$ref": "#/components/schemas/displayName"
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "userUid": {
                        "$ref": "#/components/schemas/userUid"
                      }
                    }
                  },
                  "maxItems": 2147483647,
                  "minItems": 0,
                  "type": "array"
                },
                "userGroupAccesses": {
                  "items": {
                    "properties": {
                      "access": {
                        "format": "access",
                        "maxLength": 255,
                        "minLength": 0,
                        "readOnly": false,
                        "type": "string"
                      },
                      "displayName": {
                        "$ref": "#/components/schemas/displayName"
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "userGroupUid": {
                        "$ref": "#/components/schemas/userGroupUid"
                      }
                    }
                  },
                  "maxItems": 2147483647,
                  "minItems": 0,
                  "type": "array"
                },
                "users": {
                  "items": {
                    "maxProperties": 1,
                    "minProperties": 0,
                    "properties": {
                      "id": {
                        "$ref": "#/components/schemas/id"
                      }
                    },
                    "required": [
                      "id"
                    ],
                    "type": "object"
                  },
                  "maxItems": 2147483647,
                  "minItems": 0,
                  "readOnly": true,
                  "type": "array"
                },
                "width": {
                  "$ref": "#/components/schemas/width"
                },
                "x": {
                  "$ref": "#/components/schemas/x"
                },
                "y": {
                  "$ref": "#/components/schemas/y"
                }
              },
              "required": [
                "access",
                "attributeValues",
                "contentCount",
                "created",
                "externalAccess",
                "favorite",
                "favorites",
                "id",
                "interpretationCount",
                "interpretationLikeCount",
                "lastUpdated",
                "reports",
                "resources",
                "translations",
                "type",
                "userAccesses",
                "userGroupAccesses",
                "users"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "description": {
            "$ref": "#/components/schemas/description"
          },
          "displayDescription": {
            "$ref": "#/components/schemas/displayDescription"
          },
          "displayName": {
            "$ref": "#/components/schemas/displayName"
          },
          "displayShortName": {
            "$ref": "#/components/schemas/displayShortName"
          },
          "externalAccess": {
            "$ref": "#/components/schemas/externalAccess"
          },
          "favorite": {
            "type": "boolean"
          },
          "favorites": {
            "items": {
              "$ref": "#/components/schemas/favorite"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "href": {
            "$ref": "#/components/schemas/href"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "itemCount": {
            "$ref": "#/components/schemas/itemCount"
          },
          "lastUpdated": {
            "$ref": "#/components/schemas/lastUpdated"
          },
          "lastUpdatedBy": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "name": {
            "$ref": "#/components/schemas/name"
          },
          "publicAccess": {
            "$ref": "#/components/schemas/publicAccess"
          },
          "shortName": {
            "$ref": "#/components/schemas/shortName"
          },
          "translations": {
            "items": {
              "properties": {
                "locale": {
                  "$ref": "#/components/schemas/locale"
                },
                "property": {
                  "$ref": "#/components/schemas/property"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "user": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "userAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userUid": {
                  "$ref": "#/components/schemas/userUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "userGroupAccesses": {
            "items": {
              "maxProperties": 4,
              "minProperties": 0,
              "properties": {
                "access": {
                  "example": "rwr-----",
                  "format": "access",
                  "maxLength": 8,
                  "minLength": 8,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userGroupUid": {
                  "$ref": "#/components/schemas/userGroupUid"
                }
              },
              "required": [
                "access",
                "displayName",
                "id",
                "userGroupUid"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          }
        },
        "required": [
          "name"
        ],
        "type": "object",
        "x-status-dhis2": "template"
      },
      "dashboardItem": {
        "maxProperties": 37,
        "minProperties": 0,
        "properties": {
          "access": {
            "maxProperties": 6,
            "minProperties": 1,
            "properties": {
              "delete": {
                "$ref": "#/components/schemas/delete"
              },
              "externalize": {
                "$ref": "#/components/schemas/externalize"
              },
              "manage": {
                "$ref": "#/components/schemas/manage"
              },
              "read": {
                "$ref": "#/components/schemas/read"
              },
              "update": {
                "$ref": "#/components/schemas/update"
              },
              "write": {
                "$ref": "#/components/schemas/write"
              }
            },
            "readOnly": true,
            "type": "object"
          },
          "appKey": {
            "$ref": "#/components/schemas/appKey"
          },
          "attributeValues": {
            "items": {
              "$ref": "#/components/schemas/attributeValue"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "chart": {
            "maxProperties": 1,
            "minProperties": 0,
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "readOnly": true,
            "required": [
              "id"
            ],
            "type": "object"
          },
          "code": {
            "$ref": "#/components/schemas/code"
          },
          "contentCount": {
            "$ref": "#/components/schemas/contentCount"
          },
          "created": {
            "$ref": "#/components/schemas/created"
          },
          "displayName": {
            "$ref": "#/components/schemas/displayName"
          },
          "eventChart": {
            "format": "uid",
            "maxLength": 11,
            "minLength": 11,
            "type": "string",
            "x-association": "true"
          },
          "eventReport": {
            "format": "uid",
            "maxLength": 11,
            "minLength": 11,
            "type": "string",
            "x-association": "true"
          },
          "externalAccess": {
            "$ref": "#/components/schemas/externalAccess"
          },
          "favorite": {
            "type": "boolean"
          },
          "favorites": {
            "items": {
              "$ref": "#/components/schemas/favorite"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "height": {
            "$ref": "#/components/schemas/height"
          },
          "href": {
            "$ref": "#/components/schemas/href"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "interpretationCount": {
            "$ref": "#/components/schemas/interpretationCount"
          },
          "interpretationLikeCount": {
            "$ref": "#/components/schemas/interpretationLikeCount"
          },
          "lastUpdated": {
            "$ref": "#/components/schemas/lastUpdated"
          },
          "lastUpdatedBy": {
            "$ref": "#/components/schemas/lastUpdatedBy"
          },
          "map": {
            "format": "uid",
            "maxLength": 11,
            "minLength": 11,
            "type": "string",
            "x-association": "true"
          },
          "messages": {
            "$ref": "#/components/schemas/messages"
          },
          "name": {
            "$ref": "#/components/schemas/name"
          },
          "publicAccess": {
            "$ref": "#/components/schemas/publicAccess"
          },
          "reportTable": {
            "format": "uid",
            "maxLength": 11,
            "minLength": 11,
            "type": "string",
            "x-association": "true"
          },
          "reports": {
            "items": {
              "maxProperties": 1,
              "minProperties": 0,
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/id"
                }
              },
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "resources": {
            "items": {
              "maxProperties": 1,
              "minProperties": 0,
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/id"
                }
              },
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "shape": {
            "$ref": "#/components/schemas/shape"
          },
          "text": {
            "$ref": "#/components/schemas/text"
          },
          "translations": {
            "items": {
              "$ref": "#/components/schemas/translation"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "type": {
            "enum": [
              "APP",
              "CHART",
              "EVENT_CHART",
              "EVENT_REPORT",
              "MAP",
              "MESSAGES",
              "REPORTS",
              "REPORT_TABLE",
              "RESOURCES",
              "TEXT",
              "USERS"
            ],
            "example": "MAP",
            "format": "enum",
            "maxLength": 12,
            "minLength": 3,
            "readOnly": true,
            "type": "string"
          },
          "userAccesses": {
            "items": {
              "$ref": "#/components/schemas/userAccess"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "userGroupAccesses": {
            "items": {
              "$ref": "#/components/schemas/userGroupAccess"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "users": {
            "items": {
              "maxProperties": 1,
              "minProperties": 0,
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/id"
                }
              },
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "width": {
            "$ref": "#/components/schemas/width"
          },
          "x": {
            "$ref": "#/components/schemas/x"
          },
          "y": {
            "$ref": "#/components/schemas/y"
          }
        },
        "type": "object",
        "x-status-dhis2": "template"
      },
      "data": {
        "example": "mydata",
        "format": "general",
        "maxLength": 2147483647,
        "minLength": 0,
        "type": "string"
      },
      "dataApprovalLevel": {
        "maxProperties": 22,
        "minProperties": 0,
        "properties": {
          "access": {
            "maxProperties": 6,
            "minProperties": 1,
            "properties": {
              "delete": {
                "$ref": "#/components/schemas/delete"
              },
              "externalize": {
                "$ref": "#/components/schemas/externalize"
              },
              "manage": {
                "$ref": "#/components/schemas/manage"
              },
              "read": {
                "$ref": "#/components/schemas/read"
              },
              "update": {
                "$ref": "#/components/schemas/update"
              },
              "write": {
                "$ref": "#/components/schemas/write"
              }
            },
            "readOnly": true,
            "required": [
              "delete",
              "externalize",
              "manage",
              "read",
              "update",
              "write"
            ],
            "type": "object"
          },
          "attributeValues": {
            "items": {
              "properties": {
                "attribute": {
                  "format": "uid",
                  "maxLength": 255,
                  "readOnly": false,
                  "type": "string"
                },
                "created": {
                  "$ref": "#/components/schemas/created"
                },
                "lastUpdated": {
                  "$ref": "#/components/schemas/lastUpdated"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              },
              "required": [
                "attribute"
              ]
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "categoryOptionGroupSet": {
            "format": "uid",
            "maxLength": 11,
            "minLength": 11,
            "type": "string",
            "x-association": "true"
          },
          "code": {
            "$ref": "#/components/schemas/code"
          },
          "created": {
            "$ref": "#/components/schemas/created"
          },
          "displayName": {
            "$ref": "#/components/schemas/displayName"
          },
          "externalAccess": {
            "$ref": "#/components/schemas/externalAccess"
          },
          "favorite": {
            "type": "boolean"
          },
          "favorites": {
            "items": {
              "$ref": "#/components/schemas/favorite"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "href": {
            "$ref": "#/components/schemas/href"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "lastUpdated": {
            "$ref": "#/components/schemas/lastUpdated"
          },
          "lastUpdatedBy": {
            "$ref": "#/components/schemas/lastUpdatedBy"
          },
          "level": {
            "$ref": "#/components/schemas/level"
          },
          "name": {
            "$ref": "#/components/schemas/name"
          },
          "orgUnitLevel": {
            "$ref": "#/components/schemas/orgUnitLevel"
          },
          "orgUnitLevelName": {
            "$ref": "#/components/schemas/orgUnitLevelName"
          },
          "publicAccess": {
            "$ref": "#/components/schemas/publicAccess"
          },
          "translations": {
            "items": {
              "properties": {
                "locale": {
                  "$ref": "#/components/schemas/locale"
                },
                "property": {
                  "$ref": "#/components/schemas/property"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "user": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "userAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userUid": {
                  "$ref": "#/components/schemas/userUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "userGroupAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userGroupUid": {
                  "$ref": "#/components/schemas/userGroupUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          }
        },
        "required": [
          "name"
        ],
        "type": "object",
        "x-status-dhis2": "template"
      },
      "dataApprovalWorkflow": {
        "maxProperties": 22,
        "minProperties": 0,
        "properties": {
          "access": {
            "maxProperties": 6,
            "minProperties": 1,
            "properties": {
              "delete": {
                "$ref": "#/components/schemas/delete"
              },
              "externalize": {
                "$ref": "#/components/schemas/externalize"
              },
              "manage": {
                "$ref": "#/components/schemas/manage"
              },
              "read": {
                "$ref": "#/components/schemas/read"
              },
              "update": {
                "$ref": "#/components/schemas/update"
              },
              "write": {
                "$ref": "#/components/schemas/write"
              }
            },
            "readOnly": true,
            "required": [
              "delete",
              "externalize",
              "manage",
              "read",
              "update",
              "write"
            ],
            "type": "object"
          },
          "attributeValues": {
            "items": {
              "properties": {
                "attribute": {
                  "format": "uid",
                  "maxLength": 255,
                  "readOnly": false,
                  "type": "string"
                },
                "created": {
                  "$ref": "#/components/schemas/created"
                },
                "lastUpdated": {
                  "$ref": "#/components/schemas/lastUpdated"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              },
              "required": [
                "attribute"
              ]
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "categoryCombo": {
            "format": "uid",
            "maxLength": 11,
            "minLength": 11,
            "type": "string",
            "x-association": "true"
          },
          "code": {
            "$ref": "#/components/schemas/code"
          },
          "created": {
            "$ref": "#/components/schemas/created"
          },
          "dataApprovalLevels": {
            "items": {
              "maxProperties": 1,
              "minProperties": 0,
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/id"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "dataSets": {
            "items": {
              "maxProperties": 1,
              "minProperties": 0,
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/id"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "displayName": {
            "$ref": "#/components/schemas/displayName"
          },
          "externalAccess": {
            "$ref": "#/components/schemas/externalAccess"
          },
          "favorite": {
            "type": "boolean"
          },
          "favorites": {
            "items": {
              "$ref": "#/components/schemas/favorite"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "href": {
            "$ref": "#/components/schemas/href"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "lastUpdated": {
            "$ref": "#/components/schemas/lastUpdated"
          },
          "lastUpdatedBy": {
            "$ref": "#/components/schemas/lastUpdatedBy"
          },
          "name": {
            "$ref": "#/components/schemas/name"
          },
          "periodType": {
            "$ref": "#/components/schemas/periodType"
          },
          "publicAccess": {
            "$ref": "#/components/schemas/publicAccess"
          },
          "translations": {
            "items": {
              "properties": {
                "locale": {
                  "$ref": "#/components/schemas/locale"
                },
                "property": {
                  "$ref": "#/components/schemas/property"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "user": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "userAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userUid": {
                  "$ref": "#/components/schemas/userUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "userGroupAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userGroupUid": {
                  "$ref": "#/components/schemas/userGroupUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          }
        },
        "required": [
          "name",
          "periodType"
        ],
        "type": "object",
        "x-status-dhis2": "template"
      },
      "dataDimension": {
        "type": "boolean"
      },
      "dataDimensionItem": {
        "properties": {}
      },
      "dataDimensionItemType": {
        "enum": [
          "DATA_ELEMENT",
          "DATA_ELEMENT_OPERAND",
          "INDICATOR",
          "PROGRAM_INDICATOR",
          "REPORTING_RATE"
        ],
        "example": "INDICATOR",
        "format": "enum",
        "type": "string"
      },
      "dataDimensionType": {
        "enum": [
          "ATTRIBUTE",
          "DISAGGREGATION"
        ],
        "example": "DISAGGREGATION",
        "format": "enum",
        "type": "string"
      },
      "dataElement": {
        "maxProperties": 40,
        "minProperties": 0,
        "properties": {
          "access": {
            "maxProperties": 6,
            "minProperties": 1,
            "properties": {
              "delete": {
                "$ref": "#/components/schemas/delete"
              },
              "externalize": {
                "$ref": "#/components/schemas/externalize"
              },
              "manage": {
                "$ref": "#/components/schemas/manage"
              },
              "read": {
                "$ref": "#/components/schemas/read"
              },
              "update": {
                "$ref": "#/components/schemas/update"
              },
              "write": {
                "$ref": "#/components/schemas/write"
              }
            },
            "readOnly": true,
            "required": [
              "delete",
              "externalize",
              "manage",
              "read",
              "update",
              "write"
            ],
            "type": "object"
          },
          "aggregationLevels": {
            "items": {
              "format": "integer",
              "maxLength": 255,
              "minLength": 1,
              "type": "string",
              "x-association": "true"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": false,
            "type": "array",
            "x-association": "true"
          },
          "aggregationType": {
            "enum": [
              "AVERAGE",
              "AVERAGE_SUM_ORG_UNIT",
              "COUNT",
              "CUSTOM",
              "DEFAULT",
              "LAST",
              "LAST_AVERAGE_ORG_UNIT",
              "MAX",
              "MIN",
              "NONE",
              "STDDEV",
              "SUM",
              "VARIANCE"
            ],
            "example": "SUM",
            "format": "enum",
            "type": "string"
          },
          "attributeValues": {
            "items": {
              "maxProperties": 4,
              "minProperties": 0,
              "properties": {
                "attribute": {
                  "maxProperties": 1,
                  "minProperties": 0,
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    }
                  },
                  "required": [
                    "id"
                  ],
                  "type": "object"
                },
                "created": {
                  "$ref": "#/components/schemas/created"
                },
                "lastUpdated": {
                  "$ref": "#/components/schemas/lastUpdated"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              },
              "required": [
                "attribute",
                "created",
                "lastUpdated",
                "value"
              ],
              "type": "object",
              "x-association": "true"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array",
            "x-association": "true"
          },
          "categoryCombo": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "code": {
            "$ref": "#/components/schemas/code"
          },
          "commentOptionSet": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "created": {
            "$ref": "#/components/schemas/created"
          },
          "dataElementGroups": {
            "items": {
              "maxProperties": 1,
              "minProperties": 0,
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/id"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "dataSetElements": {
            "items": {
              "maxProperties": 3,
              "minProperties": 0,
              "properties": {
                "categoryCombo": {
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    }
                  },
                  "required": [
                    "id"
                  ],
                  "type": "object"
                },
                "dataElement": {
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    }
                  },
                  "required": [
                    "id"
                  ],
                  "type": "object"
                },
                "dataSet": {
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    }
                  },
                  "required": [
                    "id"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "dataElement",
                "dataSet"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": false,
            "type": "array"
          },
          "description": {
            "$ref": "#/components/schemas/description"
          },
          "dimensionItem": {
            "$ref": "#/components/schemas/dimensionItem"
          },
          "dimensionItemType": {
            "enum": [
              "CATEGORY_OPTION",
              "CATEGORY_OPTION_GROUP",
              "DATA_ELEMENT",
              "DATA_ELEMENT_GROUP",
              "DATA_ELEMENT_OPERAND",
              "INDICATOR",
              "OPTION_GROUP",
              "ORGANISATION_UNIT",
              "ORGANISATION_UNIT_GROUP",
              "PERIOD",
              "PROGRAM_ATTRIBUTE",
              "PROGRAM_DATA_ELEMENT",
              "PROGRAM_INDICATOR",
              "REPORTING_RATE"
            ],
            "example": "DATA_ELEMENT",
            "format": "enum",
            "type": "string"
          },
          "displayDescription": {
            "$ref": "#/components/schemas/displayDescription"
          },
          "displayFormName": {
            "$ref": "#/components/schemas/displayFormName"
          },
          "displayName": {
            "$ref": "#/components/schemas/displayName"
          },
          "displayShortName": {
            "$ref": "#/components/schemas/displayShortName"
          },
          "domainType": {
            "$ref": "#/components/schemas/domainType"
          },
          "externalAccess": {
            "$ref": "#/components/schemas/externalAccess"
          },
          "favorite": {
            "type": "boolean"
          },
          "favorites": {
            "items": {
              "$ref": "#/components/schemas/favorite"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "formName": {
            "$ref": "#/components/schemas/formName"
          },
          "href": {
            "$ref": "#/components/schemas/href"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "lastUpdated": {
            "$ref": "#/components/schemas/lastUpdated"
          },
          "lastUpdatedBy": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "legendSets": {
            "items": {
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/id"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": false,
            "type": "array",
            "x-association": "true"
          },
          "name": {
            "$ref": "#/components/schemas/name"
          },
          "optionSet": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "optionSetValue": {
            "$ref": "#/components/schemas/optionSetValue"
          },
          "publicAccess": {
            "$ref": "#/components/schemas/publicAccess"
          },
          "shortName": {
            "$ref": "#/components/schemas/shortName"
          },
          "style": {
            "maxProperties": 1,
            "minProperties": 1,
            "properties": {
              "icon": {
                "example": "myicon",
                "format": "general",
                "maxLength": 20,
                "minLength": 20,
                "type": "string"
              }
            },
            "readOnly": false,
            "required": [
              "icon"
            ],
            "type": "object"
          },
          "translations": {
            "items": {
              "maxProperties": 3,
              "minProperties": 0,
              "properties": {
                "locale": {
                  "$ref": "#/components/schemas/locale"
                },
                "property": {
                  "enum": [
                    "DESCRIPTION",
                    "FORM_NAME",
                    "NAME",
                    "SHORT_NAME"
                  ],
                  "example": "NAME",
                  "format": "enum",
                  "type": "string"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              },
              "required": [
                "locale",
                "property",
                "value"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "url": {
            "$ref": "#/components/schemas/url"
          },
          "user": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "userAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userUid": {
                  "$ref": "#/components/schemas/userUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "userGroupAccesses": {
            "items": {
              "maxProperties": 4,
              "minProperties": 0,
              "properties": {
                "access": {
                  "example": "r-r-----",
                  "format": "access",
                  "maxLength": 8,
                  "minLength": 8,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userGroupUid": {
                  "$ref": "#/components/schemas/userGroupUid"
                }
              },
              "required": [
                "access",
                "displayName",
                "id",
                "userGroupUid"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "valueType": {
            "enum": [
              "AGE",
              "BOOLEAN",
              "COORDINATE",
              "DATE",
              "DATETIME",
              "EMAIL",
              "FILE_RESOURCE",
              "IMAGE",
              "INTEGER",
              "INTEGER_NEGATIVE",
              "INTEGER_POSITIVE",
              "INTEGER_ZERO_OR_POSITIVE",
              "LETTER",
              "LONG_TEXT",
              "NUMBER",
              "ORGANISATION_UNIT",
              "PERCENTAGE",
              "PHONE_NUMBER",
              "TEXT",
              "TIME",
              "TRACKER_ASSOCIATE",
              "TRUE_ONLY",
              "UNIT_INTERVAL",
              "URL",
              "USERNAME"
            ],
            "example": "NUMBER",
            "format": "enum",
            "type": "string"
          },
          "zeroIsSignificant": {
            "$ref": "#/components/schemas/zeroIsSignificant"
          }
        },
        "required": [
          "aggregationType",
          "domainType",
          "name",
          "shortName",
          "valueType"
        ],
        "type": "object",
        "x-status-dhis2": "template"
      },
      "dataElementAttribute": {
        "type": "boolean"
      },
      "dataElementDecoration": {
        "type": "boolean"
      },
      "dataElementDimension": {
        "properties": {}
      },
      "dataElementGroup": {
        "maxProperties": 2147483647,
        "minProperties": 0,
        "properties": {
          "access": {
            "maxProperties": 6,
            "minProperties": 1,
            "properties": {
              "delete": {
                "$ref": "#/components/schemas/delete"
              },
              "externalize": {
                "$ref": "#/components/schemas/externalize"
              },
              "manage": {
                "$ref": "#/components/schemas/manage"
              },
              "read": {
                "$ref": "#/components/schemas/read"
              },
              "update": {
                "$ref": "#/components/schemas/update"
              },
              "write": {
                "$ref": "#/components/schemas/write"
              }
            },
            "readOnly": true,
            "required": [
              "delete",
              "externalize",
              "manage",
              "read",
              "update",
              "write"
            ],
            "type": "object"
          },
          "aggregationType": {
            "enum": [
              "AVERAGE",
              "AVERAGE_SUM_ORG_UNIT",
              "COUNT",
              "CUSTOM",
              "DEFAULT",
              "LAST",
              "LAST_AVERAGE_ORG_UNIT",
              "MAX",
              "MIN",
              "NONE",
              "STDDEV",
              "SUM",
              "VARIANCE"
            ],
            "example": "SUM",
            "format": "enum",
            "type": "string"
          },
          "attributeValues": {
            "items": {
              "properties": {
                "attribute": {
                  "format": "uid",
                  "maxLength": 255,
                  "readOnly": false,
                  "type": "string"
                },
                "created": {
                  "$ref": "#/components/schemas/created"
                },
                "lastUpdated": {
                  "$ref": "#/components/schemas/lastUpdated"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              },
              "required": [
                "attribute"
              ]
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "code": {
            "$ref": "#/components/schemas/code"
          },
          "created": {
            "$ref": "#/components/schemas/created"
          },
          "dataElements": {
            "items": {
              "maxProperties": 1,
              "minProperties": 0,
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/id"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "description": {
            "$ref": "#/components/schemas/description"
          },
          "dimensionItem": {
            "$ref": "#/components/schemas/dimensionItem"
          },
          "dimensionItemType": {
            "enum": [
              "CATEGORY_OPTION",
              "CATEGORY_OPTION_GROUP",
              "DATA_ELEMENT",
              "DATA_ELEMENT_GROUP",
              "DATA_ELEMENT_OPERAND",
              "INDICATOR",
              "OPTION_GROUP",
              "ORGANISATION_UNIT",
              "ORGANISATION_UNIT_GROUP",
              "PERIOD",
              "PROGRAM_ATTRIBUTE",
              "PROGRAM_DATA_ELEMENT",
              "PROGRAM_INDICATOR",
              "REPORTING_RATE"
            ],
            "example": "DATA_ELEMENT_GROUP",
            "format": "enum",
            "type": "string"
          },
          "displayDescription": {
            "$ref": "#/components/schemas/displayDescription"
          },
          "displayName": {
            "$ref": "#/components/schemas/displayName"
          },
          "displayShortName": {
            "$ref": "#/components/schemas/displayShortName"
          },
          "externalAccess": {
            "$ref": "#/components/schemas/externalAccess"
          },
          "favorite": {
            "type": "boolean"
          },
          "favorites": {
            "items": {
              "$ref": "#/components/schemas/favorite"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "groupSets": {
            "items": {
              "maxProperties": 1,
              "minProperties": 0,
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/id"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": true,
            "type": "array"
          },
          "href": {
            "$ref": "#/components/schemas/href"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "lastUpdated": {
            "$ref": "#/components/schemas/lastUpdated"
          },
          "lastUpdatedBy": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "legendSets": {
            "items": {
              "format": "uid",
              "maxLength": 11,
              "minLength": 11,
              "type": "string",
              "x-association": "true"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": false,
            "type": "array",
            "x-association": "true"
          },
          "name": {
            "$ref": "#/components/schemas/name"
          },
          "publicAccess": {
            "$ref": "#/components/schemas/publicAccess"
          },
          "shortName": {
            "$ref": "#/components/schemas/shortName"
          },
          "translations": {
            "items": {
              "maxProperties": 3,
              "minProperties": 0,
              "properties": {
                "locale": {
                  "$ref": "#/components/schemas/locale"
                },
                "property": {
                  "enum": [
                    "NAME"
                  ],
                  "example": "NAME",
                  "format": "enum",
                  "type": "string"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              },
              "required": [
                "locale",
                "property",
                "value"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": true,
            "type": "array"
          },
          "user": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "userAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userUid": {
                  "$ref": "#/components/schemas/userUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "userGroupAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userGroupUid": {
                  "$ref": "#/components/schemas/userGroupUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          }
        },
        "required": [
          "name"
        ],
        "type": "object",
        "x-status-dhis2": "template"
      },
      "dataElementGroupAttribute": {
        "type": "boolean"
      },
      "dataElementGroupSet": {
        "maxProperties": 32,
        "minProperties": 0,
        "properties": {
          "access": {
            "maxProperties": 6,
            "minProperties": 1,
            "properties": {
              "delete": {
                "$ref": "#/components/schemas/delete"
              },
              "externalize": {
                "$ref": "#/components/schemas/externalize"
              },
              "manage": {
                "$ref": "#/components/schemas/manage"
              },
              "read": {
                "$ref": "#/components/schemas/read"
              },
              "update": {
                "$ref": "#/components/schemas/update"
              },
              "write": {
                "$ref": "#/components/schemas/write"
              }
            },
            "readOnly": true,
            "required": [
              "delete",
              "externalize",
              "manage",
              "read",
              "update",
              "write"
            ],
            "type": "object"
          },
          "aggregationType": {
            "$ref": "#/components/schemas/aggregationType"
          },
          "allItems": {
            "$ref": "#/components/schemas/allItems"
          },
          "attributeValues": {
            "items": {
              "properties": {
                "attribute": {
                  "format": "uid",
                  "maxLength": 255,
                  "readOnly": false,
                  "type": "string"
                },
                "created": {
                  "$ref": "#/components/schemas/created"
                },
                "lastUpdated": {
                  "$ref": "#/components/schemas/lastUpdated"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              },
              "required": [
                "attribute"
              ]
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "code": {
            "$ref": "#/components/schemas/code"
          },
          "compulsory": {
            "$ref": "#/components/schemas/compulsory"
          },
          "created": {
            "$ref": "#/components/schemas/created"
          },
          "dataDimension": {
            "$ref": "#/components/schemas/dataDimension"
          },
          "dataElementGroups": {
            "items": {
              "maxProperties": 1,
              "minProperties": 0,
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/id"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "description": {
            "enum": [
              "Tracker-based data"
            ],
            "example": "mydescri",
            "format": "general",
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "dimension": {
            "$ref": "#/components/schemas/dimension"
          },
          "dimensionType": {
            "enum": [
              "ATTRIBUTE_OPTION_COMBO",
              "CATEGORY",
              "CATEGORY_OPTION_COMBO",
              "CATEGORY_OPTION_GROUP_SET",
              "DATA_COLLAPSED",
              "DATA_ELEMENT_GROUP_SET",
              "DATA_X",
              "OPTION_GROUP_SET",
              "ORGANISATION_UNIT",
              "ORGANISATION_UNIT_GROUP",
              "ORGANISATION_UNIT_GROUP_SET",
              "ORGANISATION_UNIT_LEVEL",
              "PERIOD",
              "PROGRAM_ATTRIBUTE",
              "PROGRAM_DATA_ELEMENT",
              "PROGRAM_INDICATOR",
              "STATIC",
              "VALIDATION_RULE"
            ],
            "example": "DATA_ELEMENT_GROUP_SET",
            "format": "enum",
            "type": "string"
          },
          "displayDescription": {
            "enum": [
              "Tracker-based data"
            ],
            "example": "mydispla",
            "format": "general",
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "displayName": {
            "$ref": "#/components/schemas/displayName"
          },
          "displayShortName": {
            "$ref": "#/components/schemas/displayShortName"
          },
          "externalAccess": {
            "$ref": "#/components/schemas/externalAccess"
          },
          "favorite": {
            "type": "boolean"
          },
          "favorites": {
            "items": {
              "$ref": "#/components/schemas/favorite"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "filter": {
            "format": "general",
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "href": {
            "$ref": "#/components/schemas/href"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "items": {
            "items": {
              "maxProperties": 1,
              "minProperties": 0,
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/id"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "lastUpdated": {
            "$ref": "#/components/schemas/lastUpdated"
          },
          "lastUpdatedBy": {
            "$ref": "#/components/schemas/lastUpdatedBy"
          },
          "legendSet": {
            "format": "uid",
            "maxLength": 11,
            "minLength": 11,
            "type": "string",
            "x-association": "true"
          },
          "name": {
            "$ref": "#/components/schemas/name"
          },
          "publicAccess": {
            "$ref": "#/components/schemas/publicAccess"
          },
          "shortName": {
            "$ref": "#/components/schemas/shortName"
          },
          "translations": {
            "items": {
              "properties": {
                "locale": {
                  "$ref": "#/components/schemas/locale"
                },
                "property": {
                  "$ref": "#/components/schemas/property"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "user": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "userAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userUid": {
                  "$ref": "#/components/schemas/userUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "userGroupAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userGroupUid": {
                  "$ref": "#/components/schemas/userGroupUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          }
        },
        "required": [
          "name"
        ],
        "type": "object",
        "x-status-dhis2": "template"
      },
      "dataElementGroupSetAttribute": {
        "type": "boolean"
      },
      "dataElementGroupSetDimension": {
        "properties": {}
      },
      "dataElementOperand": {
        "properties": {
          "access": {
            "items": {
              "$ref": "#/components/schemas/access"
            },
            "maxItems": 1,
            "minItems": 1,
            "readOnly": false,
            "required": [
              "delete",
              "externalize",
              "manage",
              "read",
              "update",
              "write"
            ],
            "type": "object"
          },
          "aggregationType": {
            "$ref": "#/components/schemas/aggregationType"
          },
          "attributeOptionCombo": {
            "$ref": "#/components/schemas/attributeOptionCombo"
          },
          "attributeValues": {
            "items": {
              "$ref": "#/components/schemas/attributeValue"
            },
            "type": "array"
          },
          "categoryOptionCombo": {
            "anyOf": [
              {
                "format": "uid",
                "maxLength": 255,
                "type": "string"
              },
              {
                "properties": {
                  "id": {
                    "example": "qk6n4eMAdtK",
                    "format": "uid",
                    "maxLength": 11,
                    "minLength": 11,
                    "type": "string"
                  }
                },
                "required": [
                  "id"
                ],
                "type": "object"
              }
            ]
          },
          "code": {
            "format": "uid",
            "maxLength": 2147483647,
            "type": "string"
          },
          "created": {
            "format": "date-time",
            "type": "string"
          },
          "dataElement": {
            "anyOf": [
              {
                "format": "uid",
                "maxLength": 255,
                "type": "string"
              },
              {
                "properties": {
                  "id": {
                    "example": "FTRrcoaog83",
                    "format": "uid",
                    "maxLength": 11,
                    "minLength": 11,
                    "type": "string"
                  }
                },
                "required": [
                  "id"
                ],
                "type": "object"
              }
            ]
          },
          "description": {
            "maxLength": 2147483647,
            "minLength": 1,
            "type": "string"
          },
          "dimensionItem": {
            "example": "mydimensionItem",
            "format": "general",
            "maxLength": 23,
            "minLength": 23,
            "readOnly": true,
            "type": "string"
          },
          "dimensionItemType": {
            "enum": [
              "CATEGORY_OPTION",
              "CATEGORY_OPTION_GROUP",
              "DATA_ELEMENT",
              "DATA_ELEMENT_GROUP",
              "DATA_ELEMENT_OPERAND",
              "INDICATOR",
              "OPTION_GROUP",
              "ORGANISATION_UNIT",
              "ORGANISATION_UNIT_GROUP",
              "PERIOD",
              "PROGRAM_ATTRIBUTE",
              "PROGRAM_DATA_ELEMENT",
              "PROGRAM_INDICATOR",
              "REPORTING_RATE"
            ],
            "example": "DATA_ELEMENT_OPERAND",
            "format": "enum",
            "maxLength": 20,
            "minLength": 20,
            "type": "string"
          },
          "displayDescription": {
            "maxLength": 2147483647,
            "type": "string"
          },
          "displayName": {
            "example": "mydisplayName",
            "format": "general",
            "maxLength": 2147483647,
            "minLength": 3,
            "type": "string"
          },
          "displayShortName": {
            "example": "mydisplayShortName",
            "format": "general",
            "maxLength": 2147483647,
            "minLength": 2,
            "type": "string"
          },
          "externalAccess": {
            "format": "boolean",
            "type": "boolean"
          },
          "favorite": {
            "type": "boolean"
          },
          "favorites": {
            "items": {
              "$ref": "#/components/schemas/favorite"
            },
            "type": "array"
          },
          "href": {
            "$ref": "#/components/schemas/href"
          },
          "id": {
            "example": "myid",
            "format": "uid",
            "maxLength": 11,
            "minLength": 11,
            "type": "string"
          },
          "lastUpdated": {
            "format": "date-time",
            "type": "string"
          },
          "lastUpdatedBy": {
            "format": "uid",
            "type": "string"
          },
          "legendSets": {
            "items": {
              "format": "uid",
              "type": "string"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": false,
            "type": "array"
          },
          "name": {
            "example": "myname",
            "format": "general",
            "maxLength": 2147483647,
            "minLength": 1,
            "type": "string"
          },
          "publicAccess": {
            "maxLength": 8,
            "minLength": 8,
            "type": "string"
          },
          "shortName": {
            "example": "myshortName",
            "format": "general",
            "maxLength": 2147483647,
            "minLength": 1,
            "type": "string"
          },
          "translations": {
            "items": {
              "$ref": "#/components/schemas/translation"
            },
            "type": "array"
          },
          "user": {
            "format": "uid",
            "type": "string"
          },
          "userAccesses": {
            "items": {
              "$ref": "#/components/schemas/userAccess"
            },
            "type": "array"
          },
          "userGroupAccesses": {
            "items": {
              "$ref": "#/components/schemas/userGroupAccess"
            },
            "type": "array"
          }
        },
        "required": [
          "access",
          "attributeValues",
          "categoryOptionCombo",
          "dataElement",
          "dimensionItem",
          "dimensionItemType",
          "displayName",
          "displayShortName",
          "externalAccess",
          "favorite",
          "favorites",
          "id",
          "legendSets",
          "name",
          "shortName",
          "translations",
          "userAccesses",
          "userGroupAccesses"
        ],
        "type": "object",
        "x-status-dhis2": "template"
      },
      "dataEntryForm": {
        "maxProperties": 21,
        "minProperties": 0,
        "properties": {
          "access": {
            "maxProperties": 6,
            "minProperties": 1,
            "properties": {
              "delete": {
                "$ref": "#/components/schemas/delete"
              },
              "externalize": {
                "$ref": "#/components/schemas/externalize"
              },
              "manage": {
                "$ref": "#/components/schemas/manage"
              },
              "read": {
                "$ref": "#/components/schemas/read"
              },
              "update": {
                "$ref": "#/components/schemas/update"
              },
              "write": {
                "$ref": "#/components/schemas/write"
              }
            },
            "readOnly": true,
            "required": [
              "delete",
              "externalize",
              "manage",
              "read",
              "update",
              "write"
            ],
            "type": "object"
          },
          "attributeValues": {
            "items": {
              "properties": {
                "attribute": {
                  "format": "uid",
                  "maxLength": 255,
                  "readOnly": false,
                  "type": "string"
                },
                "created": {
                  "$ref": "#/components/schemas/created"
                },
                "lastUpdated": {
                  "$ref": "#/components/schemas/lastUpdated"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              },
              "required": [
                "attribute"
              ]
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "code": {
            "$ref": "#/components/schemas/code"
          },
          "created": {
            "$ref": "#/components/schemas/created"
          },
          "displayName": {
            "$ref": "#/components/schemas/displayName"
          },
          "externalAccess": {
            "$ref": "#/components/schemas/externalAccess"
          },
          "favorite": {
            "type": "boolean"
          },
          "favorites": {
            "items": {
              "$ref": "#/components/schemas/favorite"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "format": {
            "$ref": "#/components/schemas/format"
          },
          "href": {
            "$ref": "#/components/schemas/href"
          },
          "htmlCode": {
            "$ref": "#/components/schemas/htmlCode"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "lastUpdated": {
            "$ref": "#/components/schemas/lastUpdated"
          },
          "lastUpdatedBy": {
            "$ref": "#/components/schemas/lastUpdatedBy"
          },
          "name": {
            "$ref": "#/components/schemas/name"
          },
          "publicAccess": {
            "$ref": "#/components/schemas/publicAccess"
          },
          "style": {
            "enum": [
              "COMFORTABLE",
              "COMPACT",
              "NONE",
              "NORMAL"
            ],
            "example": "NORMAL",
            "format": "enum",
            "type": "string"
          },
          "translations": {
            "items": {
              "properties": {
                "locale": {
                  "$ref": "#/components/schemas/locale"
                },
                "property": {
                  "$ref": "#/components/schemas/property"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "user": {
            "format": "uid",
            "maxLength": 11,
            "minLength": 11,
            "type": "string"
          },
          "userAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userUid": {
                  "$ref": "#/components/schemas/userUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "userGroupAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userGroupUid": {
                  "$ref": "#/components/schemas/userGroupUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          }
        },
        "required": [
          "name"
        ],
        "type": "object",
        "x-status-dhis2": "template"
      },
      "dataInputPeriods": {
        "properties": {}
      },
      "dataSet": {
        "maxProperties": 2147483647,
        "minProperties": 0,
        "properties": {
          "access": {
            "maxProperties": 7,
            "minProperties": 1,
            "properties": {
              "data": {
                "properties": {
                  "read": {
                    "$ref": "#/components/schemas/read"
                  },
                  "write": {
                    "$ref": "#/components/schemas/write"
                  }
                },
                "required": [
                  "read",
                  "write"
                ],
                "type": "object"
              },
              "delete": {
                "$ref": "#/components/schemas/delete"
              },
              "externalize": {
                "$ref": "#/components/schemas/externalize"
              },
              "manage": {
                "$ref": "#/components/schemas/manage"
              },
              "read": {
                "$ref": "#/components/schemas/read"
              },
              "update": {
                "$ref": "#/components/schemas/update"
              },
              "write": {
                "$ref": "#/components/schemas/write"
              }
            },
            "readOnly": true,
            "required": [
              "data",
              "delete",
              "externalize",
              "manage",
              "read",
              "update",
              "write"
            ],
            "type": "object"
          },
          "aggregationType": {
            "$ref": "#/components/schemas/aggregationType"
          },
          "attributeValues": {
            "items": {
              "properties": {
                "attribute": {
                  "format": "uid",
                  "maxLength": 255,
                  "readOnly": false,
                  "type": "string"
                },
                "created": {
                  "$ref": "#/components/schemas/created"
                },
                "lastUpdated": {
                  "$ref": "#/components/schemas/lastUpdated"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              },
              "required": [
                "attribute"
              ]
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "categoryCombo": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "code": {
            "$ref": "#/components/schemas/code"
          },
          "compulsoryDataElementOperands": {
            "items": {
              "maxProperties": 21,
              "minProperties": 0,
              "properties": {
                "access": {
                  "maxProperties": 6,
                  "minProperties": 0,
                  "properties": {
                    "delete": {
                      "$ref": "#/components/schemas/delete"
                    },
                    "externalize": {
                      "$ref": "#/components/schemas/externalize"
                    },
                    "manage": {
                      "$ref": "#/components/schemas/manage"
                    },
                    "read": {
                      "$ref": "#/components/schemas/read"
                    },
                    "update": {
                      "$ref": "#/components/schemas/update"
                    },
                    "write": {
                      "$ref": "#/components/schemas/write"
                    }
                  },
                  "required": [
                    "delete",
                    "externalize",
                    "manage",
                    "read",
                    "update",
                    "write"
                  ],
                  "type": "object"
                },
                "aggregationType": {
                  "$ref": "#/components/schemas/aggregationType"
                },
                "attributeValues": {
                  "items": {
                    "properties": {
                      "attribute": {
                        "format": "uid",
                        "maxLength": 255,
                        "readOnly": false,
                        "type": "string"
                      },
                      "created": {
                        "$ref": "#/components/schemas/created"
                      },
                      "lastUpdated": {
                        "$ref": "#/components/schemas/lastUpdated"
                      },
                      "value": {
                        "$ref": "#/components/schemas/value"
                      }
                    },
                    "required": [
                      "attribute"
                    ]
                  },
                  "maxItems": 2147483647,
                  "minItems": 0,
                  "type": "array"
                },
                "categoryOptionCombo": {
                  "maxProperties": 1,
                  "minProperties": 0,
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    }
                  },
                  "required": [
                    "id"
                  ],
                  "type": "object"
                },
                "created": {
                  "$ref": "#/components/schemas/created"
                },
                "dataElement": {
                  "maxProperties": 1,
                  "minProperties": 0,
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    }
                  },
                  "required": [
                    "id"
                  ],
                  "type": "object"
                },
                "dimensionItem": {
                  "$ref": "#/components/schemas/dimensionItem"
                },
                "dimensionItemType": {
                  "enum": [
                    "DATA_ELEMENT_OPERAND"
                  ],
                  "example": "DATA_ELEMENT_OPERAND",
                  "format": "enum",
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "displayShortName": {
                  "$ref": "#/components/schemas/displayShortName"
                },
                "externalAccess": {
                  "$ref": "#/components/schemas/externalAccess"
                },
                "favorite": {
                  "type": "boolean"
                },
                "favorites": {
                  "items": {
                    "$ref": "#/components/schemas/favorite"
                  },
                  "maxItems": 2147483647,
                  "minItems": 0,
                  "type": "array"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "lastUpdated": {
                  "$ref": "#/components/schemas/lastUpdated"
                },
                "legendSets": {
                  "items": {
                    "maxProperties": 20,
                    "minProperties": 0,
                    "properties": {
                      "access": {
                        "maxProperties": 6,
                        "minProperties": 1,
                        "properties": {
                          "delete": {
                            "$ref": "#/components/schemas/delete"
                          },
                          "externalize": {
                            "$ref": "#/components/schemas/externalize"
                          },
                          "manage": {
                            "$ref": "#/components/schemas/manage"
                          },
                          "read": {
                            "$ref": "#/components/schemas/read"
                          },
                          "update": {
                            "$ref": "#/components/schemas/update"
                          },
                          "write": {
                            "$ref": "#/components/schemas/write"
                          }
                        },
                        "readOnly": true,
                        "required": [
                          "delete",
                          "externalize",
                          "manage",
                          "read",
                          "update",
                          "write"
                        ],
                        "type": "object"
                      },
                      "attributeValues": {
                        "items": {
                          "properties": {
                            "attribute": {
                              "format": "uid",
                              "maxLength": 255,
                              "readOnly": false,
                              "type": "string"
                            },
                            "created": {
                              "$ref": "#/components/schemas/created"
                            },
                            "lastUpdated": {
                              "$ref": "#/components/schemas/lastUpdated"
                            },
                            "value": {
                              "$ref": "#/components/schemas/value"
                            }
                          },
                          "required": [
                            "attribute"
                          ]
                        },
                        "maxItems": 2147483647,
                        "minItems": 0,
                        "type": "array"
                      },
                      "code": {
                        "$ref": "#/components/schemas/code"
                      },
                      "created": {
                        "$ref": "#/components/schemas/created"
                      },
                      "displayName": {
                        "$ref": "#/components/schemas/displayName"
                      },
                      "externalAccess": {
                        "$ref": "#/components/schemas/externalAccess"
                      },
                      "favorite": {
                        "type": "boolean"
                      },
                      "favorites": {
                        "items": {
                          "$ref": "#/components/schemas/favorite"
                        },
                        "maxItems": 2147483647,
                        "minItems": 0,
                        "type": "array"
                      },
                      "href": {
                        "$ref": "#/components/schemas/href"
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "lastUpdated": {
                        "$ref": "#/components/schemas/lastUpdated"
                      },
                      "lastUpdatedBy": {
                        "properties": {
                          "id": {
                            "$ref": "#/components/schemas/id"
                          }
                        },
                        "required": [
                          "id"
                        ],
                        "type": "object"
                      },
                      "legends": {
                        "items": {
                          "maxProperties": 16,
                          "minProperties": 0,
                          "properties": {
                            "access": {
                              "maxProperties": 6,
                              "minProperties": 0,
                              "properties": {
                                "delete": {
                                  "$ref": "#/components/schemas/delete"
                                },
                                "externalize": {
                                  "$ref": "#/components/schemas/externalize"
                                },
                                "manage": {
                                  "$ref": "#/components/schemas/manage"
                                },
                                "read": {
                                  "$ref": "#/components/schemas/read"
                                },
                                "update": {
                                  "$ref": "#/components/schemas/update"
                                },
                                "write": {
                                  "$ref": "#/components/schemas/write"
                                }
                              },
                              "required": [
                                "delete",
                                "externalize",
                                "manage",
                                "read",
                                "update",
                                "write"
                              ],
                              "type": "object"
                            },
                            "attributeValues": {
                              "items": {
                                "properties": {
                                  "attribute": {
                                    "format": "uid",
                                    "maxLength": 255,
                                    "readOnly": false,
                                    "type": "string"
                                  },
                                  "created": {
                                    "$ref": "#/components/schemas/created"
                                  },
                                  "lastUpdated": {
                                    "$ref": "#/components/schemas/lastUpdated"
                                  },
                                  "value": {
                                    "$ref": "#/components/schemas/value"
                                  }
                                },
                                "required": [
                                  "attribute"
                                ]
                              },
                              "maxItems": 2147483647,
                              "minItems": 0,
                              "type": "array"
                            },
                            "color": {
                              "$ref": "#/components/schemas/color"
                            },
                            "created": {
                              "$ref": "#/components/schemas/created"
                            },
                            "displayName": {
                              "$ref": "#/components/schemas/displayName"
                            },
                            "endValue": {
                              "$ref": "#/components/schemas/endValue"
                            },
                            "externalAccess": {
                              "$ref": "#/components/schemas/externalAccess"
                            },
                            "favorite": {
                              "type": "boolean"
                            },
                            "favorites": {
                              "items": {
                                "$ref": "#/components/schemas/favorite"
                              },
                              "maxItems": 2147483647,
                              "minItems": 0,
                              "type": "array"
                            },
                            "id": {
                              "$ref": "#/components/schemas/id"
                            },
                            "lastUpdated": {
                              "$ref": "#/components/schemas/lastUpdated"
                            },
                            "name": {
                              "$ref": "#/components/schemas/name"
                            },
                            "startValue": {
                              "$ref": "#/components/schemas/startValue"
                            },
                            "translations": {
                              "items": {
                                "properties": {
                                  "locale": {
                                    "$ref": "#/components/schemas/locale"
                                  },
                                  "property": {
                                    "$ref": "#/components/schemas/property"
                                  },
                                  "value": {
                                    "$ref": "#/components/schemas/value"
                                  }
                                }
                              },
                              "maxItems": 2147483647,
                              "minItems": 0,
                              "type": "array"
                            },
                            "userAccesses": {
                              "items": {
                                "properties": {
                                  "access": {
                                    "format": "access",
                                    "maxLength": 255,
                                    "minLength": 0,
                                    "readOnly": false,
                                    "type": "string"
                                  },
                                  "displayName": {
                                    "$ref": "#/components/schemas/displayName"
                                  },
                                  "id": {
                                    "$ref": "#/components/schemas/id"
                                  },
                                  "userUid": {
                                    "$ref": "#/components/schemas/userUid"
                                  }
                                }
                              },
                              "maxItems": 2147483647,
                              "minItems": 0,
                              "type": "array"
                            },
                            "userGroupAccesses": {
                              "items": {
                                "properties": {
                                  "access": {
                                    "format": "access",
                                    "maxLength": 255,
                                    "minLength": 0,
                                    "readOnly": false,
                                    "type": "string"
                                  },
                                  "displayName": {
                                    "$ref": "#/components/schemas/displayName"
                                  },
                                  "id": {
                                    "$ref": "#/components/schemas/id"
                                  },
                                  "userGroupUid": {
                                    "$ref": "#/components/schemas/userGroupUid"
                                  }
                                }
                              },
                              "maxItems": 2147483647,
                              "minItems": 0,
                              "type": "array"
                            }
                          },
                          "required": [
                            "access",
                            "attributeValues",
                            "color",
                            "created",
                            "displayName",
                            "endValue",
                            "externalAccess",
                            "favorite",
                            "favorites",
                            "id",
                            "lastUpdated",
                            "name",
                            "startValue",
                            "translations",
                            "userAccesses",
                            "userGroupAccesses"
                          ],
                          "type": "object"
                        },
                        "maxItems": 2147483647,
                        "minItems": 0,
                        "type": "array"
                      },
                      "name": {
                        "$ref": "#/components/schemas/name"
                      },
                      "publicAccess": {
                        "$ref": "#/components/schemas/publicAccess"
                      },
                      "symbolizer": {
                        "$ref": "#/components/schemas/symbolizer"
                      },
                      "translations": {
                        "items": {
                          "properties": {
                            "locale": {
                              "$ref": "#/components/schemas/locale"
                            },
                            "property": {
                              "$ref": "#/components/schemas/property"
                            },
                            "value": {
                              "$ref": "#/components/schemas/value"
                            }
                          }
                        },
                        "maxItems": 2147483647,
                        "minItems": 0,
                        "type": "array"
                      },
                      "user": {
                        "properties": {
                          "id": {
                            "$ref": "#/components/schemas/id"
                          }
                        },
                        "required": [
                          "id"
                        ],
                        "type": "object"
                      },
                      "userAccesses": {
                        "items": {
                          "properties": {
                            "access": {
                              "format": "access",
                              "maxLength": 255,
                              "minLength": 0,
                              "readOnly": false,
                              "type": "string"
                            },
                            "displayName": {
                              "$ref": "#/components/schemas/displayName"
                            },
                            "id": {
                              "$ref": "#/components/schemas/id"
                            },
                            "userUid": {
                              "$ref": "#/components/schemas/userUid"
                            }
                          }
                        },
                        "maxItems": 2147483647,
                        "minItems": 0,
                        "type": "array"
                      },
                      "userGroupAccesses": {
                        "items": {
                          "properties": {
                            "access": {
                              "format": "access",
                              "maxLength": 255,
                              "minLength": 0,
                              "readOnly": false,
                              "type": "string"
                            },
                            "displayName": {
                              "$ref": "#/components/schemas/displayName"
                            },
                            "id": {
                              "$ref": "#/components/schemas/id"
                            },
                            "userGroupUid": {
                              "$ref": "#/components/schemas/userGroupUid"
                            }
                          }
                        },
                        "maxItems": 2147483647,
                        "minItems": 0,
                        "type": "array"
                      }
                    },
                    "required": [
                      "name"
                    ],
                    "type": "object",
                    "x-status-dhis2": "template"
                  },
                  "maxItems": 2147483647,
                  "minItems": 0,
                  "type": "array"
                },
                "name": {
                  "$ref": "#/components/schemas/name"
                },
                "shortName": {
                  "$ref": "#/components/schemas/shortName"
                },
                "translations": {
                  "items": {
                    "properties": {
                      "locale": {
                        "$ref": "#/components/schemas/locale"
                      },
                      "property": {
                        "$ref": "#/components/schemas/property"
                      },
                      "value": {
                        "$ref": "#/components/schemas/value"
                      }
                    }
                  },
                  "maxItems": 2147483647,
                  "minItems": 0,
                  "type": "array"
                },
                "userAccesses": {
                  "items": {
                    "properties": {
                      "access": {
                        "format": "access",
                        "maxLength": 255,
                        "minLength": 0,
                        "readOnly": false,
                        "type": "string"
                      },
                      "displayName": {
                        "$ref": "#/components/schemas/displayName"
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "userUid": {
                        "$ref": "#/components/schemas/userUid"
                      }
                    }
                  },
                  "maxItems": 2147483647,
                  "minItems": 0,
                  "type": "array"
                },
                "userGroupAccesses": {
                  "items": {
                    "properties": {
                      "access": {
                        "format": "access",
                        "maxLength": 255,
                        "minLength": 0,
                        "readOnly": false,
                        "type": "string"
                      },
                      "displayName": {
                        "$ref": "#/components/schemas/displayName"
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "userGroupUid": {
                        "$ref": "#/components/schemas/userGroupUid"
                      }
                    }
                  },
                  "maxItems": 2147483647,
                  "minItems": 0,
                  "type": "array"
                }
              },
              "required": [
                "access",
                "attributeValues",
                "categoryOptionCombo",
                "created",
                "dataElement",
                "dimensionItem",
                "dimensionItemType",
                "displayName",
                "displayShortName",
                "externalAccess",
                "favorite",
                "favorites",
                "id",
                "lastUpdated",
                "legendSets",
                "name",
                "shortName",
                "translations",
                "userAccesses",
                "userGroupAccesses"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "compulsoryFieldsCompleteOnly": {
            "$ref": "#/components/schemas/compulsoryFieldsCompleteOnly"
          },
          "created": {
            "$ref": "#/components/schemas/created"
          },
          "dataElementDecoration": {
            "$ref": "#/components/schemas/dataElementDecoration"
          },
          "dataEntryForm": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "dataInputPeriods": {
            "items": {
              "maxProperties": 0,
              "minProperties": 0,
              "properties": {}
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": false,
            "type": "array"
          },
          "dataSetElements": {
            "items": {
              "maxProperties": 3,
              "minProperties": 0,
              "properties": {
                "categoryCombo": {
                  "maxProperties": 1,
                  "minProperties": 0,
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    }
                  },
                  "required": [
                    "id"
                  ],
                  "type": "object"
                },
                "dataElement": {
                  "maxProperties": 1,
                  "minProperties": 0,
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    }
                  },
                  "required": [
                    "id"
                  ],
                  "type": "object"
                },
                "dataSet": {
                  "maxProperties": 1,
                  "minProperties": 0,
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    }
                  },
                  "required": [
                    "id"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "dataElement",
                "dataSet"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "description": {
            "$ref": "#/components/schemas/description"
          },
          "dimensionItem": {
            "$ref": "#/components/schemas/dimensionItem"
          },
          "dimensionItemType": {
            "enum": [
              "CATEGORY_OPTION",
              "CATEGORY_OPTION_GROUP",
              "DATA_ELEMENT",
              "DATA_ELEMENT_GROUP",
              "DATA_ELEMENT_OPERAND",
              "INDICATOR",
              "OPTION_GROUP",
              "ORGANISATION_UNIT",
              "ORGANISATION_UNIT_GROUP",
              "PERIOD",
              "PROGRAM_ATTRIBUTE",
              "PROGRAM_DATA_ELEMENT",
              "PROGRAM_INDICATOR",
              "REPORTING_RATE"
            ],
            "example": "REPORTING_RATE",
            "format": "enum",
            "type": "string"
          },
          "displayDescription": {
            "$ref": "#/components/schemas/displayDescription"
          },
          "displayName": {
            "$ref": "#/components/schemas/displayName"
          },
          "displayShortName": {
            "$ref": "#/components/schemas/displayShortName"
          },
          "expiryDays": {
            "$ref": "#/components/schemas/expiryDays"
          },
          "externalAccess": {
            "$ref": "#/components/schemas/externalAccess"
          },
          "favorite": {
            "type": "boolean"
          },
          "favorites": {
            "items": {
              "$ref": "#/components/schemas/favorite"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "fieldCombinationRequired": {
            "$ref": "#/components/schemas/fieldCombinationRequired"
          },
          "formName": {
            "$ref": "#/components/schemas/formName"
          },
          "formType": {
            "$ref": "#/components/schemas/formType"
          },
          "href": {
            "$ref": "#/components/schemas/href"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "indicators": {
            "items": {
              "maxProperties": 1,
              "minProperties": 0,
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/id"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "interpretations": {
            "items": {
              "maxProperties": 1,
              "minProperties": 0,
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/id"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "lastUpdated": {
            "$ref": "#/components/schemas/lastUpdated"
          },
          "lastUpdatedBy": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "legendSets": {
            "items": {
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/id"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": false,
            "type": "array"
          },
          "mobile": {
            "$ref": "#/components/schemas/mobile"
          },
          "name": {
            "$ref": "#/components/schemas/name"
          },
          "noValueRequiresComment": {
            "$ref": "#/components/schemas/noValueRequiresComment"
          },
          "notificationRecipients": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "notifyCompletingUser": {
            "$ref": "#/components/schemas/notifyCompletingUser"
          },
          "openFuturePeriods": {
            "$ref": "#/components/schemas/openFuturePeriods"
          },
          "organisationUnits": {
            "items": {
              "maxProperties": 1,
              "minProperties": 0,
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/id"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "periodType": {
            "$ref": "#/components/schemas/periodType"
          },
          "publicAccess": {
            "$ref": "#/components/schemas/publicAccess"
          },
          "renderAsTabs": {
            "$ref": "#/components/schemas/renderAsTabs"
          },
          "renderHorizontally": {
            "$ref": "#/components/schemas/renderHorizontally"
          },
          "sections": {
            "items": {
              "maxProperties": 1,
              "minProperties": 0,
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/id"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "shortName": {
            "$ref": "#/components/schemas/shortName"
          },
          "skipOffline": {
            "$ref": "#/components/schemas/skipOffline"
          },
          "style": {
            "maxProperties": 1,
            "minProperties": 1,
            "readOnly": false,
            "type": "object"
          },
          "timelyDays": {
            "$ref": "#/components/schemas/timelyDays"
          },
          "translations": {
            "items": {
              "maxProperties": 3,
              "minProperties": 0,
              "properties": {
                "locale": {
                  "$ref": "#/components/schemas/locale"
                },
                "property": {
                  "enum": [
                    "NAME",
                    "SHORT_NAME"
                  ],
                  "example": "SHORT_NAME",
                  "format": "enum",
                  "type": "string"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              },
              "required": [
                "locale",
                "property",
                "value"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "user": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "userAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userUid": {
                  "$ref": "#/components/schemas/userUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "userGroupAccesses": {
            "items": {
              "maxProperties": 4,
              "minProperties": 0,
              "properties": {
                "access": {
                  "example": "r-rw----",
                  "format": "access",
                  "maxLength": 8,
                  "minLength": 8,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userGroupUid": {
                  "$ref": "#/components/schemas/userGroupUid"
                }
              },
              "required": [
                "access",
                "displayName",
                "id",
                "userGroupUid"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "validCompleteOnly": {
            "$ref": "#/components/schemas/validCompleteOnly"
          },
          "version": {
            "example": 22,
            "format": "int32",
            "maximum": 49,
            "minimum": 0,
            "type": "integer"
          },
          "workflow": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          }
        },
        "required": [
          "name",
          "periodType"
        ],
        "type": "object",
        "x-status-dhis2": "template"
      },
      "dataSetAttribute": {
        "type": "boolean"
      },
      "dataSetElement": {
        "properties": {}
      },
      "dataSetNotificationTemplate": {
        "maxProperties": 28,
        "minProperties": 0,
        "properties": {
          "access": {
            "$ref": "#/components/schemas/access"
          },
          "attributeValue": {
            "items": {
              "maxProperties": 4,
              "minProperties": 0,
              "properties": {
                "attribute": {
                  "format": "uid",
                  "maxLength": 11,
                  "minLength": 11,
                  "readOnly": false,
                  "type": "string"
                },
                "created": {
                  "$ref": "#/components/schemas/created"
                },
                "lastUpdated": {
                  "$ref": "#/components/schemas/lastUpdated"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": false,
            "type": "array"
          },
          "code": {
            "$ref": "#/components/schemas/code"
          },
          "created": {
            "$ref": "#/components/schemas/created"
          },
          "dataSet": {
            "items": {
              "format": "uid",
              "maxLength": 11,
              "minLength": 11,
              "type": "string"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": false,
            "type": "array"
          },
          "dataSetNotificationTrigger": {
            "$ref": "#/components/schemas/dataSetNotificationTrigger"
          },
          "deliveryChannels": {
            "items": {
              "maxLength": 255,
              "minLength": 0,
              "type": "string"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": false,
            "type": "array"
          },
          "displayName": {
            "$ref": "#/components/schemas/displayName"
          },
          "externalAccess": {
            "$ref": "#/components/schemas/externalAccess"
          },
          "favorite": {
            "type": "boolean"
          },
          "href": {
            "$ref": "#/components/schemas/href"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "lastUpdated": {
            "$ref": "#/components/schemas/lastUpdated"
          },
          "lastUpdatedBy": {
            "$ref": "#/components/schemas/lastUpdatedBy"
          },
          "messageTemplate": {
            "$ref": "#/components/schemas/messageTemplate"
          },
          "name": {
            "$ref": "#/components/schemas/name"
          },
          "notificationRecipient": {
            "$ref": "#/components/schemas/notificationRecipient"
          },
          "notifyParentOrganisationUnitOnly": {
            "$ref": "#/components/schemas/notifyParentOrganisationUnitOnly"
          },
          "notifyUsersInHierarchyOnly": {
            "$ref": "#/components/schemas/notifyUsersInHierarchyOnly"
          },
          "publicAccess": {
            "$ref": "#/components/schemas/publicAccess"
          },
          "recipientUserGroup": {
            "$ref": "#/components/schemas/recipientUserGroup"
          },
          "relativeScheduledDays": {
            "$ref": "#/components/schemas/relativeScheduledDays"
          },
          "sendStrategy": {
            "$ref": "#/components/schemas/sendStrategy"
          },
          "subjectTemplate": {
            "$ref": "#/components/schemas/subjectTemplate"
          },
          "translation": {
            "items": {
              "maxProperties": 0,
              "minProperties": 0,
              "properties": {}
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": false,
            "type": "array"
          },
          "user": {
            "format": "uid",
            "maxLength": 11,
            "minLength": 11,
            "readOnly": false,
            "type": "string"
          },
          "userAccess": {
            "items": {
              "maxProperties": 4,
              "minProperties": 0,
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 8,
                  "minLength": 8,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userUid": {
                  "$ref": "#/components/schemas/userUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": false,
            "type": "array"
          },
          "userGroupAccess": {
            "items": {
              "maxProperties": 4,
              "minProperties": 0,
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 8,
                  "minLength": 8,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userGroupUid": {
                  "$ref": "#/components/schemas/userGroupUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": false,
            "type": "array"
          }
        },
        "required": [
          "messageTemplate",
          "name"
        ],
        "x-status-dhis2": "template"
      },
      "dataSetNotificationTrigger": {
        "enum": [
          "DATA_SET_COMPLETION",
          "SCHEDULED_DAYS"
        ],
        "format": "enum",
        "readOnly": false,
        "type": "string"
      },
      "dataType": {
        "enum": [
          "AGGREGATED_VALUES",
          "EVENTS"
        ],
        "example": "AGGREGATED_VALUES",
        "format": "enum",
        "type": "string"
      },
      "dataValue": {
        "properties": {
          "access": {
            "maxLength": 255,
            "minLength": 0,
            "readOnly": false,
            "type": "string"
          },
          "displayName": {
            "$ref": "#/components/schemas/displayName"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "userUid": {
            "$ref": "#/components/schemas/userUid"
          }
        }
      },
      "dayInPeriod": {
        "format": "integer",
        "maxLength": 2147483647,
        "minLength": 0,
        "readOnly": false,
        "type": "string"
      },
      "decimals": {
        "format": "integer",
        "maxLength": 2147483647,
        "minLength": 0,
        "type": "string",
        "x-association": "true"
      },
      "defaultMessage": {
        "example": "mydefaultMessag",
        "format": "general",
        "maxLength": 2147483647,
        "type": "string"
      },
      "delete": {
        "default": false,
        "type": "boolean"
      },
      "deleted": {
        "default": false,
        "readOnly": false,
        "type": "boolean"
      },
      "denominator": {
        "example": "mydenominator",
        "format": "general",
        "maxLength": 2147483647,
        "minLength": 0,
        "type": "string"
      },
      "denominatorDescription": {
        "example": "mydenominatorDescri",
        "format": "general",
        "maxLength": 2147483647,
        "type": "string"
      },
      "description": {
        "format": "general",
        "maxLength": 2147483647,
        "minLength": 1,
        "type": "string"
      },
      "designContent": {
        "example": "mydesignContent",
        "format": "general",
        "maxLength": 2147483647,
        "minLength": 0,
        "type": "string"
      },
      "digitGroupSeparator": {
        "enum": [
          "COMMA",
          "NONE",
          "SPACE"
        ],
        "format": "enum",
        "type": "string"
      },
      "dimension": {
        "example": "KfdsGBcoiCa",
        "format": "uid",
        "maxLength": 2147483647,
        "minLength": 0,
        "type": "string"
      },
      "dimensionItem": {
        "example": "I78gJm4KBo7.Prlt0C1RF0s",
        "maxLength": 2147483647,
        "minLength": 11,
        "readOnly": true,
        "type": "string"
      },
      "dimensionItemType": {
        "enum": [
          "CATEGORY_OPTION",
          "CATEGORY_OPTION_GROUP",
          "DATA_ELEMENT",
          "DATA_ELEMENT_GROUP",
          "DATA_ELEMENT_OPERAND",
          "INDICATOR",
          "OPTION_GROUP",
          "ORGANISATION_UNIT",
          "ORGANISATION_UNIT_GROUP",
          "PERIOD",
          "PROGRAM_ATTRIBUTE",
          "PROGRAM_DATA_ELEMENT",
          "PROGRAM_INDICATOR",
          "REPORTING_RATE"
        ],
        "example": "CATEGORY_OPTION",
        "format": "enum",
        "type": "string"
      },
      "dimensionType": {
        "enum": [
          "ATTRIBUTE_OPTION_COMBO",
          "CATEGORY",
          "CATEGORY_OPTION_COMBO",
          "CATEGORY_OPTION_GROUP_SET",
          "DATA_COLLAPSED",
          "DATA_ELEMENT_GROUP_SET",
          "DATA_X",
          "OPTION_GROUP_SET",
          "ORGANISATION_UNIT",
          "ORGANISATION_UNIT_GROUP",
          "ORGANISATION_UNIT_GROUP_SET",
          "ORGANISATION_UNIT_LEVEL",
          "PERIOD",
          "PROGRAM_ATTRIBUTE",
          "PROGRAM_DATA_ELEMENT",
          "PROGRAM_INDICATOR",
          "STATIC",
          "VALIDATION_RULE"
        ],
        "example": "CATEGORY",
        "format": "enum",
        "type": "string"
      },
      "disabled": {
        "type": "boolean"
      },
      "displayDensity": {
        "enum": [
          "COMFORTABLE",
          "COMPACT",
          "NONE",
          "NORMAL"
        ],
        "example": "NORMAL",
        "format": "enum",
        "type": "string"
      },
      "displayDescription": {
        "format": "general",
        "maxLength": 2147483647,
        "minLength": 0,
        "type": "string"
      },
      "displayFormName": {
        "example": "mydisplayFormName",
        "format": "general",
        "maxLength": 2147483647,
        "minLength": 0,
        "type": "string"
      },
      "displayFrontPageList": {
        "type": "boolean"
      },
      "displayGenerateEventBox": {
        "type": "boolean"
      },
      "displayInForm": {
        "type": "boolean"
      },
      "displayInList": {
        "type": "boolean"
      },
      "displayInListNoProgram": {
        "type": "boolean"
      },
      "displayInReports": {
        "type": "boolean"
      },
      "displayIncidentDate": {
        "type": "boolean"
      },
      "displayName": {
        "example": "My Display Name",
        "maxLength": 2147483647,
        "minLength": 0,
        "readOnly": false,
        "type": "string"
      },
      "displayOnVisitSchedule": {
        "type": "boolean"
      },
      "displayShortName": {
        "format": "general",
        "maxLength": 2147483647,
        "minLength": 0,
        "type": "string"
      },
      "document": {
        "maxProperties": 22,
        "minProperties": 0,
        "properties": {
          "access": {
            "maxProperties": 6,
            "minProperties": 1,
            "properties": {
              "delete": {
                "$ref": "#/components/schemas/delete"
              },
              "externalize": {
                "$ref": "#/components/schemas/externalize"
              },
              "manage": {
                "$ref": "#/components/schemas/manage"
              },
              "read": {
                "$ref": "#/components/schemas/read"
              },
              "update": {
                "$ref": "#/components/schemas/update"
              },
              "write": {
                "$ref": "#/components/schemas/write"
              }
            },
            "readOnly": true,
            "required": [
              "delete",
              "externalize",
              "manage",
              "read",
              "update",
              "write"
            ],
            "type": "object"
          },
          "attachment": {
            "$ref": "#/components/schemas/attachment"
          },
          "attributeValues": {
            "items": {
              "properties": {
                "attribute": {
                  "format": "uid",
                  "maxLength": 255,
                  "readOnly": false,
                  "type": "string"
                },
                "created": {
                  "$ref": "#/components/schemas/created"
                },
                "lastUpdated": {
                  "$ref": "#/components/schemas/lastUpdated"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              },
              "required": [
                "attribute"
              ]
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "code": {
            "$ref": "#/components/schemas/code"
          },
          "contentType": {
            "$ref": "#/components/schemas/contentType"
          },
          "created": {
            "$ref": "#/components/schemas/created"
          },
          "displayName": {
            "$ref": "#/components/schemas/displayName"
          },
          "external": {
            "$ref": "#/components/schemas/external"
          },
          "externalAccess": {
            "$ref": "#/components/schemas/externalAccess"
          },
          "favorite": {
            "type": "boolean"
          },
          "favorites": {
            "items": {
              "$ref": "#/components/schemas/favorite"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "href": {
            "$ref": "#/components/schemas/href"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "lastUpdated": {
            "$ref": "#/components/schemas/lastUpdated"
          },
          "lastUpdatedBy": {
            "$ref": "#/components/schemas/lastUpdatedBy"
          },
          "name": {
            "$ref": "#/components/schemas/name"
          },
          "publicAccess": {
            "$ref": "#/components/schemas/publicAccess"
          },
          "translations": {
            "items": {
              "properties": {
                "locale": {
                  "$ref": "#/components/schemas/locale"
                },
                "property": {
                  "$ref": "#/components/schemas/property"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "url": {
            "$ref": "#/components/schemas/url"
          },
          "user": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "userAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userUid": {
                  "$ref": "#/components/schemas/userUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "userGroupAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userGroupUid": {
                  "$ref": "#/components/schemas/userGroupUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          }
        },
        "required": [
          "url"
        ],
        "type": "object"
      },
      "documentAttribute": {
        "type": "boolean"
      },
      "domainAxisLabel": {
        "example": "mydomainAxisLabe",
        "format": "general",
        "maxLength": 255,
        "type": "string"
      },
      "domainType": {
        "enum": [
          "AGGREGATE",
          "TRACKER"
        ],
        "example": "AGGREGATE",
        "format": "enum",
        "type": "string"
      },
      "dueDate": {
        "format": "date-time",
        "maxLength": 255,
        "readOnly": true,
        "type": "string"
      },
      "dueDateLabel": {
        "example": "mydueDateLabel",
        "format": "general",
        "maxLength": 255,
        "minLength": 2,
        "type": "string"
      },
      "education": {
        "example": "myeducation",
        "format": "general",
        "maxLength": 2147483647,
        "minLength": 0,
        "type": "string"
      },
      "email": {
        "example": "example@dhis2.org",
        "format": "email",
        "maxLength": 160,
        "minLength": 0,
        "type": "string"
      },
      "employer": {
        "example": "DHIS",
        "format": "general",
        "maxLength": 160,
        "minLength": 0,
        "type": "string"
      },
      "enabled": {
        "type": "boolean"
      },
      "endDate": {
        "example": "2016-10-01T00:00:00.000",
        "format": "date-time",
        "maxLength": 23,
        "minLength": 23,
        "type": "string"
      },
      "endValue": {
        "example": 40.0,
        "format": "double",
        "maximum": 2147483647,
        "minimum": -2147483648,
        "type": "number"
      },
      "enrollment": {
        "properties": {
          "attributed": {
            "items": {
              "$ref": "#/components/schemas/attribute"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": true,
            "type": "array"
          },
          "created": {
            "$ref": "#/components/schemas/created"
          },
          "createdAtClient": {
            "$ref": "#/components/schemas/createdAtClient"
          },
          "deleted": {
            "$ref": "#/components/schemas/deleted"
          },
          "enrollmentDate": {
            "$ref": "#/components/schemas/enrollmentDate"
          },
          "events": {
            "items": {
              "$ref": "#/components/schemas/event"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": true,
            "type": "array"
          },
          "followup": {
            "$ref": "#/components/schemas/followup"
          },
          "incidentDate": {
            "$ref": "#/components/schemas/incidentDate"
          },
          "lastUpdated": {
            "$ref": "#/components/schemas/lastUpdated"
          },
          "notes": {
            "items": {
              "$ref": "#/components/schemas/note"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": true,
            "type": "array"
          },
          "orgUnit": {
            "$ref": "#/components/schemas/orgUnit"
          },
          "orgUnitName": {
            "$ref": "#/components/schemas/orgUnitName"
          },
          "program": {
            "format": "uid",
            "maxLength": 11,
            "minLength": 11,
            "readOnly": false,
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/status"
          },
          "trackedEntityType": {
            "format": "uid",
            "maxLength": 11,
            "minLength": 11,
            "readOnly": false,
            "type": "string"
          }
        }
      },
      "enrollmentDate": {
        "format": "date-time",
        "maxLength": 255,
        "readOnly": true,
        "type": "string"
      },
      "enrollmentDateLabel": {
        "example": "myenrollmentDa",
        "format": "general",
        "maxLength": 2147483647,
        "minLength": 2,
        "type": "string"
      },
      "enrollmentStatus": {
        "enum": [
          "ACTIVE",
          "CANCELLED",
          "COMPLETED"
        ],
        "maxLength": 50,
        "readOnly": false,
        "type": "string"
      },
      "errorReports": {
        "type": "string"
      },
      "errorResponse": {
        "properties": {
          "errorReports": {
            "$ref": "#/components/schemas/errorReports"
          },
          "klass": {
            "$ref": "#/components/schemas/klass"
          },
          "responseType": {
            "$ref": "#/components/schemas/responseType"
          },
          "uid": {
            "$ref": "#/components/schemas/uid"
          }
        }
      },
      "event": {
        "properties": {
          "attributeCategoryOptions": {
            "$ref": "#/components/schemas/attributeCategoryOptions"
          },
          "attributeOptionCombo": {
            "$ref": "#/components/schemas/attributeOptionCombo"
          },
          "created": {
            "$ref": "#/components/schemas/created"
          },
          "createdAtClient": {
            "$ref": "#/components/schemas/createdAtClient"
          },
          "dataValues": {
            "items": {
              "$ref": "#/components/schemas/dataValue"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": true,
            "type": "array"
          },
          "deleted": {
            "$ref": "#/components/schemas/deleted"
          },
          "dueDate": {
            "$ref": "#/components/schemas/dueDate"
          },
          "enrollment": {
            "format": "uid",
            "maxLength": 11,
            "minLength": 11,
            "readOnly": false,
            "type": "string"
          },
          "enrollmentStatus": {
            "$ref": "#/components/schemas/enrollmentStatus"
          },
          "event": {
            "format": "uid",
            "maxLength": 11,
            "minLength": 11,
            "readOnly": false,
            "type": "string"
          },
          "followup": {
            "$ref": "#/components/schemas/followup"
          },
          "lastUpdated": {
            "$ref": "#/components/schemas/lastUpdated"
          },
          "notes": {
            "items": {
              "$ref": "#/components/schemas/note"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": true,
            "type": "array"
          },
          "program": {
            "format": "uid",
            "maxLength": 11,
            "minLength": 11,
            "readOnly": false,
            "type": "string"
          },
          "programStage": {
            "format": "uid",
            "maxLength": 11,
            "minLength": 11,
            "readOnly": false,
            "type": "string"
          },
          "status": {
            "enum": [
              "ACTIVE",
              "COMPLETED",
              "OVERDUE",
              "SCHEDULE",
              "SKIPPED",
              "VISITED"
            ],
            "maxLength": 40,
            "readOnly": false,
            "type": "string"
          },
          "trackedEntityInstance": {
            "format": "uid",
            "maxLength": 11,
            "minLength": 11,
            "readOnly": false,
            "type": "string"
          }
        }
      },
      "eventChart": {
        "maxProperties": 91,
        "minProperties": 0,
        "properties": {
          "access": {
            "maxProperties": 6,
            "minProperties": 1,
            "properties": {
              "delete": {
                "$ref": "#/components/schemas/delete"
              },
              "externalize": {
                "$ref": "#/components/schemas/externalize"
              },
              "manage": {
                "$ref": "#/components/schemas/manage"
              },
              "read": {
                "$ref": "#/components/schemas/read"
              },
              "update": {
                "$ref": "#/components/schemas/update"
              },
              "write": {
                "$ref": "#/components/schemas/write"
              }
            },
            "readOnly": true,
            "required": [
              "delete",
              "externalize",
              "manage",
              "read",
              "update",
              "write"
            ],
            "type": "object"
          },
          "aggregationType": {
            "enum": [
              "AVERAGE",
              "AVERAGE_SUM_ORG_UNIT",
              "COUNT",
              "CUSTOM",
              "DEFAULT",
              "LAST",
              "LAST_AVERAGE_ORG_UNIT",
              "MAX",
              "MIN",
              "NONE",
              "STDDEV",
              "SUM",
              "VARIANCE"
            ],
            "example": "AVERAGE",
            "format": "enum",
            "type": "string"
          },
          "attributeDimensions": {
            "items": {
              "properties": {}
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "attributeValueDimension": {
            "$ref": "#/components/schemas/attributeValueDimension"
          },
          "attributeValues": {
            "items": {
              "properties": {
                "attribute": {
                  "format": "uid",
                  "maxLength": 255,
                  "readOnly": false,
                  "type": "string"
                },
                "created": {
                  "$ref": "#/components/schemas/created"
                },
                "lastUpdated": {
                  "$ref": "#/components/schemas/lastUpdated"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              },
              "required": [
                "attribute"
              ]
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "baseLineLabel": {
            "$ref": "#/components/schemas/baseLineLabel"
          },
          "baseLineValue": {
            "$ref": "#/components/schemas/baseLineValue"
          },
          "categoryDimensions": {
            "items": {
              "properties": {}
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "categoryOptionGroupSetDimensions": {
            "items": {
              "properties": {}
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "code": {
            "$ref": "#/components/schemas/code"
          },
          "collapseDataDimensions": {
            "$ref": "#/components/schemas/collapseDataDimensions"
          },
          "colorSet": {
            "format": "uid",
            "maxLength": 11,
            "minLength": 11,
            "type": "string",
            "x-association": "true"
          },
          "columnDimensions": {
            "items": {
              "example": "qrur9Dvnyt5",
              "format": "dimension",
              "maxLength": 255,
              "minLength": 1,
              "type": "string"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "columns": {
            "items": {
              "properties": {}
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "completedOnly": {
            "$ref": "#/components/schemas/completedOnly"
          },
          "created": {
            "$ref": "#/components/schemas/created"
          },
          "cumulativeValues": {
            "$ref": "#/components/schemas/cumulativeValues"
          },
          "dataDimensionItems": {
            "items": {
              "properties": {}
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "dataElementDimensions": {
            "items": {
              "maxProperties": 3,
              "minProperties": 0,
              "properties": {
                "dataElement": {
                  "maxProperties": 1,
                  "minProperties": 0,
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    }
                  },
                  "required": [
                    "id"
                  ],
                  "type": "object"
                },
                "filter": {
                  "example": "myf",
                  "format": "general",
                  "maxLength": 255,
                  "minLength": 1,
                  "type": "string"
                },
                "legendSet": {
                  "maxProperties": 1,
                  "minProperties": 0,
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    }
                  },
                  "required": [
                    "id"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "dataElement"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "dataElementGroupSetDimensions": {
            "items": {
              "properties": {}
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "dataElementValueDimension": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "description": {
            "$ref": "#/components/schemas/description"
          },
          "digitGroupSeparator": {
            "$ref": "#/components/schemas/digitGroupSeparator"
          },
          "displayDescription": {
            "$ref": "#/components/schemas/displayDescription"
          },
          "displayName": {
            "$ref": "#/components/schemas/displayName"
          },
          "displayShortName": {
            "$ref": "#/components/schemas/displayShortName"
          },
          "domainAxisLabel": {
            "$ref": "#/components/schemas/domainAxisLabel"
          },
          "endDate": {
            "$ref": "#/components/schemas/endDate"
          },
          "eventStatus": {
            "$ref": "#/components/schemas/eventStatus"
          },
          "externalAccess": {
            "$ref": "#/components/schemas/externalAccess"
          },
          "favorite": {
            "type": "boolean"
          },
          "filterDimensions": {
            "items": {
              "example": "m",
              "format": "dimension",
              "maxLength": 255,
              "minLength": 1,
              "type": "string"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "filters": {
            "items": {
              "properties": {}
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "hideEmptyRowItems": {
            "$ref": "#/components/schemas/hideEmptyRowItems"
          },
          "hideLegend": {
            "$ref": "#/components/schemas/hideLegend"
          },
          "hideNaData": {
            "$ref": "#/components/schemas/hideNaData"
          },
          "hideSubtitle": {
            "$ref": "#/components/schemas/hideSubtitle"
          },
          "hideTitle": {
            "$ref": "#/components/schemas/hideTitle"
          },
          "href": {
            "$ref": "#/components/schemas/href"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "interpretations": {
            "items": {
              "maxProperties": 1,
              "minProperties": 0,
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/id"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "itemOrganisationUnitGroups": {
            "items": {
              "properties": {}
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "lastUpdated": {
            "$ref": "#/components/schemas/lastUpdated"
          },
          "lastUpdatedBy": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "legendDisplayStrategy": {
            "$ref": "#/components/schemas/legendDisplayStrategy"
          },
          "legendSet": {
            "format": "uid",
            "maxLength": 11,
            "minLength": 11,
            "type": "string",
            "x-association": "true"
          },
          "name": {
            "$ref": "#/components/schemas/name"
          },
          "noSpaceBetweenColumns": {
            "$ref": "#/components/schemas/noSpaceBetweenColumns"
          },
          "organisationUnitGroupSetDimensions": {
            "items": {
              "maxProperties": 2,
              "minProperties": 0,
              "properties": {
                "organisationUnitGroupSet": {
                  "maxProperties": 1,
                  "minProperties": 0,
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    }
                  },
                  "required": [
                    "id"
                  ],
                  "type": "object"
                },
                "organisationUnitGroups": {
                  "items": {
                    "maxProperties": 1,
                    "minProperties": 0,
                    "properties": {
                      "id": {
                        "$ref": "#/components/schemas/id"
                      }
                    },
                    "required": [
                      "id"
                    ],
                    "type": "object"
                  },
                  "maxItems": 2147483647,
                  "minItems": 0,
                  "type": "array"
                }
              },
              "required": [
                "organisationUnitGroupSet",
                "organisationUnitGroups"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "organisationUnitLevels": {
            "items": {
              "maxProperties": 20,
              "minProperties": 0,
              "properties": {
                "access": {
                  "maxProperties": 6,
                  "minProperties": 1,
                  "properties": {
                    "delete": {
                      "$ref": "#/components/schemas/delete"
                    },
                    "externalize": {
                      "$ref": "#/components/schemas/externalize"
                    },
                    "manage": {
                      "$ref": "#/components/schemas/manage"
                    },
                    "read": {
                      "$ref": "#/components/schemas/read"
                    },
                    "update": {
                      "$ref": "#/components/schemas/update"
                    },
                    "write": {
                      "$ref": "#/components/schemas/write"
                    }
                  },
                  "readOnly": true,
                  "required": [
                    "delete",
                    "externalize",
                    "manage",
                    "read",
                    "update",
                    "write"
                  ],
                  "type": "object"
                },
                "attributeValues": {
                  "items": {
                    "properties": {
                      "attribute": {
                        "format": "uid",
                        "maxLength": 255,
                        "readOnly": false,
                        "type": "string"
                      },
                      "created": {
                        "$ref": "#/components/schemas/created"
                      },
                      "lastUpdated": {
                        "$ref": "#/components/schemas/lastUpdated"
                      },
                      "value": {
                        "$ref": "#/components/schemas/value"
                      }
                    },
                    "required": [
                      "attribute"
                    ]
                  },
                  "maxItems": 2147483647,
                  "minItems": 0,
                  "type": "array"
                },
                "code": {
                  "$ref": "#/components/schemas/code"
                },
                "created": {
                  "$ref": "#/components/schemas/created"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "externalAccess": {
                  "$ref": "#/components/schemas/externalAccess"
                },
                "favorite": {
                  "type": "boolean"
                },
                "favorites": {
                  "items": {
                    "$ref": "#/components/schemas/favorite"
                  },
                  "maxItems": 2147483647,
                  "minItems": 0,
                  "type": "array"
                },
                "href": {
                  "$ref": "#/components/schemas/href"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "lastUpdated": {
                  "$ref": "#/components/schemas/lastUpdated"
                },
                "lastUpdatedBy": {
                  "$ref": "#/components/schemas/lastUpdatedBy"
                },
                "level": {
                  "$ref": "#/components/schemas/level"
                },
                "name": {
                  "$ref": "#/components/schemas/name"
                },
                "offlineLevels": {
                  "$ref": "#/components/schemas/offlineLevels"
                },
                "publicAccess": {
                  "$ref": "#/components/schemas/publicAccess"
                },
                "translations": {
                  "items": {
                    "properties": {
                      "locale": {
                        "$ref": "#/components/schemas/locale"
                      },
                      "property": {
                        "$ref": "#/components/schemas/property"
                      },
                      "value": {
                        "$ref": "#/components/schemas/value"
                      }
                    }
                  },
                  "maxItems": 2147483647,
                  "minItems": 0,
                  "type": "array"
                },
                "user": {
                  "format": "uid",
                  "maxLength": 11,
                  "minLength": 11,
                  "type": "string"
                },
                "userAccesses": {
                  "items": {
                    "properties": {
                      "access": {
                        "format": "access",
                        "maxLength": 255,
                        "minLength": 0,
                        "readOnly": false,
                        "type": "string"
                      },
                      "displayName": {
                        "$ref": "#/components/schemas/displayName"
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "userUid": {
                        "$ref": "#/components/schemas/userUid"
                      }
                    }
                  },
                  "maxItems": 2147483647,
                  "minItems": 0,
                  "type": "array"
                },
                "userGroupAccesses": {
                  "items": {
                    "properties": {
                      "access": {
                        "format": "access",
                        "maxLength": 255,
                        "minLength": 0,
                        "readOnly": false,
                        "type": "string"
                      },
                      "displayName": {
                        "$ref": "#/components/schemas/displayName"
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "userGroupUid": {
                        "$ref": "#/components/schemas/userGroupUid"
                      }
                    }
                  },
                  "maxItems": 2147483647,
                  "minItems": 0,
                  "type": "array"
                }
              },
              "required": [
                "level",
                "name"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "organisationUnits": {
            "items": {
              "maxProperties": 1,
              "minProperties": 0,
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/id"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "outputType": {
            "$ref": "#/components/schemas/outputType"
          },
          "parentGraphMap": {
            "maxProperties": 1,
            "minProperties": 1,
            "readOnly": false,
            "type": "object"
          },
          "percentStackedValues": {
            "$ref": "#/components/schemas/percentStackedValues"
          },
          "periods": {
            "items": {
              "properties": {}
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "program": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "programIndicatorDimensions": {
            "items": {
              "properties": {}
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "programStage": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "programStatus": {
            "$ref": "#/components/schemas/programStatus"
          },
          "publicAccess": {
            "$ref": "#/components/schemas/publicAccess"
          },
          "rangeAxisDecimals": {
            "$ref": "#/components/schemas/rangeAxisDecimals"
          },
          "rangeAxisLabel": {
            "$ref": "#/components/schemas/rangeAxisLabel"
          },
          "rangeAxisMaxValue": {
            "$ref": "#/components/schemas/rangeAxisMaxValue"
          },
          "rangeAxisMinValue": {
            "$ref": "#/components/schemas/rangeAxisMinValue"
          },
          "rangeAxisSteps": {
            "$ref": "#/components/schemas/rangeAxisSteps"
          },
          "regressionType": {
            "$ref": "#/components/schemas/regressionType"
          },
          "relativePeriods": {
            "maxProperties": 39,
            "minProperties": 1,
            "properties": {
              "biMonthsThisYear": {
                "$ref": "#/components/schemas/biMonthsThisYear"
              },
              "last12Months": {
                "$ref": "#/components/schemas/last12Months"
              },
              "last12Weeks": {
                "$ref": "#/components/schemas/last12Weeks"
              },
              "last14Days": {
                "$ref": "#/components/schemas/last14Days"
              },
              "last2SixMonths": {
                "$ref": "#/components/schemas/last2SixMonths"
              },
              "last3Days": {
                "$ref": "#/components/schemas/last3Days"
              },
              "last3Months": {
                "$ref": "#/components/schemas/last3Months"
              },
              "last4BiWeeks": {
                "$ref": "#/components/schemas/last4BiWeeks"
              },
              "last4Quarters": {
                "$ref": "#/components/schemas/last4Quarters"
              },
              "last4Weeks": {
                "$ref": "#/components/schemas/last4Weeks"
              },
              "last52Weeks": {
                "$ref": "#/components/schemas/last52Weeks"
              },
              "last5FinancialYears": {
                "$ref": "#/components/schemas/last5FinancialYears"
              },
              "last5Years": {
                "$ref": "#/components/schemas/last5Years"
              },
              "last6BiMonths": {
                "$ref": "#/components/schemas/last6BiMonths"
              },
              "last6Months": {
                "$ref": "#/components/schemas/last6Months"
              },
              "last7Days": {
                "$ref": "#/components/schemas/last7Days"
              },
              "lastBiWeek": {
                "$ref": "#/components/schemas/lastBiWeek"
              },
              "lastBimonth": {
                "$ref": "#/components/schemas/lastBimonth"
              },
              "lastFinancialYear": {
                "$ref": "#/components/schemas/lastFinancialYear"
              },
              "lastMonth": {
                "$ref": "#/components/schemas/lastMonth"
              },
              "lastQuarter": {
                "$ref": "#/components/schemas/lastQuarter"
              },
              "lastSixMonth": {
                "$ref": "#/components/schemas/lastSixMonth"
              },
              "lastWeek": {
                "$ref": "#/components/schemas/lastWeek"
              },
              "lastYear": {
                "$ref": "#/components/schemas/lastYear"
              },
              "monthsLastYear": {
                "$ref": "#/components/schemas/monthsLastYear"
              },
              "monthsThisYear": {
                "$ref": "#/components/schemas/monthsThisYear"
              },
              "quartersLastYear": {
                "$ref": "#/components/schemas/quartersLastYear"
              },
              "quartersThisYear": {
                "$ref": "#/components/schemas/quartersThisYear"
              },
              "thisBiWeek": {
                "$ref": "#/components/schemas/thisBiWeek"
              },
              "thisBimonth": {
                "$ref": "#/components/schemas/thisBimonth"
              },
              "thisDay": {
                "$ref": "#/components/schemas/thisDay"
              },
              "thisFinancialYear": {
                "$ref": "#/components/schemas/thisFinancialYear"
              },
              "thisMonth": {
                "$ref": "#/components/schemas/thisMonth"
              },
              "thisQuarter": {
                "$ref": "#/components/schemas/thisQuarter"
              },
              "thisSixMonth": {
                "$ref": "#/components/schemas/thisSixMonth"
              },
              "thisWeek": {
                "$ref": "#/components/schemas/thisWeek"
              },
              "thisYear": {
                "$ref": "#/components/schemas/thisYear"
              },
              "weeksThisYear": {
                "$ref": "#/components/schemas/weeksThisYear"
              },
              "yesterday": {
                "$ref": "#/components/schemas/yesterday"
              }
            },
            "readOnly": false,
            "required": [
              "biMonthsThisYear",
              "last12Months",
              "last12Weeks",
              "last14Days",
              "last2SixMonths",
              "last3Days",
              "last3Months",
              "last4BiWeeks",
              "last4Quarters",
              "last4Weeks",
              "last52Weeks",
              "last5FinancialYears",
              "last5Years",
              "last6BiMonths",
              "last6Months",
              "last7Days",
              "lastBiWeek",
              "lastBimonth",
              "lastFinancialYear",
              "lastMonth",
              "lastQuarter",
              "lastSixMonth",
              "lastWeek",
              "lastYear",
              "monthsLastYear",
              "monthsThisYear",
              "quartersLastYear",
              "quartersThisYear",
              "thisBiWeek",
              "thisBimonth",
              "thisDay",
              "thisFinancialYear",
              "thisMonth",
              "thisQuarter",
              "thisSixMonth",
              "thisWeek",
              "thisYear",
              "weeksThisYear",
              "yesterday"
            ],
            "type": "object"
          },
          "rowDimensions": {
            "items": {
              "example": "m",
              "format": "dimension",
              "maxLength": 11,
              "minLength": 2,
              "type": "string"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "rows": {
            "items": {
              "properties": {}
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "shortName": {
            "$ref": "#/components/schemas/shortName"
          },
          "showData": {
            "$ref": "#/components/schemas/showData"
          },
          "sortOrder": {
            "$ref": "#/components/schemas/sortOrder"
          },
          "startDate": {
            "$ref": "#/components/schemas/startDate"
          },
          "subscribed": {
            "$ref": "#/components/schemas/subscribed"
          },
          "subscriber": {
            "items": {
              "format": "general",
              "maxLength": 255,
              "minLength": 1,
              "type": "string"
            },
            "maxItems": 255,
            "minItems": 0,
            "readOnly": false,
            "type": "array"
          },
          "subtitle": {
            "$ref": "#/components/schemas/subtitle"
          },
          "targetLineLabel": {
            "$ref": "#/components/schemas/targetLineLabel"
          },
          "targetLineValue": {
            "$ref": "#/components/schemas/targetLineValue"
          },
          "timeField": {
            "$ref": "#/components/schemas/timeField"
          },
          "title": {
            "$ref": "#/components/schemas/title"
          },
          "topLimit": {
            "$ref": "#/components/schemas/topLimit"
          },
          "translations": {
            "items": {
              "properties": {
                "locale": {
                  "$ref": "#/components/schemas/locale"
                },
                "property": {
                  "$ref": "#/components/schemas/property"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "type": {
            "enum": [
              "AREA",
              "BAR",
              "COLUMN",
              "GAUGE",
              "LINE",
              "PIE",
              "RADAR",
              "STACKED_BAR",
              "STACKED_COLUMN"
            ],
            "example": "STACKED_BAR",
            "format": "enum",
            "type": "string"
          },
          "user": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "userAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userUid": {
                  "$ref": "#/components/schemas/userUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "userGroupAccesses": {
            "items": {
              "maxProperties": 4,
              "minProperties": 0,
              "properties": {
                "access": {
                  "example": "r-r-----",
                  "format": "access",
                  "maxLength": 8,
                  "minLength": 8,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userGroupUid": {
                  "$ref": "#/components/schemas/userGroupUid"
                }
              },
              "required": [
                "access",
                "displayName",
                "id",
                "userGroupUid"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "userOrganisationUnit": {
            "$ref": "#/components/schemas/userOrganisationUnit"
          },
          "userOrganisationUnitChildren": {
            "$ref": "#/components/schemas/userOrganisationUnitChildren"
          },
          "userOrganisationUnitGrandChildren": {
            "$ref": "#/components/schemas/userOrganisationUnitGrandChildren"
          },
          "value": {
            "$ref": "#/components/schemas/value"
          },
          "yearlySeries": {
            "items": {
              "enum": [
                "LAST_YEAR",
                "THIS_YEAR"
              ],
              "example": "THIS_YEAR",
              "format": "enum",
              "type": "string"
            },
            "type": "array"
          }
        },
        "required": [
          "name",
          "program",
          "type"
        ],
        "type": "object",
        "x-status-dhis2": "template"
      },
      "eventClustering": {
        "type": "boolean"
      },
      "eventCoordinateField": {
        "example": "F3ogKBuviRA",
        "format": "uid",
        "maxLength": 255,
        "minLength": 0,
        "type": "string"
      },
      "eventPointColor": {
        "example": "myeve",
        "format": "general",
        "maxLength": 255,
        "minLength": 0,
        "type": "string"
      },
      "eventPointRadius": {
        "example": 0,
        "format": "int32",
        "maximum": 2147483647,
        "minimum": 0,
        "type": "integer"
      },
      "eventReport": {
        "maxProperties": 80,
        "minProperties": 0,
        "properties": {
          "access": {
            "maxProperties": 6,
            "minProperties": 1,
            "properties": {
              "delete": {
                "$ref": "#/components/schemas/delete"
              },
              "externalize": {
                "$ref": "#/components/schemas/externalize"
              },
              "manage": {
                "$ref": "#/components/schemas/manage"
              },
              "read": {
                "$ref": "#/components/schemas/read"
              },
              "update": {
                "$ref": "#/components/schemas/update"
              },
              "write": {
                "$ref": "#/components/schemas/write"
              }
            },
            "readOnly": true,
            "required": [
              "delete",
              "externalize",
              "manage",
              "read",
              "update",
              "write"
            ],
            "type": "object"
          },
          "aggregationType": {
            "enum": [
              "AVERAGE",
              "AVERAGE_SUM_ORG_UNIT",
              "COUNT",
              "CUSTOM",
              "DEFAULT",
              "LAST",
              "LAST_AVERAGE_ORG_UNIT",
              "MAX",
              "MIN",
              "NONE",
              "STDDEV",
              "SUM",
              "VARIANCE"
            ],
            "example": "AVERAGE",
            "format": "enum",
            "type": "string"
          },
          "attributeDimensions": {
            "items": {
              "maxProperties": 1,
              "minProperties": 0,
              "properties": {
                "attribute": {
                  "maxProperties": 1,
                  "minProperties": 0,
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    }
                  },
                  "required": [
                    "id"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "attribute"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "attributeValueDimension": {
            "$ref": "#/components/schemas/attributeValueDimension"
          },
          "attributeValues": {
            "items": {
              "properties": {
                "attribute": {
                  "format": "uid",
                  "maxLength": 255,
                  "readOnly": false,
                  "type": "string"
                },
                "created": {
                  "$ref": "#/components/schemas/created"
                },
                "lastUpdated": {
                  "$ref": "#/components/schemas/lastUpdated"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              },
              "required": [
                "attribute"
              ]
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "categoryDimensions": {
            "items": {
              "maxProperties": 2,
              "minProperties": 0,
              "properties": {
                "category": {
                  "maxProperties": 1,
                  "minProperties": 0,
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    }
                  },
                  "required": [
                    "id"
                  ],
                  "type": "object"
                },
                "categoryOptions": {
                  "items": {
                    "maxProperties": 1,
                    "minProperties": 0,
                    "properties": {
                      "id": {
                        "$ref": "#/components/schemas/id"
                      }
                    },
                    "required": [
                      "id"
                    ],
                    "type": "object"
                  },
                  "maxItems": 2147483647,
                  "minItems": 0,
                  "type": "array"
                }
              },
              "required": [
                "category",
                "categoryOptions"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "categoryOptionGroupSetDimensions": {
            "items": {
              "maxProperties": 2,
              "minProperties": 0,
              "properties": {
                "categoryOptionGroupSet": {
                  "maxProperties": 1,
                  "minProperties": 0,
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    }
                  },
                  "required": [
                    "id"
                  ],
                  "type": "object"
                },
                "categoryOptionGroups": {
                  "items": {
                    "maxProperties": 1,
                    "minProperties": 0,
                    "properties": {
                      "id": {
                        "$ref": "#/components/schemas/id"
                      }
                    },
                    "required": [
                      "id"
                    ],
                    "type": "object"
                  },
                  "maxItems": 2147483647,
                  "minItems": 0,
                  "type": "array"
                }
              },
              "required": [
                "categoryOptionGroupSet",
                "categoryOptionGroups"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "code": {
            "$ref": "#/components/schemas/code"
          },
          "colSubTotals": {
            "$ref": "#/components/schemas/colSubTotals"
          },
          "colTotals": {
            "$ref": "#/components/schemas/colTotals"
          },
          "collapseDataDimensions": {
            "$ref": "#/components/schemas/collapseDataDimensions"
          },
          "columnDimensions": {
            "items": {
              "example": "m",
              "format": "dimension",
              "maxLength": 255,
              "minLength": 1,
              "type": "string"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "columns": {
            "items": {
              "properties": {}
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "completedOnly": {
            "$ref": "#/components/schemas/completedOnly"
          },
          "created": {
            "$ref": "#/components/schemas/created"
          },
          "dataDimensionItems": {
            "items": {
              "properties": {}
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "dataElementDimensions": {
            "items": {
              "maxProperties": 3,
              "minProperties": 0,
              "properties": {
                "dataElement": {
                  "maxProperties": 1,
                  "minProperties": 0,
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    }
                  },
                  "required": [
                    "id"
                  ],
                  "type": "object"
                },
                "filter": {
                  "example": "myfilter",
                  "format": "general",
                  "maxLength": 255,
                  "minLength": 1,
                  "type": "string"
                },
                "legendSet": {
                  "maxProperties": 1,
                  "minProperties": 0,
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    }
                  },
                  "required": [
                    "id"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "dataElement"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "dataElementGroupSetDimensions": {
            "items": {
              "properties": {}
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "dataElementValueDimension": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "dataType": {
            "$ref": "#/components/schemas/dataType"
          },
          "description": {
            "$ref": "#/components/schemas/description"
          },
          "digitGroupSeparator": {
            "enum": [
              "COMMA",
              "NONE",
              "SPACE"
            ],
            "example": "SPACE",
            "format": "enum",
            "type": "string"
          },
          "displayDensity": {
            "$ref": "#/components/schemas/displayDensity"
          },
          "displayDescription": {
            "$ref": "#/components/schemas/displayDescription"
          },
          "displayName": {
            "$ref": "#/components/schemas/displayName"
          },
          "displayShortName": {
            "$ref": "#/components/schemas/displayShortName"
          },
          "endDate": {
            "$ref": "#/components/schemas/endDate"
          },
          "eventStatus": {
            "enum": [
              "ACTIVE",
              "COMPLETED",
              "OVERDUE",
              "SCHEDULE",
              "SKIPPED",
              "VISITED"
            ],
            "example": "ACTIVE",
            "format": "enum",
            "type": "string"
          },
          "externalAccess": {
            "$ref": "#/components/schemas/externalAccess"
          },
          "favorite": {
            "type": "boolean"
          },
          "favorites": {
            "items": {
              "$ref": "#/components/schemas/favorite"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "filterDimensions": {
            "items": {
              "example": "fWIAEtYVEGk",
              "format": "dimension",
              "maxLength": 11,
              "minLength": 2,
              "type": "string"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "filters": {
            "items": {
              "properties": {}
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "fontSize": {
            "$ref": "#/components/schemas/fontSize"
          },
          "hideEmptyRows": {
            "$ref": "#/components/schemas/hideEmptyRows"
          },
          "hideNaData": {
            "$ref": "#/components/schemas/hideNaData"
          },
          "hideSubtitle": {
            "$ref": "#/components/schemas/hideSubtitle"
          },
          "hideTitle": {
            "$ref": "#/components/schemas/hideTitle"
          },
          "href": {
            "$ref": "#/components/schemas/href"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "interpretations": {
            "items": {
              "maxProperties": 1,
              "minProperties": 0,
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/id"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "itemOrganisationUnitGroups": {
            "items": {
              "properties": {}
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "lastUpdated": {
            "$ref": "#/components/schemas/lastUpdated"
          },
          "lastUpdatedBy": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "name": {
            "$ref": "#/components/schemas/name"
          },
          "organisationUnitGroupSetDimensions": {
            "items": {
              "maxProperties": 2,
              "minProperties": 0,
              "properties": {
                "organisationUnitGroupSet": {
                  "maxProperties": 1,
                  "minProperties": 0,
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    }
                  },
                  "required": [
                    "id"
                  ],
                  "type": "object"
                },
                "organisationUnitGroups": {
                  "items": {
                    "maxProperties": 1,
                    "minProperties": 0,
                    "properties": {
                      "id": {
                        "$ref": "#/components/schemas/id"
                      }
                    },
                    "required": [
                      "id"
                    ],
                    "type": "object"
                  },
                  "maxItems": 2147483647,
                  "minItems": 0,
                  "type": "array"
                }
              },
              "required": [
                "organisationUnitGroupSet",
                "organisationUnitGroups"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "organisationUnitLevels": {
            "items": {
              "maxProperties": 20,
              "minProperties": 0,
              "properties": {
                "access": {
                  "maxProperties": 6,
                  "minProperties": 1,
                  "properties": {
                    "delete": {
                      "$ref": "#/components/schemas/delete"
                    },
                    "externalize": {
                      "$ref": "#/components/schemas/externalize"
                    },
                    "manage": {
                      "$ref": "#/components/schemas/manage"
                    },
                    "read": {
                      "$ref": "#/components/schemas/read"
                    },
                    "update": {
                      "$ref": "#/components/schemas/update"
                    },
                    "write": {
                      "$ref": "#/components/schemas/write"
                    }
                  },
                  "readOnly": true,
                  "required": [
                    "delete",
                    "externalize",
                    "manage",
                    "read",
                    "update",
                    "write"
                  ],
                  "type": "object"
                },
                "attributeValues": {
                  "items": {
                    "properties": {
                      "attribute": {
                        "format": "uid",
                        "maxLength": 255,
                        "readOnly": false,
                        "type": "string"
                      },
                      "created": {
                        "$ref": "#/components/schemas/created"
                      },
                      "lastUpdated": {
                        "$ref": "#/components/schemas/lastUpdated"
                      },
                      "value": {
                        "$ref": "#/components/schemas/value"
                      }
                    },
                    "required": [
                      "attribute"
                    ]
                  },
                  "maxItems": 2147483647,
                  "minItems": 0,
                  "type": "array"
                },
                "code": {
                  "$ref": "#/components/schemas/code"
                },
                "created": {
                  "$ref": "#/components/schemas/created"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "externalAccess": {
                  "$ref": "#/components/schemas/externalAccess"
                },
                "favorite": {
                  "type": "boolean"
                },
                "favorites": {
                  "items": {
                    "$ref": "#/components/schemas/favorite"
                  },
                  "maxItems": 2147483647,
                  "minItems": 0,
                  "type": "array"
                },
                "href": {
                  "$ref": "#/components/schemas/href"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "lastUpdated": {
                  "$ref": "#/components/schemas/lastUpdated"
                },
                "lastUpdatedBy": {
                  "$ref": "#/components/schemas/lastUpdatedBy"
                },
                "level": {
                  "$ref": "#/components/schemas/level"
                },
                "name": {
                  "$ref": "#/components/schemas/name"
                },
                "offlineLevels": {
                  "$ref": "#/components/schemas/offlineLevels"
                },
                "publicAccess": {
                  "$ref": "#/components/schemas/publicAccess"
                },
                "translations": {
                  "items": {
                    "properties": {
                      "locale": {
                        "$ref": "#/components/schemas/locale"
                      },
                      "property": {
                        "$ref": "#/components/schemas/property"
                      },
                      "value": {
                        "$ref": "#/components/schemas/value"
                      }
                    }
                  },
                  "maxItems": 2147483647,
                  "minItems": 0,
                  "type": "array"
                },
                "user": {
                  "format": "uid",
                  "maxLength": 11,
                  "minLength": 11,
                  "type": "string"
                },
                "userAccesses": {
                  "items": {
                    "properties": {
                      "access": {
                        "format": "access",
                        "maxLength": 255,
                        "minLength": 0,
                        "readOnly": false,
                        "type": "string"
                      },
                      "displayName": {
                        "$ref": "#/components/schemas/displayName"
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "userUid": {
                        "$ref": "#/components/schemas/userUid"
                      }
                    }
                  },
                  "maxItems": 2147483647,
                  "minItems": 0,
                  "type": "array"
                },
                "userGroupAccesses": {
                  "items": {
                    "properties": {
                      "access": {
                        "format": "access",
                        "maxLength": 255,
                        "minLength": 0,
                        "readOnly": false,
                        "type": "string"
                      },
                      "displayName": {
                        "$ref": "#/components/schemas/displayName"
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "userGroupUid": {
                        "$ref": "#/components/schemas/userGroupUid"
                      }
                    }
                  },
                  "maxItems": 2147483647,
                  "minItems": 0,
                  "type": "array"
                }
              },
              "required": [
                "level",
                "name"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "organisationUnits": {
            "items": {
              "maxProperties": 1,
              "minProperties": 0,
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/id"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "outputType": {
            "$ref": "#/components/schemas/outputType"
          },
          "parentGraphMap": {
            "maxProperties": 1,
            "minProperties": 1,
            "readOnly": false,
            "type": "object"
          },
          "periods": {
            "items": {
              "properties": {}
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "program": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "programIndicatorDimensions": {
            "items": {
              "maxProperties": 1,
              "minProperties": 0,
              "properties": {
                "programIndicator": {
                  "maxProperties": 1,
                  "minProperties": 0,
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    }
                  },
                  "required": [
                    "id"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "programIndicator"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "programStage": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "programStatus": {
            "enum": [
              "ACTIVE",
              "CANCELLED",
              "COMPLETED"
            ],
            "example": "ACTIVE",
            "format": "enum",
            "type": "string"
          },
          "publicAccess": {
            "$ref": "#/components/schemas/publicAccess"
          },
          "relativePeriods": {
            "maxProperties": 39,
            "minProperties": 1,
            "properties": {
              "biMonthsThisYear": {
                "$ref": "#/components/schemas/biMonthsThisYear"
              },
              "last12Months": {
                "$ref": "#/components/schemas/last12Months"
              },
              "last12Weeks": {
                "$ref": "#/components/schemas/last12Weeks"
              },
              "last14Days": {
                "$ref": "#/components/schemas/last14Days"
              },
              "last2SixMonths": {
                "$ref": "#/components/schemas/last2SixMonths"
              },
              "last3Days": {
                "$ref": "#/components/schemas/last3Days"
              },
              "last3Months": {
                "$ref": "#/components/schemas/last3Months"
              },
              "last4BiWeeks": {
                "$ref": "#/components/schemas/last4BiWeeks"
              },
              "last4Quarters": {
                "$ref": "#/components/schemas/last4Quarters"
              },
              "last4Weeks": {
                "$ref": "#/components/schemas/last4Weeks"
              },
              "last52Weeks": {
                "$ref": "#/components/schemas/last52Weeks"
              },
              "last5FinancialYears": {
                "$ref": "#/components/schemas/last5FinancialYears"
              },
              "last5Years": {
                "$ref": "#/components/schemas/last5Years"
              },
              "last6BiMonths": {
                "$ref": "#/components/schemas/last6BiMonths"
              },
              "last6Months": {
                "$ref": "#/components/schemas/last6Months"
              },
              "last7Days": {
                "$ref": "#/components/schemas/last7Days"
              },
              "lastBiWeek": {
                "$ref": "#/components/schemas/lastBiWeek"
              },
              "lastBimonth": {
                "$ref": "#/components/schemas/lastBimonth"
              },
              "lastFinancialYear": {
                "$ref": "#/components/schemas/lastFinancialYear"
              },
              "lastMonth": {
                "$ref": "#/components/schemas/lastMonth"
              },
              "lastQuarter": {
                "$ref": "#/components/schemas/lastQuarter"
              },
              "lastSixMonth": {
                "$ref": "#/components/schemas/lastSixMonth"
              },
              "lastWeek": {
                "$ref": "#/components/schemas/lastWeek"
              },
              "lastYear": {
                "$ref": "#/components/schemas/lastYear"
              },
              "monthsLastYear": {
                "$ref": "#/components/schemas/monthsLastYear"
              },
              "monthsThisYear": {
                "$ref": "#/components/schemas/monthsThisYear"
              },
              "quartersLastYear": {
                "$ref": "#/components/schemas/quartersLastYear"
              },
              "quartersThisYear": {
                "$ref": "#/components/schemas/quartersThisYear"
              },
              "thisBiWeek": {
                "$ref": "#/components/schemas/thisBiWeek"
              },
              "thisBimonth": {
                "$ref": "#/components/schemas/thisBimonth"
              },
              "thisDay": {
                "$ref": "#/components/schemas/thisDay"
              },
              "thisFinancialYear": {
                "$ref": "#/components/schemas/thisFinancialYear"
              },
              "thisMonth": {
                "$ref": "#/components/schemas/thisMonth"
              },
              "thisQuarter": {
                "$ref": "#/components/schemas/thisQuarter"
              },
              "thisSixMonth": {
                "$ref": "#/components/schemas/thisSixMonth"
              },
              "thisWeek": {
                "$ref": "#/components/schemas/thisWeek"
              },
              "thisYear": {
                "$ref": "#/components/schemas/thisYear"
              },
              "weeksThisYear": {
                "$ref": "#/components/schemas/weeksThisYear"
              },
              "yesterday": {
                "$ref": "#/components/schemas/yesterday"
              }
            },
            "readOnly": false,
            "required": [
              "biMonthsThisYear",
              "last12Months",
              "last12Weeks",
              "last14Days",
              "last2SixMonths",
              "last3Days",
              "last3Months",
              "last4BiWeeks",
              "last4Quarters",
              "last4Weeks",
              "last52Weeks",
              "last5FinancialYears",
              "last5Years",
              "last6BiMonths",
              "last6Months",
              "last7Days",
              "lastBiWeek",
              "lastBimonth",
              "lastFinancialYear",
              "lastMonth",
              "lastQuarter",
              "lastSixMonth",
              "lastWeek",
              "lastYear",
              "monthsLastYear",
              "monthsThisYear",
              "quartersLastYear",
              "quartersThisYear",
              "thisBiWeek",
              "thisBimonth",
              "thisDay",
              "thisFinancialYear",
              "thisMonth",
              "thisQuarter",
              "thisSixMonth",
              "thisWeek",
              "thisYear",
              "weeksThisYear",
              "yesterday"
            ],
            "type": "object"
          },
          "rowDimensions": {
            "items": {
              "example": "cejWyOfXge6",
              "format": "dimension",
              "maxLength": 11,
              "minLength": 2,
              "type": "string"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "rowSubTotals": {
            "$ref": "#/components/schemas/rowSubTotals"
          },
          "rowTotals": {
            "$ref": "#/components/schemas/rowTotals"
          },
          "rows": {
            "items": {
              "properties": {}
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "shortName": {
            "$ref": "#/components/schemas/shortName"
          },
          "showDimensionLabels": {
            "$ref": "#/components/schemas/showDimensionLabels"
          },
          "showHierarchy": {
            "$ref": "#/components/schemas/showHierarchy"
          },
          "sortOrder": {
            "$ref": "#/components/schemas/sortOrder"
          },
          "startDate": {
            "$ref": "#/components/schemas/startDate"
          },
          "subscribed": {
            "$ref": "#/components/schemas/subscribed"
          },
          "subscribers": {
            "items": {
              "properties": {}
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "subtitle": {
            "$ref": "#/components/schemas/subtitle"
          },
          "timeField": {
            "$ref": "#/components/schemas/timeField"
          },
          "title": {
            "$ref": "#/components/schemas/title"
          },
          "topLimit": {
            "$ref": "#/components/schemas/topLimit"
          },
          "translations": {
            "items": {
              "properties": {
                "locale": {
                  "$ref": "#/components/schemas/locale"
                },
                "property": {
                  "$ref": "#/components/schemas/property"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "user": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "userAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userUid": {
                  "$ref": "#/components/schemas/userUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "userGroupAccesses": {
            "items": {
              "maxProperties": 4,
              "minProperties": 0,
              "properties": {
                "access": {
                  "example": "r-r-----",
                  "format": "access",
                  "maxLength": 8,
                  "minLength": 8,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userGroupUid": {
                  "$ref": "#/components/schemas/userGroupUid"
                }
              },
              "required": [
                "access",
                "displayName",
                "id",
                "userGroupUid"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "userOrganisationUnit": {
            "$ref": "#/components/schemas/userOrganisationUnit"
          },
          "userOrganisationUnitChildren": {
            "$ref": "#/components/schemas/userOrganisationUnitChildren"
          },
          "userOrganisationUnitGrandChildren": {
            "$ref": "#/components/schemas/userOrganisationUnitGrandChildren"
          },
          "value": {
            "$ref": "#/components/schemas/value"
          }
        },
        "required": [
          "name",
          "program"
        ],
        "type": "object",
        "x-status-dhis2": "template"
      },
      "eventStatus": {
        "enum": [
          "ACTIVE",
          "COMPLETED",
          "OVERDUE",
          "SCHEDULE",
          "SKIPPED",
          "VISITED"
        ],
        "format": "enum",
        "type": "string"
      },
      "executionDateLabel": {
        "example": "myexecutionD",
        "format": "general",
        "maxLength": 255,
        "minLength": 2,
        "type": "string"
      },
      "expiryDays": {
        "example": 0,
        "format": "int32",
        "maximum": 2147483647,
        "minimum": -2147483648,
        "type": "integer"
      },
      "expiryPeriodType": {
        "properties": {}
      },
      "expression": {
        "example": "myexpression",
        "format": "general",
        "maxLength": 255,
        "minLength": 0,
        "type": "string"
      },
      "external": {
        "type": "boolean"
      },
      "externalAccess": {
        "readOnly": false,
        "type": "boolean"
      },
      "externalAuth": {
        "type": "boolean"
      },
      "externalMapLayer": {
        "maxProperties": 26,
        "minProperties": 0,
        "properties": {
          "access": {
            "maxProperties": 6,
            "minProperties": 1,
            "properties": {
              "delete": {
                "$ref": "#/components/schemas/delete"
              },
              "externalize": {
                "$ref": "#/components/schemas/externalize"
              },
              "manage": {
                "$ref": "#/components/schemas/manage"
              },
              "read": {
                "$ref": "#/components/schemas/read"
              },
              "update": {
                "$ref": "#/components/schemas/update"
              },
              "write": {
                "$ref": "#/components/schemas/write"
              }
            },
            "readOnly": true,
            "required": [
              "delete",
              "externalize",
              "manage",
              "read",
              "update",
              "write"
            ],
            "type": "object"
          },
          "attributeValues": {
            "items": {
              "properties": {
                "attribute": {
                  "format": "uid",
                  "maxLength": 255,
                  "readOnly": false,
                  "type": "string"
                },
                "created": {
                  "$ref": "#/components/schemas/created"
                },
                "lastUpdated": {
                  "$ref": "#/components/schemas/lastUpdated"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              },
              "required": [
                "attribute"
              ]
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "attribution": {
            "$ref": "#/components/schemas/attribution"
          },
          "code": {
            "$ref": "#/components/schemas/code"
          },
          "created": {
            "$ref": "#/components/schemas/created"
          },
          "displayName": {
            "$ref": "#/components/schemas/displayName"
          },
          "externalAccess": {
            "$ref": "#/components/schemas/externalAccess"
          },
          "favorite": {
            "type": "boolean"
          },
          "favorites": {
            "items": {
              "$ref": "#/components/schemas/favorite"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "href": {
            "$ref": "#/components/schemas/href"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "imageFormat": {
            "$ref": "#/components/schemas/imageFormat"
          },
          "lastUpdated": {
            "$ref": "#/components/schemas/lastUpdated"
          },
          "lastUpdatedBy": {
            "$ref": "#/components/schemas/lastUpdatedBy"
          },
          "layers": {
            "$ref": "#/components/schemas/layers"
          },
          "legendSet": {
            "format": "uid",
            "maxLength": 11,
            "minLength": 11,
            "type": "string",
            "x-association": "true"
          },
          "legendSetUrl": {
            "$ref": "#/components/schemas/legendSetUrl"
          },
          "mapLayerPosition": {
            "$ref": "#/components/schemas/mapLayerPosition"
          },
          "mapService": {
            "$ref": "#/components/schemas/mapService"
          },
          "name": {
            "$ref": "#/components/schemas/name"
          },
          "publicAccess": {
            "$ref": "#/components/schemas/publicAccess"
          },
          "translations": {
            "items": {
              "properties": {
                "locale": {
                  "$ref": "#/components/schemas/locale"
                },
                "property": {
                  "$ref": "#/components/schemas/property"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "url": {
            "$ref": "#/components/schemas/url"
          },
          "user": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "userAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userUid": {
                  "$ref": "#/components/schemas/userUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "userGroupAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userGroupUid": {
                  "$ref": "#/components/schemas/userGroupUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          }
        },
        "required": [
          "imageFormat",
          "mapLayerPosition",
          "mapService",
          "name",
          "url"
        ],
        "type": "object",
        "x-status-dhis2": "template"
      },
      "externalize": {
        "default": false,
        "type": "boolean"
      },
      "facebookMessenger": {
        "example": "myfacebook",
        "format": "general",
        "maxLength": 255,
        "minLength": 0,
        "type": "string"
      },
      "factor": {
        "example": 1,
        "format": "int32",
        "maximum": 2147483647,
        "minimum": 0,
        "type": "integer"
      },
      "favorite": {
        "type": "boolean"
      },
      "featureType": {
        "enum": [
          "MULTI_POLYGON",
          "NONE",
          "POINT",
          "POLYGON",
          "SYMBOL"
        ],
        "example": "NONE",
        "format": "enum",
        "type": "string"
      },
      "fieldCombinationRequired": {
        "type": "boolean"
      },
      "filter": {
        "properties": {}
      },
      "firstName": {
        "example": "myf",
        "format": "general",
        "maxLength": 160,
        "minLength": 2,
        "type": "string"
      },
      "followUp": {
        "type": "boolean"
      },
      "followup": {
        "default": false,
        "readOnly": false,
        "type": "boolean"
      },
      "fontSize": {
        "enum": [
          "LARGE",
          "NORMAL",
          "SMALL"
        ],
        "example": "NORMAL",
        "format": "enum",
        "type": "string"
      },
      "formName": {
        "example": "myformName",
        "format": "general",
        "maxLength": 2147483647,
        "type": "string"
      },
      "formType": {
        "enum": [
          "CUSTOM",
          "DEFAULT",
          "SECTION",
          "SECTION_MULTIORG"
        ],
        "example": "CUSTOM",
        "format": "enum",
        "readOnly": true,
        "type": "string"
      },
      "format": {
        "example": 2,
        "format": "int32",
        "maximum": 2147483647,
        "minimum": 0,
        "type": "integer"
      },
      "fromConstraint": {
        "properties": {}
      },
      "gender": {
        "example": "mygender",
        "format": "general",
        "maxLength": 50,
        "minLength": 0,
        "type": "string"
      },
      "generated": {
        "example": null,
        "format": "boolean",
        "maxLength": 255,
        "readOnly": false,
        "type": "boolean"
      },
      "generatedByEnrollmentDate": {
        "type": "boolean"
      },
      "hashCode": {
        "example": "myhashCode",
        "format": "general",
        "maxLength": 50,
        "minLength": 0,
        "type": "string"
      },
      "height": {
        "format": "int64",
        "maxLength": 2147483647,
        "minLength": 0,
        "type": "integer",
        "x-association": "true"
      },
      "hidden": {
        "type": "boolean"
      },
      "hideDueDate": {
        "type": "boolean"
      },
      "hideEmptyColumns": {
        "type": "boolean"
      },
      "hideEmptyRowItems": {
        "enum": [
          "AFTER_LAST",
          "ALL",
          "BEFORE_FIRST",
          "BEFORE_FIRST_AFTER_LAST",
          "NONE"
        ],
        "example": "NONE",
        "format": "enum",
        "type": "string"
      },
      "hideEmptyRows": {
        "type": "boolean"
      },
      "hideLegend": {
        "type": "boolean"
      },
      "hideNaData": {
        "type": "boolean"
      },
      "hideSubtitle": {
        "type": "boolean"
      },
      "hideTitle": {
        "type": "boolean"
      },
      "href": {
        "format": "url",
        "maxLength": 2147483647,
        "minLength": 0,
        "readOnly": true,
        "type": "string"
      },
      "htmlCode": {
        "example": "myhtmlCode",
        "format": "general",
        "maxLength": 2147483647,
        "minLength": 0,
        "type": "string"
      },
      "httpStatus": {
        "description": "HTTP Status message for this response, see RFC 2616 (Section 10) for more information.",
        "maxLength": 255,
        "readOnly": true,
        "type": "string"
      },
      "httpStatusCode": {
        "description": "HTTP Status code for this response, see RFC 2616 (Section 10) for more information.",
        "maxLength": 255,
        "readOnly": true,
        "type": "string"
      },
      "icon": {
        "example": "myicon",
        "format": "general",
        "maxLength": 20,
        "minLength": 20,
        "type": "string"
      },
      "id": {
        "example": "NJnhOzjaLYk.qNCMOhkoQju",
        "maxLength": 2147483647,
        "minLength": 11,
        "readOnly": false,
        "type": "string"
      },
      "ignoreApproval": {
        "type": "boolean"
      },
      "ignoreOverdueEvents": {
        "type": "boolean"
      },
      "imageFormat": {
        "enum": [
          "JPG",
          "PNG"
        ],
        "example": "PNG",
        "format": "enum",
        "type": "string"
      },
      "importance": {
        "enum": [
          "HIGH",
          "LOW",
          "MEDIUM"
        ],
        "example": "MEDIUM",
        "format": "enum",
        "type": "string"
      },
      "inactive": {
        "example": null,
        "format": "boolean",
        "maxLength": 255,
        "readOnly": false,
        "type": "boolean"
      },
      "incidentDate": {
        "format": "date-time",
        "maxLength": 255,
        "readOnly": true,
        "type": "string"
      },
      "incidentDateLabel": {
        "example": "myincidentDa",
        "format": "general",
        "maxLength": 2147483647,
        "minLength": 2,
        "type": "string"
      },
      "includeSubhierarchyInAnalytics": {
        "type": "boolean"
      },
      "indicator": {
        "maxProperties": 40,
        "minProperties": 0,
        "properties": {
          "access": {
            "maxProperties": 6,
            "minProperties": 1,
            "properties": {
              "delete": {
                "$ref": "#/components/schemas/delete"
              },
              "externalize": {
                "$ref": "#/components/schemas/externalize"
              },
              "manage": {
                "$ref": "#/components/schemas/manage"
              },
              "read": {
                "$ref": "#/components/schemas/read"
              },
              "update": {
                "$ref": "#/components/schemas/update"
              },
              "write": {
                "$ref": "#/components/schemas/write"
              }
            },
            "readOnly": true,
            "required": [
              "delete",
              "externalize",
              "manage",
              "read",
              "update",
              "write"
            ],
            "type": "object"
          },
          "aggregateExportAttributeOptionCombo": {
            "$ref": "#/components/schemas/aggregateExportAttributeOptionCombo"
          },
          "aggregateExportCategoryOptionCombo": {
            "$ref": "#/components/schemas/aggregateExportCategoryOptionCombo"
          },
          "aggregationType": {
            "$ref": "#/components/schemas/aggregationType"
          },
          "annualized": {
            "$ref": "#/components/schemas/annualized"
          },
          "attributeValues": {
            "items": {
              "maxProperties": 4,
              "minProperties": 0,
              "properties": {
                "attribute": {
                  "maxProperties": 1,
                  "minProperties": 0,
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    }
                  },
                  "required": [
                    "id"
                  ],
                  "type": "object"
                },
                "created": {
                  "$ref": "#/components/schemas/created"
                },
                "lastUpdated": {
                  "$ref": "#/components/schemas/lastUpdated"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              },
              "required": [
                "attribute",
                "created",
                "lastUpdated",
                "value"
              ],
              "type": "object",
              "x-association": "true"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array",
            "x-association": "true"
          },
          "code": {
            "$ref": "#/components/schemas/code"
          },
          "created": {
            "$ref": "#/components/schemas/created"
          },
          "dataSets": {
            "items": {
              "maxProperties": 1,
              "minProperties": 0,
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/id"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "decimals": {
            "$ref": "#/components/schemas/decimals"
          },
          "denominator": {
            "$ref": "#/components/schemas/denominator"
          },
          "denominatorDescription": {
            "$ref": "#/components/schemas/denominatorDescription"
          },
          "description": {
            "$ref": "#/components/schemas/description"
          },
          "dimensionItem": {
            "$ref": "#/components/schemas/dimensionItem"
          },
          "dimensionItemType": {
            "enum": [
              "CATEGORY_OPTION",
              "CATEGORY_OPTION_GROUP",
              "DATA_ELEMENT",
              "DATA_ELEMENT_GROUP",
              "DATA_ELEMENT_OPERAND",
              "INDICATOR",
              "OPTION_GROUP",
              "ORGANISATION_UNIT",
              "ORGANISATION_UNIT_GROUP",
              "PERIOD",
              "PROGRAM_ATTRIBUTE",
              "PROGRAM_DATA_ELEMENT",
              "PROGRAM_INDICATOR",
              "REPORTING_RATE"
            ],
            "example": "INDICATOR",
            "format": "enum",
            "type": "string"
          },
          "displayDescription": {
            "$ref": "#/components/schemas/displayDescription"
          },
          "displayName": {
            "$ref": "#/components/schemas/displayName"
          },
          "displayShortName": {
            "$ref": "#/components/schemas/displayShortName"
          },
          "externalAccess": {
            "$ref": "#/components/schemas/externalAccess"
          },
          "favorite": {
            "type": "boolean"
          },
          "favorites": {
            "items": {
              "$ref": "#/components/schemas/favorite"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "formName": {
            "$ref": "#/components/schemas/formName"
          },
          "href": {
            "$ref": "#/components/schemas/href"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "indicatorGroups": {
            "items": {
              "maxProperties": 1,
              "minProperties": 0,
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/id"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "indicatorType": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "lastUpdated": {
            "$ref": "#/components/schemas/lastUpdated"
          },
          "lastUpdatedBy": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "legendSets": {
            "items": {
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/id"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": false,
            "type": "array",
            "x-association": "true"
          },
          "name": {
            "$ref": "#/components/schemas/name"
          },
          "numerator": {
            "$ref": "#/components/schemas/numerator"
          },
          "numeratorDescription": {
            "$ref": "#/components/schemas/numeratorDescription"
          },
          "publicAccess": {
            "$ref": "#/components/schemas/publicAccess"
          },
          "shortName": {
            "$ref": "#/components/schemas/shortName"
          },
          "style": {
            "maxProperties": 1,
            "minProperties": 1,
            "readOnly": false,
            "type": "object"
          },
          "translations": {
            "items": {
              "maxProperties": 3,
              "minProperties": 0,
              "properties": {
                "locale": {
                  "$ref": "#/components/schemas/locale"
                },
                "property": {
                  "enum": [
                    "DESCRIPTION",
                    "NAME",
                    "SHORT_NAME"
                  ],
                  "example": "DESCRIPTION",
                  "format": "enum",
                  "type": "string"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              },
              "required": [
                "locale",
                "property",
                "value"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "url": {
            "$ref": "#/components/schemas/url"
          },
          "user": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "userAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userUid": {
                  "$ref": "#/components/schemas/userUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "userGroupAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userGroupUid": {
                  "$ref": "#/components/schemas/userGroupUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          }
        },
        "required": [
          "denominator",
          "indicatorType",
          "name",
          "numerator",
          "shortName"
        ],
        "type": "object",
        "x-status-dhis2": "template"
      },
      "indicatorAttribute": {
        "type": "boolean"
      },
      "indicatorGroup": {
        "maxProperties": 2147483647,
        "minProperties": 0,
        "properties": {
          "access": {
            "maxProperties": 6,
            "minProperties": 1,
            "properties": {
              "delete": {
                "$ref": "#/components/schemas/delete"
              },
              "externalize": {
                "$ref": "#/components/schemas/externalize"
              },
              "manage": {
                "$ref": "#/components/schemas/manage"
              },
              "read": {
                "$ref": "#/components/schemas/read"
              },
              "update": {
                "$ref": "#/components/schemas/update"
              },
              "write": {
                "$ref": "#/components/schemas/write"
              }
            },
            "readOnly": true,
            "required": [
              "delete",
              "externalize",
              "manage",
              "read",
              "update",
              "write"
            ],
            "type": "object"
          },
          "attributeValues": {
            "items": {
              "properties": {
                "attribute": {
                  "format": "uid",
                  "maxLength": 255,
                  "readOnly": false,
                  "type": "string"
                },
                "created": {
                  "$ref": "#/components/schemas/created"
                },
                "lastUpdated": {
                  "$ref": "#/components/schemas/lastUpdated"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              },
              "required": [
                "attribute"
              ]
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "code": {
            "$ref": "#/components/schemas/code"
          },
          "created": {
            "$ref": "#/components/schemas/created"
          },
          "displayName": {
            "$ref": "#/components/schemas/displayName"
          },
          "externalAccess": {
            "$ref": "#/components/schemas/externalAccess"
          },
          "favorite": {
            "type": "boolean"
          },
          "favorites": {
            "items": {
              "$ref": "#/components/schemas/favorite"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "href": {
            "$ref": "#/components/schemas/href"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "indicatorGroupSet": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "indicators": {
            "items": {
              "maxProperties": 1,
              "minProperties": 0,
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/id"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "lastUpdated": {
            "$ref": "#/components/schemas/lastUpdated"
          },
          "lastUpdatedBy": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "name": {
            "$ref": "#/components/schemas/name"
          },
          "publicAccess": {
            "$ref": "#/components/schemas/publicAccess"
          },
          "translations": {
            "items": {
              "maxProperties": 3,
              "minProperties": 0,
              "properties": {
                "locale": {
                  "$ref": "#/components/schemas/locale"
                },
                "property": {
                  "enum": [
                    "NAME"
                  ],
                  "example": "NAME",
                  "format": "enum",
                  "type": "string"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              },
              "required": [
                "locale",
                "property",
                "value"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": true,
            "type": "array"
          },
          "user": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "userAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userUid": {
                  "$ref": "#/components/schemas/userUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "userGroupAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userGroupUid": {
                  "$ref": "#/components/schemas/userGroupUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          }
        },
        "required": [
          "name"
        ],
        "type": "object",
        "x-status-dhis2": "template"
      },
      "indicatorGroupAttribute": {
        "type": "boolean"
      },
      "indicatorGroupSet": {
        "maxProperties": 21,
        "minProperties": 0,
        "properties": {
          "access": {
            "maxProperties": 6,
            "minProperties": 1,
            "properties": {
              "delete": {
                "$ref": "#/components/schemas/delete"
              },
              "externalize": {
                "$ref": "#/components/schemas/externalize"
              },
              "manage": {
                "$ref": "#/components/schemas/manage"
              },
              "read": {
                "$ref": "#/components/schemas/read"
              },
              "update": {
                "$ref": "#/components/schemas/update"
              },
              "write": {
                "$ref": "#/components/schemas/write"
              }
            },
            "readOnly": true,
            "required": [
              "delete",
              "externalize",
              "manage",
              "read",
              "update",
              "write"
            ],
            "type": "object"
          },
          "attributeValues": {
            "items": {
              "properties": {
                "attribute": {
                  "format": "uid",
                  "maxLength": 255,
                  "readOnly": false,
                  "type": "string"
                },
                "created": {
                  "$ref": "#/components/schemas/created"
                },
                "lastUpdated": {
                  "$ref": "#/components/schemas/lastUpdated"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              },
              "required": [
                "attribute"
              ]
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "code": {
            "$ref": "#/components/schemas/code"
          },
          "compulsory": {
            "$ref": "#/components/schemas/compulsory"
          },
          "created": {
            "$ref": "#/components/schemas/created"
          },
          "description": {
            "$ref": "#/components/schemas/description"
          },
          "displayName": {
            "$ref": "#/components/schemas/displayName"
          },
          "externalAccess": {
            "$ref": "#/components/schemas/externalAccess"
          },
          "favorite": {
            "type": "boolean"
          },
          "favorites": {
            "items": {
              "$ref": "#/components/schemas/favorite"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "href": {
            "$ref": "#/components/schemas/href"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "indicatorGroups": {
            "items": {
              "maxProperties": 1,
              "minProperties": 0,
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/id"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "lastUpdated": {
            "$ref": "#/components/schemas/lastUpdated"
          },
          "lastUpdatedBy": {
            "$ref": "#/components/schemas/lastUpdatedBy"
          },
          "name": {
            "$ref": "#/components/schemas/name"
          },
          "publicAccess": {
            "$ref": "#/components/schemas/publicAccess"
          },
          "translations": {
            "items": {
              "properties": {
                "locale": {
                  "$ref": "#/components/schemas/locale"
                },
                "property": {
                  "$ref": "#/components/schemas/property"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "user": {
            "format": "uid",
            "maxLength": 11,
            "minLength": 11,
            "type": "string",
            "x-association": "true"
          },
          "userAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userUid": {
                  "$ref": "#/components/schemas/userUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "userGroupAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userGroupUid": {
                  "$ref": "#/components/schemas/userGroupUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          }
        },
        "required": [
          "name"
        ],
        "type": "object",
        "x-status-dhis2": "template"
      },
      "indicatorType": {
        "maxProperties": 20,
        "minProperties": 0,
        "properties": {
          "access": {
            "maxProperties": 6,
            "minProperties": 1,
            "properties": {
              "delete": {
                "$ref": "#/components/schemas/delete"
              },
              "externalize": {
                "$ref": "#/components/schemas/externalize"
              },
              "manage": {
                "$ref": "#/components/schemas/manage"
              },
              "read": {
                "$ref": "#/components/schemas/read"
              },
              "update": {
                "$ref": "#/components/schemas/update"
              },
              "write": {
                "$ref": "#/components/schemas/write"
              }
            },
            "readOnly": true,
            "required": [
              "delete",
              "externalize",
              "manage",
              "read",
              "update",
              "write"
            ],
            "type": "object"
          },
          "attributeValues": {
            "items": {
              "properties": {
                "attribute": {
                  "format": "uid",
                  "maxLength": 255,
                  "readOnly": false,
                  "type": "string"
                },
                "created": {
                  "$ref": "#/components/schemas/created"
                },
                "lastUpdated": {
                  "$ref": "#/components/schemas/lastUpdated"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              },
              "required": [
                "attribute"
              ]
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "code": {
            "$ref": "#/components/schemas/code"
          },
          "created": {
            "$ref": "#/components/schemas/created"
          },
          "displayName": {
            "$ref": "#/components/schemas/displayName"
          },
          "externalAccess": {
            "$ref": "#/components/schemas/externalAccess"
          },
          "factor": {
            "$ref": "#/components/schemas/factor"
          },
          "favorite": {
            "type": "boolean"
          },
          "favorites": {
            "items": {
              "$ref": "#/components/schemas/favorite"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "href": {
            "$ref": "#/components/schemas/href"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "lastUpdated": {
            "$ref": "#/components/schemas/lastUpdated"
          },
          "lastUpdatedBy": {
            "$ref": "#/components/schemas/lastUpdatedBy"
          },
          "name": {
            "$ref": "#/components/schemas/name"
          },
          "number": {
            "$ref": "#/components/schemas/number"
          },
          "publicAccess": {
            "$ref": "#/components/schemas/publicAccess"
          },
          "translations": {
            "items": {
              "maxProperties": 3,
              "minProperties": 0,
              "properties": {
                "locale": {
                  "$ref": "#/components/schemas/locale"
                },
                "property": {
                  "enum": [
                    "NAME"
                  ],
                  "example": "NAME",
                  "format": "enum",
                  "type": "string"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              },
              "required": [
                "locale",
                "property",
                "value"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "user": {
            "format": "uid",
            "maxLength": 11,
            "minLength": 11,
            "type": "string"
          },
          "userAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userUid": {
                  "$ref": "#/components/schemas/userUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "userGroupAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userGroupUid": {
                  "$ref": "#/components/schemas/userGroupUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          }
        },
        "required": [
          "name"
        ],
        "type": "object",
        "x-status-dhis2": "template"
      },
      "inherit": {
        "type": "boolean"
      },
      "instruction": {
        "example": "myinstruction",
        "format": "general",
        "maxLength": 2147483647,
        "minLength": 0,
        "type": "string"
      },
      "interests": {
        "example": "myinterests",
        "format": "general",
        "maxLength": 2147483647,
        "minLength": 0,
        "type": "string"
      },
      "interpretation": {
        "maxProperties": 2147483647,
        "minProperties": 0,
        "properties": {
          "access": {
            "maxProperties": 6,
            "minProperties": 1,
            "properties": {
              "delete": {
                "$ref": "#/components/schemas/delete"
              },
              "externalize": {
                "$ref": "#/components/schemas/externalize"
              },
              "manage": {
                "$ref": "#/components/schemas/manage"
              },
              "read": {
                "$ref": "#/components/schemas/read"
              },
              "update": {
                "$ref": "#/components/schemas/update"
              },
              "write": {
                "$ref": "#/components/schemas/write"
              }
            },
            "readOnly": true,
            "type": "object"
          },
          "attributeValues": {
            "items": {
              "$ref": "#/components/schemas/attributeValue"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "chart": {
            "format": "uid",
            "maxLength": 11,
            "minLength": 11,
            "type": "string",
            "x-association": "true"
          },
          "code": {
            "$ref": "#/components/schemas/code"
          },
          "comments": {
            "items": {
              "maxProperties": 1,
              "minProperties": 0,
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/id"
                }
              },
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "created": {
            "$ref": "#/components/schemas/created"
          },
          "dataSet": {
            "format": "uid",
            "maxLength": 11,
            "minLength": 11,
            "type": "string",
            "x-association": "true"
          },
          "displayName": {
            "$ref": "#/components/schemas/displayName"
          },
          "eventChart": {
            "format": "uid",
            "maxLength": 11,
            "minLength": 11,
            "type": "string",
            "x-association": "true"
          },
          "eventReport": {
            "format": "uid",
            "maxLength": 11,
            "minLength": 11,
            "type": "string",
            "x-association": "true"
          },
          "externalAccess": {
            "$ref": "#/components/schemas/externalAccess"
          },
          "favorite": {
            "type": "boolean"
          },
          "favorites": {
            "items": {
              "$ref": "#/components/schemas/favorite"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "href": {
            "$ref": "#/components/schemas/href"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "lastUpdated": {
            "$ref": "#/components/schemas/lastUpdated"
          },
          "lastUpdatedBy": {
            "$ref": "#/components/schemas/lastUpdatedBy"
          },
          "likeByUser": {
            "items": {
              "format": "uid",
              "maxLength": 11,
              "minLength": 11,
              "type": "string"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": false,
            "type": "array"
          },
          "likedBy": {
            "items": {
              "$ref": "#/components/schemas/likedB"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "likes": {
            "$ref": "#/components/schemas/likes"
          },
          "map": {
            "format": "uid",
            "maxLength": 11,
            "minLength": 11,
            "type": "string"
          },
          "mentions": {
            "items": {
              "maxProperties": 0,
              "minProperties": 0,
              "properties": {}
            },
            "maxItems": 255,
            "minItems": 0,
            "readOnly": false,
            "type": "array"
          },
          "name": {
            "$ref": "#/components/schemas/name"
          },
          "organisationUnit": {
            "format": "uid",
            "maxLength": 11,
            "minLength": 11,
            "type": "string"
          },
          "period": {
            "format": "uid",
            "maxLength": 11,
            "minLength": 11,
            "type": "string"
          },
          "publicAccess": {
            "$ref": "#/components/schemas/publicAccess"
          },
          "reportTable": {
            "format": "uid",
            "maxLength": 11,
            "minLength": 11,
            "type": "string"
          },
          "text": {
            "$ref": "#/components/schemas/text"
          },
          "translations": {
            "items": {
              "$ref": "#/components/schemas/translation"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "type": {
            "enum": [
              "CHART",
              "DATASET_REPORT",
              "EVENT_CHART",
              "EVENT_REPORT",
              "MAP",
              "REPORT_TABLE"
            ],
            "example": "CHART",
            "format": "enum",
            "maxLength": 14,
            "minLength": 3,
            "readOnly": true,
            "type": "string"
          },
          "user": {
            "format": "uid",
            "maxLength": 11,
            "minLength": 11,
            "type": "string"
          },
          "userAccesses": {
            "items": {
              "$ref": "#/components/schemas/userAccess"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "userGroupAccesses": {
            "items": {
              "maxProperties": 4,
              "minProperties": 0,
              "properties": {
                "access": {
                  "example": "r-r-----",
                  "format": "access",
                  "maxLength": 8,
                  "minLength": 8,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userGroupUid": {
                  "$ref": "#/components/schemas/userGroupUid"
                }
              },
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          }
        },
        "type": "object",
        "x-status-dhis2": "template"
      },
      "interpretationCount": {
        "format": "integer",
        "readOnly": true,
        "type": "string"
      },
      "interpretationLikeCount": {
        "format": "integer",
        "readOnly": true,
        "type": "string"
      },
      "introduction": {
        "example": "myintroduction",
        "format": "general",
        "maxLength": 2147483647,
        "minLength": 0,
        "type": "string"
      },
      "invitation": {
        "type": "boolean"
      },
      "isDefault": {
        "readOnly": true,
        "type": "boolean"
      },
      "itemCount": {
        "example": 9,
        "format": "int32",
        "maximum": 17,
        "minimum": 2,
        "type": "integer"
      },
      "itemOrganisationUnitGroup": {
        "properties": {}
      },
      "jobConfiguration": {
        "properties": {
          "access": {
            "items": {
              "properties": {
                "delete": {
                  "default": false,
                  "type": "boolean"
                },
                "externalize": {
                  "default": false,
                  "type": "boolean"
                },
                "manage": {
                  "default": false,
                  "type": "boolean"
                },
                "read": {
                  "default": true,
                  "type": "boolean"
                },
                "update": {
                  "default": false,
                  "type": "boolean"
                },
                "write": {
                  "default": false,
                  "type": "boolean"
                }
              },
              "readOnly": true
            },
            "maxItems": 1,
            "minItems": 1,
            "properties": {
              "delete": {
                "$ref": "#/components/schemas/delete"
              },
              "externalize": {
                "$ref": "#/components/schemas/externalize"
              },
              "manage": {
                "$ref": "#/components/schemas/manage"
              },
              "read": {
                "$ref": "#/components/schemas/read"
              },
              "update": {
                "$ref": "#/components/schemas/update"
              },
              "write": {
                "$ref": "#/components/schemas/write"
              }
            },
            "readOnly": false,
            "required": [
              "delete",
              "externalize",
              "manage",
              "read",
              "update",
              "write"
            ],
            "type": "object"
          },
          "attributeValues": {
            "items": {
              "properties": {
                "attribute": {
                  "format": "uid",
                  "maxLength": 255,
                  "readOnly": false,
                  "type": "string"
                },
                "created": {
                  "$ref": "#/components/schemas/created"
                },
                "lastUpdated": {
                  "$ref": "#/components/schemas/lastUpdated"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              },
              "required": [
                "attribute"
              ]
            },
            "type": "array"
          },
          "code": {
            "$ref": "#/components/schemas/code"
          },
          "configurable": {
            "$ref": "#/components/schemas/configurable"
          },
          "continuousExecution": {
            "$ref": "#/components/schemas/continuousExecution"
          },
          "created": {
            "$ref": "#/components/schemas/created"
          },
          "cronExpression": {
            "$ref": "#/components/schemas/cronExpression"
          },
          "displayName": {
            "$ref": "#/components/schemas/displayName"
          },
          "enabled": {
            "$ref": "#/components/schemas/enabled"
          },
          "externalAccess": {
            "$ref": "#/components/schemas/externalAccess"
          },
          "favorite": {
            "type": "boolean"
          },
          "favorites": {
            "items": {
              "$ref": "#/components/schemas/favorite"
            },
            "type": "array"
          },
          "href": {
            "$ref": "#/components/schemas/href"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "jobParameters": {
            "$ref": "#/components/schemas/jobParameters"
          },
          "jobStatus": {
            "$ref": "#/components/schemas/jobStatus"
          },
          "jobType": {
            "$ref": "#/components/schemas/jobType"
          },
          "lastExecuted": {
            "$ref": "#/components/schemas/lastExecuted"
          },
          "lastExecutedStatus": {
            "$ref": "#/components/schemas/lastExecutedStatus"
          },
          "lastRuntimeExecution": {
            "$ref": "#/components/schemas/lastRuntimeExecution"
          },
          "lastUpdated": {
            "$ref": "#/components/schemas/lastUpdated"
          },
          "lastUpdatedBy": {
            "$ref": "#/components/schemas/lastUpdatedBy"
          },
          "leaderOnlyJob": {
            "$ref": "#/components/schemas/leaderOnlyJob"
          },
          "name": {
            "$ref": "#/components/schemas/name"
          },
          "nextExecutionTime": {
            "$ref": "#/components/schemas/nextExecutionTime"
          },
          "publicAccess": {
            "$ref": "#/components/schemas/publicAccess"
          },
          "translations": {
            "items": {
              "properties": {
                "locale": {
                  "$ref": "#/components/schemas/locale"
                },
                "property": {
                  "$ref": "#/components/schemas/property"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              }
            },
            "type": "array"
          },
          "user": {
            "format": "uid",
            "type": "string"
          },
          "userAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userUid": {
                  "$ref": "#/components/schemas/userUid"
                }
              }
            },
            "type": "array"
          },
          "userGroupAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userGroupUid": {
                  "$ref": "#/components/schemas/userGroupUid"
                }
              }
            },
            "type": "array"
          },
          "userUid": {
            "$ref": "#/components/schemas/userUid"
          }
        },
        "required": [
          "continuousExecution",
          "cronExpression",
          "enabled",
          "jobStatus",
          "jobType",
          "leaderOnlyJob",
          "name"
        ],
        "type": "object"
      },
      "jobParameters": {
        "maxLength": 255,
        "type": "string"
      },
      "jobStatus": {
        "enum": [
          "COMPLETED",
          "DISABLED",
          "FAILED",
          "RUNNING",
          "SCHEDULED",
          "STOPPED"
        ],
        "example": "SCHEDULED",
        "format": "enum",
        "type": "string"
      },
      "jobTitle": {
        "example": "myjobTitle",
        "format": "general",
        "maxLength": 160,
        "minLength": 0,
        "type": "string"
      },
      "jobType": {
        "enum": [
          "ANALYTICSTABLE_UPDATE",
          "ANALYTICS_TABLE",
          "COMPLETE_DATA_SET_REGISTRATION_IMPORT",
          "CREDENTIALS_EXPIRY_ALERT",
          "DATAVALUE_IMPORT",
          "DATAVALUE_IMPORT_INTERNAL",
          "DATA_INTEGRITY",
          "DATA_SET_NOTIFICATION",
          "DATA_STATISTICS",
          "DATA_SYNC",
          "ENROLLMENT_IMPORT",
          "EVENT_IMPORT",
          "FILE_RESOURCE_CLEANUP",
          "GML_IMPORT",
          "KAFKA_TRACKER",
          "LEADER_ELECTION",
          "LEADER_RENEWAL",
          "METADATA_IMPORT",
          "META_DATA_SYNC",
          "MOCK",
          "MONITORING",
          "PREDICTOR",
          "PROGRAM_DATA_SYNC",
          "PROGRAM_NOTIFICATIONS",
          "PUSH_ANALYSIS",
          "REMOVE_EXPIRED_RESERVED_VALUES",
          "RESOURCE_TABLE",
          "SEND_SCHEDULED_MESSAGE",
          "SMS_SEND",
          "TEI_IMPORT",
          "VALIDATION_RESULTS_NOTIFICATION"
        ],
        "example": "CREDENTIALS_EXPIRY_ALERT",
        "format": "enum",
        "type": "string"
      },
      "key": {
        "example": "mykey",
        "format": "general",
        "maxLength": 255,
        "minLength": 0,
        "type": "string"
      },
      "klass": {
        "description": "The DHIS software class.",
        "type": "string"
      },
      "labelFontColor": {
        "example": "#000000",
        "format": "COLOR",
        "maxLength": 255,
        "minLength": 0,
        "type": "string"
      },
      "labelFontSize": {
        "example": "myl",
        "format": "general",
        "maxLength": 255,
        "minLength": 0,
        "type": "string"
      },
      "labelFontStyle": {
        "example": "mylab",
        "format": "general",
        "maxLength": 255,
        "minLength": 0,
        "type": "string"
      },
      "labelFontWeight": {
        "example": "mylab",
        "format": "general",
        "maxLength": 255,
        "minLength": 0,
        "type": "string"
      },
      "labels": {
        "type": "boolean"
      },
      "languages": {
        "example": "mylang",
        "format": "general",
        "maxLength": 2147483647,
        "minLength": 0,
        "type": "string"
      },
      "last12Months": {
        "type": "boolean"
      },
      "last12Weeks": {
        "type": "boolean"
      },
      "last14Days": {
        "type": "boolean"
      },
      "last2SixMonths": {
        "type": "boolean"
      },
      "last3Days": {
        "type": "boolean"
      },
      "last3Months": {
        "type": "boolean"
      },
      "last4BiWeeks": {
        "type": "boolean"
      },
      "last4Quarters": {
        "type": "boolean"
      },
      "last4Weeks": {
        "type": "boolean"
      },
      "last52Weeks": {
        "type": "boolean"
      },
      "last5FinancialYears": {
        "type": "boolean"
      },
      "last5Years": {
        "type": "boolean"
      },
      "last6BiMonths": {
        "type": "boolean"
      },
      "last6Months": {
        "type": "boolean"
      },
      "last7Days": {
        "type": "boolean"
      },
      "lastBiWeek": {
        "type": "boolean"
      },
      "lastBimonth": {
        "type": "boolean"
      },
      "lastCheckedInterpretations": {
        "example": "2016-10-13T11:51:34.317",
        "format": "date-time",
        "maxLength": 23,
        "minLength": 23,
        "type": "string"
      },
      "lastExecuted": {
        "example": "2018-10-22T09:40:54.452",
        "format": "date-time",
        "maxLength": 255,
        "minLength": 23,
        "type": "string"
      },
      "lastExecutedStatus": {
        "enum": [
          "COMPLETED",
          "DISABLED",
          "FAILED",
          "RUNNING",
          "SCHEDULED",
          "STOPPED"
        ],
        "example": "COMPLETED",
        "format": "enum",
        "type": "string"
      },
      "lastFinancialYear": {
        "type": "boolean"
      },
      "lastLogin": {
        "example": "2015-03-31T13:39:21.777",
        "format": "date-time",
        "maxLength": 23,
        "minLength": 23,
        "type": "string"
      },
      "lastMessage": {
        "example": "2018-10-29T07:24:37.088",
        "format": "date-time",
        "maxLength": 255,
        "minLength": 23,
        "type": "string"
      },
      "lastMonth": {
        "type": "boolean"
      },
      "lastQuarter": {
        "type": "boolean"
      },
      "lastRuntimeExecution": {
        "example": "mylastRunti",
        "format": "general",
        "maxLength": 2147483647,
        "minLength": 0,
        "type": "string"
      },
      "lastSenderFirstname": {
        "example": "my",
        "format": "general",
        "maxLength": 2147483647,
        "minLength": 0,
        "type": "string"
      },
      "lastSenderSurname": {
        "example": "mylas",
        "format": "general",
        "maxLength": 2147483647,
        "minLength": 0,
        "type": "string"
      },
      "lastSixMonth": {
        "type": "boolean"
      },
      "lastUpdated": {
        "format": "date-time",
        "maxLength": 23,
        "minLength": 0,
        "readOnly": false,
        "type": "string"
      },
      "lastUpdatedAtClient": {
        "example": null,
        "format": "date-time",
        "maxLength": 23,
        "minLength": 0,
        "readOnly": false,
        "type": "string"
      },
      "lastUpdatedBy": {
        "format": "uid",
        "maxLength": 11,
        "minLength": 11,
        "readOnly": false,
        "type": "string",
        "x-association": "true"
      },
      "lastWeek": {
        "type": "boolean"
      },
      "lastYear": {
        "type": "boolean"
      },
      "latitude": {
        "example": 952175.62553525,
        "format": "double",
        "maximum": 90,
        "minimum": -90,
        "type": "number"
      },
      "layer": {
        "example": "mylayer",
        "format": "general",
        "maxLength": 255,
        "minLength": 0,
        "type": "string"
      },
      "layers": {
        "format": "general",
        "maxLength": 2147483647,
        "minLength": 0,
        "type": "string"
      },
      "leaderOnlyJob": {
        "type": "boolean"
      },
      "leaf": {
        "readOnly": true,
        "type": "boolean"
      },
      "leftSide": {
        "properties": {}
      },
      "leftsideValue": {
        "format": "double",
        "maxLength": 2147483647,
        "minLength": 0,
        "readOnly": false,
        "type": "string"
      },
      "legendDisplayStrategy": {
        "enum": [
          "BY_DATA_ITEM",
          "FIXED"
        ],
        "format": "enum",
        "type": "string"
      },
      "legendDisplayStyle": {
        "enum": [
          "FILL",
          "TEXT"
        ],
        "example": "FILL",
        "format": "enum",
        "type": "string"
      },
      "legendSet": {
        "maxProperties": 20,
        "minProperties": 0,
        "properties": {
          "access": {
            "maxProperties": 6,
            "minProperties": 1,
            "properties": {
              "delete": {
                "$ref": "#/components/schemas/delete"
              },
              "externalize": {
                "$ref": "#/components/schemas/externalize"
              },
              "manage": {
                "$ref": "#/components/schemas/manage"
              },
              "read": {
                "$ref": "#/components/schemas/read"
              },
              "update": {
                "$ref": "#/components/schemas/update"
              },
              "write": {
                "$ref": "#/components/schemas/write"
              }
            },
            "readOnly": true,
            "required": [
              "delete",
              "externalize",
              "manage",
              "read",
              "update",
              "write"
            ],
            "type": "object"
          },
          "attributeValues": {
            "items": {
              "properties": {
                "attribute": {
                  "format": "uid",
                  "maxLength": 255,
                  "readOnly": false,
                  "type": "string"
                },
                "created": {
                  "$ref": "#/components/schemas/created"
                },
                "lastUpdated": {
                  "$ref": "#/components/schemas/lastUpdated"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              },
              "required": [
                "attribute"
              ]
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "code": {
            "$ref": "#/components/schemas/code"
          },
          "created": {
            "$ref": "#/components/schemas/created"
          },
          "displayName": {
            "$ref": "#/components/schemas/displayName"
          },
          "externalAccess": {
            "$ref": "#/components/schemas/externalAccess"
          },
          "favorite": {
            "type": "boolean"
          },
          "favorites": {
            "items": {
              "$ref": "#/components/schemas/favorite"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "href": {
            "$ref": "#/components/schemas/href"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "lastUpdated": {
            "$ref": "#/components/schemas/lastUpdated"
          },
          "lastUpdatedBy": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "legends": {
            "items": {
              "maxProperties": 16,
              "minProperties": 0,
              "properties": {
                "access": {
                  "maxProperties": 6,
                  "minProperties": 0,
                  "properties": {
                    "delete": {
                      "$ref": "#/components/schemas/delete"
                    },
                    "externalize": {
                      "$ref": "#/components/schemas/externalize"
                    },
                    "manage": {
                      "$ref": "#/components/schemas/manage"
                    },
                    "read": {
                      "$ref": "#/components/schemas/read"
                    },
                    "update": {
                      "$ref": "#/components/schemas/update"
                    },
                    "write": {
                      "$ref": "#/components/schemas/write"
                    }
                  },
                  "required": [
                    "delete",
                    "externalize",
                    "manage",
                    "read",
                    "update",
                    "write"
                  ],
                  "type": "object"
                },
                "attributeValues": {
                  "items": {
                    "properties": {
                      "attribute": {
                        "format": "uid",
                        "maxLength": 255,
                        "readOnly": false,
                        "type": "string"
                      },
                      "created": {
                        "$ref": "#/components/schemas/created"
                      },
                      "lastUpdated": {
                        "$ref": "#/components/schemas/lastUpdated"
                      },
                      "value": {
                        "$ref": "#/components/schemas/value"
                      }
                    },
                    "required": [
                      "attribute"
                    ]
                  },
                  "maxItems": 2147483647,
                  "minItems": 0,
                  "type": "array"
                },
                "color": {
                  "$ref": "#/components/schemas/color"
                },
                "created": {
                  "$ref": "#/components/schemas/created"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "endValue": {
                  "$ref": "#/components/schemas/endValue"
                },
                "externalAccess": {
                  "$ref": "#/components/schemas/externalAccess"
                },
                "favorite": {
                  "type": "boolean"
                },
                "favorites": {
                  "items": {
                    "$ref": "#/components/schemas/favorite"
                  },
                  "maxItems": 2147483647,
                  "minItems": 0,
                  "type": "array"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "lastUpdated": {
                  "$ref": "#/components/schemas/lastUpdated"
                },
                "name": {
                  "$ref": "#/components/schemas/name"
                },
                "startValue": {
                  "$ref": "#/components/schemas/startValue"
                },
                "translations": {
                  "items": {
                    "properties": {
                      "locale": {
                        "$ref": "#/components/schemas/locale"
                      },
                      "property": {
                        "$ref": "#/components/schemas/property"
                      },
                      "value": {
                        "$ref": "#/components/schemas/value"
                      }
                    }
                  },
                  "maxItems": 2147483647,
                  "minItems": 0,
                  "type": "array"
                },
                "userAccesses": {
                  "items": {
                    "properties": {
                      "access": {
                        "format": "access",
                        "maxLength": 255,
                        "minLength": 0,
                        "readOnly": false,
                        "type": "string"
                      },
                      "displayName": {
                        "$ref": "#/components/schemas/displayName"
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "userUid": {
                        "$ref": "#/components/schemas/userUid"
                      }
                    }
                  },
                  "maxItems": 2147483647,
                  "minItems": 0,
                  "type": "array"
                },
                "userGroupAccesses": {
                  "items": {
                    "properties": {
                      "access": {
                        "format": "access",
                        "maxLength": 255,
                        "minLength": 0,
                        "readOnly": false,
                        "type": "string"
                      },
                      "displayName": {
                        "$ref": "#/components/schemas/displayName"
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "userGroupUid": {
                        "$ref": "#/components/schemas/userGroupUid"
                      }
                    }
                  },
                  "maxItems": 2147483647,
                  "minItems": 0,
                  "type": "array"
                }
              },
              "required": [
                "access",
                "attributeValues",
                "color",
                "created",
                "displayName",
                "endValue",
                "externalAccess",
                "favorite",
                "favorites",
                "id",
                "lastUpdated",
                "name",
                "startValue",
                "translations",
                "userAccesses",
                "userGroupAccesses"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "name": {
            "$ref": "#/components/schemas/name"
          },
          "publicAccess": {
            "$ref": "#/components/schemas/publicAccess"
          },
          "symbolizer": {
            "$ref": "#/components/schemas/symbolizer"
          },
          "translations": {
            "items": {
              "properties": {
                "locale": {
                  "$ref": "#/components/schemas/locale"
                },
                "property": {
                  "$ref": "#/components/schemas/property"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "user": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "userAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userUid": {
                  "$ref": "#/components/schemas/userUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "userGroupAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userGroupUid": {
                  "$ref": "#/components/schemas/userGroupUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          }
        },
        "required": [
          "name"
        ],
        "type": "object",
        "x-status-dhis2": "template"
      },
      "legendSetAttribute": {
        "type": "boolean"
      },
      "legendSetUrl": {
        "format": "general",
        "maxLength": 2147483647,
        "minLength": 0,
        "type": "string"
      },
      "level": {
        "example": 2,
        "format": "int32",
        "maximum": 2147483647,
        "minimum": 0,
        "type": "integer"
      },
      "likedB": {
        "properties": {}
      },
      "likes": {
        "format": "integer",
        "maxLength": 2147483647,
        "minLength": 0,
        "type": "string",
        "x-association": "true"
      },
      "locale": {
        "maximum": 255,
        "minimum": 1,
        "readOnly": true,
        "type": "string"
      },
      "location": {
        "example": "mylocat",
        "format": "general",
        "maxLength": 255,
        "minLength": 0,
        "type": "string"
      },
      "longitude": {
        "example": -1378543.6774686,
        "format": "double",
        "maximum": 180,
        "minimum": -180,
        "type": "number"
      },
      "manage": {
        "default": false,
        "type": "boolean"
      },
      "managedByGroup": {
        "properties": {}
      },
      "managedGroup": {
        "properties": {}
      },
      "mandatory": {
        "type": "boolean"
      },
      "map": {
        "maxProperties": 31,
        "minProperties": 0,
        "properties": {
          "access": {
            "maxProperties": 6,
            "minProperties": 1,
            "properties": {
              "delete": {
                "$ref": "#/components/schemas/delete"
              },
              "externalize": {
                "$ref": "#/components/schemas/externalize"
              },
              "manage": {
                "$ref": "#/components/schemas/manage"
              },
              "read": {
                "$ref": "#/components/schemas/read"
              },
              "update": {
                "$ref": "#/components/schemas/update"
              },
              "write": {
                "$ref": "#/components/schemas/write"
              }
            },
            "readOnly": true,
            "required": [
              "delete",
              "externalize",
              "manage",
              "read",
              "update",
              "write"
            ],
            "type": "object"
          },
          "attributeValues": {
            "items": {
              "properties": {
                "attribute": {
                  "format": "uid",
                  "maxLength": 255,
                  "readOnly": false,
                  "type": "string"
                },
                "created": {
                  "$ref": "#/components/schemas/created"
                },
                "lastUpdated": {
                  "$ref": "#/components/schemas/lastUpdated"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              },
              "required": [
                "attribute"
              ]
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "basemap": {
            "$ref": "#/components/schemas/basemap"
          },
          "code": {
            "$ref": "#/components/schemas/code"
          },
          "created": {
            "$ref": "#/components/schemas/created"
          },
          "description": {
            "$ref": "#/components/schemas/description"
          },
          "displayDescription": {
            "$ref": "#/components/schemas/displayDescription"
          },
          "displayName": {
            "$ref": "#/components/schemas/displayName"
          },
          "displayShortName": {
            "$ref": "#/components/schemas/displayShortName"
          },
          "externalAccess": {
            "$ref": "#/components/schemas/externalAccess"
          },
          "favorite": {
            "type": "boolean"
          },
          "favorites": {
            "items": {
              "$ref": "#/components/schemas/favorite"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "href": {
            "$ref": "#/components/schemas/href"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "interpretations": {
            "items": {
              "maxProperties": 1,
              "minProperties": 0,
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/id"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "lastUpdated": {
            "$ref": "#/components/schemas/lastUpdated"
          },
          "lastUpdatedBy": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "latitude": {
            "$ref": "#/components/schemas/latitude"
          },
          "longitude": {
            "$ref": "#/components/schemas/longitude"
          },
          "mapViews": {
            "items": {
              "maxProperties": 1,
              "minProperties": 0,
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/id"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "name": {
            "$ref": "#/components/schemas/name"
          },
          "publicAccess": {
            "$ref": "#/components/schemas/publicAccess"
          },
          "shortName": {
            "$ref": "#/components/schemas/shortName"
          },
          "subscribed": {
            "$ref": "#/components/schemas/subscribed"
          },
          "subscribers": {
            "items": {
              "properties": {}
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "title": {
            "$ref": "#/components/schemas/title"
          },
          "translations": {
            "items": {
              "properties": {
                "locale": {
                  "$ref": "#/components/schemas/locale"
                },
                "property": {
                  "$ref": "#/components/schemas/property"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "user": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "userAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userUid": {
                  "$ref": "#/components/schemas/userUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "userGroupAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userGroupUid": {
                  "$ref": "#/components/schemas/userGroupUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "zoom": {
            "$ref": "#/components/schemas/zoom"
          }
        },
        "required": [
          "access",
          "attributeValues",
          "created",
          "displayName",
          "externalAccess",
          "favorite",
          "href",
          "id",
          "interpretations",
          "lastUpdated",
          "mapViews",
          "name",
          "publicAccess",
          "subscribed",
          "translations",
          "userAccesses",
          "userGroupAccesses"
        ],
        "type": "object",
        "x-status-dhis2": "template"
      },
      "mapLayerPosition": {
        "enum": [
          "BASEMAP",
          "OVERLAY"
        ],
        "example": "BASEMAP",
        "format": "enum",
        "type": "string"
      },
      "mapService": {
        "enum": [
          "TMS",
          "WMS",
          "XYZ"
        ],
        "example": "XYZ",
        "format": "enum",
        "type": "string"
      },
      "mapView": {
        "maxProperties": 90,
        "minProperties": 0,
        "properties": {
          "access": {
            "maxProperties": 6,
            "minProperties": 1,
            "properties": {
              "delete": {
                "$ref": "#/components/schemas/delete"
              },
              "externalize": {
                "$ref": "#/components/schemas/externalize"
              },
              "manage": {
                "$ref": "#/components/schemas/manage"
              },
              "read": {
                "$ref": "#/components/schemas/read"
              },
              "update": {
                "$ref": "#/components/schemas/update"
              },
              "write": {
                "$ref": "#/components/schemas/write"
              }
            },
            "readOnly": true,
            "required": [
              "delete",
              "externalize",
              "manage",
              "read",
              "update",
              "write"
            ],
            "type": "object"
          },
          "aggregationType": {
            "$ref": "#/components/schemas/aggregationType"
          },
          "areaRadius": {
            "$ref": "#/components/schemas/areaRadius"
          },
          "attributeDimensions": {
            "items": {
              "properties": {}
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "attributeValues": {
            "items": {
              "properties": {
                "attribute": {
                  "format": "uid",
                  "maxLength": 255,
                  "readOnly": false,
                  "type": "string"
                },
                "created": {
                  "$ref": "#/components/schemas/created"
                },
                "lastUpdated": {
                  "$ref": "#/components/schemas/lastUpdated"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              },
              "required": [
                "attribute"
              ]
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "categoryDimensions": {
            "items": {
              "properties": {}
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "categoryOptionGroupSetDimensions": {
            "items": {
              "properties": {}
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "classes": {
            "$ref": "#/components/schemas/classes"
          },
          "code": {
            "$ref": "#/components/schemas/code"
          },
          "colorHigh": {
            "$ref": "#/components/schemas/colorHigh"
          },
          "colorLow": {
            "$ref": "#/components/schemas/colorLow"
          },
          "colorScale": {
            "$ref": "#/components/schemas/colorScale"
          },
          "columnDimensions": {
            "items": {
              "example": "m",
              "format": "dimension",
              "maxLength": 255,
              "minLength": 1,
              "type": "string"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "columns": {
            "items": {
              "properties": {}
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "completedOnly": {
            "$ref": "#/components/schemas/completedOnly"
          },
          "config": {
            "$ref": "#/components/schemas/config"
          },
          "created": {
            "$ref": "#/components/schemas/created"
          },
          "dataDimensionItems": {
            "items": {
              "maxProperties": 6,
              "minProperties": 0,
              "properties": {
                "dataDimensionItemType": {
                  "enum": [
                    "DATA_ELEMENT",
                    "DATA_ELEMENT_OPERAND",
                    "INDICATOR",
                    "PROGRAM_INDICATOR",
                    "REPORTING_RATE"
                  ],
                  "example": "DATA_ELEMENT",
                  "format": "enum",
                  "type": "string"
                },
                "dataElement": {
                  "maxProperties": 1,
                  "minProperties": 0,
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    }
                  },
                  "required": [
                    "id"
                  ],
                  "type": "object"
                },
                "dataElementOperand": {
                  "maxProperties": 21,
                  "minProperties": 0,
                  "properties": {
                    "access": {
                      "maxProperties": 6,
                      "minProperties": 0,
                      "properties": {
                        "delete": {
                          "$ref": "#/components/schemas/delete"
                        },
                        "externalize": {
                          "$ref": "#/components/schemas/externalize"
                        },
                        "manage": {
                          "$ref": "#/components/schemas/manage"
                        },
                        "read": {
                          "$ref": "#/components/schemas/read"
                        },
                        "update": {
                          "$ref": "#/components/schemas/update"
                        },
                        "write": {
                          "$ref": "#/components/schemas/write"
                        }
                      },
                      "required": [
                        "delete",
                        "externalize",
                        "manage",
                        "read",
                        "update",
                        "write"
                      ],
                      "type": "object"
                    },
                    "aggregationType": {
                      "$ref": "#/components/schemas/aggregationType"
                    },
                    "attributeValues": {
                      "items": {
                        "properties": {
                          "attribute": {
                            "format": "uid",
                            "maxLength": 255,
                            "readOnly": false,
                            "type": "string"
                          },
                          "created": {
                            "$ref": "#/components/schemas/created"
                          },
                          "lastUpdated": {
                            "$ref": "#/components/schemas/lastUpdated"
                          },
                          "value": {
                            "$ref": "#/components/schemas/value"
                          }
                        },
                        "required": [
                          "attribute"
                        ]
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "type": "array"
                    },
                    "categoryOptionCombo": {
                      "maxProperties": 1,
                      "minProperties": 0,
                      "properties": {
                        "id": {
                          "$ref": "#/components/schemas/id"
                        }
                      },
                      "required": [
                        "id"
                      ],
                      "type": "object"
                    },
                    "created": {
                      "$ref": "#/components/schemas/created"
                    },
                    "dataElement": {
                      "maxProperties": 1,
                      "minProperties": 0,
                      "properties": {
                        "id": {
                          "$ref": "#/components/schemas/id"
                        }
                      },
                      "required": [
                        "id"
                      ],
                      "type": "object"
                    },
                    "dimensionItem": {
                      "$ref": "#/components/schemas/dimensionItem"
                    },
                    "dimensionItemType": {
                      "enum": [
                        "DATA_ELEMENT_OPERAND"
                      ],
                      "example": "DATA_ELEMENT_OPERAND",
                      "format": "enum",
                      "type": "string"
                    },
                    "displayName": {
                      "$ref": "#/components/schemas/displayName"
                    },
                    "displayShortName": {
                      "$ref": "#/components/schemas/displayShortName"
                    },
                    "externalAccess": {
                      "$ref": "#/components/schemas/externalAccess"
                    },
                    "favorite": {
                      "type": "boolean"
                    },
                    "favorites": {
                      "items": {
                        "$ref": "#/components/schemas/favorite"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "type": "array"
                    },
                    "id": {
                      "$ref": "#/components/schemas/id"
                    },
                    "lastUpdated": {
                      "$ref": "#/components/schemas/lastUpdated"
                    },
                    "legendSets": {
                      "items": {
                        "maxProperties": 20,
                        "minProperties": 0,
                        "properties": {
                          "access": {
                            "maxProperties": 6,
                            "minProperties": 1,
                            "properties": {
                              "delete": {
                                "$ref": "#/components/schemas/delete"
                              },
                              "externalize": {
                                "$ref": "#/components/schemas/externalize"
                              },
                              "manage": {
                                "$ref": "#/components/schemas/manage"
                              },
                              "read": {
                                "$ref": "#/components/schemas/read"
                              },
                              "update": {
                                "$ref": "#/components/schemas/update"
                              },
                              "write": {
                                "$ref": "#/components/schemas/write"
                              }
                            },
                            "readOnly": true,
                            "required": [
                              "delete",
                              "externalize",
                              "manage",
                              "read",
                              "update",
                              "write"
                            ],
                            "type": "object"
                          },
                          "attributeValues": {
                            "items": {
                              "properties": {
                                "attribute": {
                                  "format": "uid",
                                  "maxLength": 255,
                                  "readOnly": false,
                                  "type": "string"
                                },
                                "created": {
                                  "$ref": "#/components/schemas/created"
                                },
                                "lastUpdated": {
                                  "$ref": "#/components/schemas/lastUpdated"
                                },
                                "value": {
                                  "$ref": "#/components/schemas/value"
                                }
                              },
                              "required": [
                                "attribute"
                              ]
                            },
                            "maxItems": 2147483647,
                            "minItems": 0,
                            "type": "array"
                          },
                          "code": {
                            "$ref": "#/components/schemas/code"
                          },
                          "created": {
                            "$ref": "#/components/schemas/created"
                          },
                          "displayName": {
                            "$ref": "#/components/schemas/displayName"
                          },
                          "externalAccess": {
                            "$ref": "#/components/schemas/externalAccess"
                          },
                          "favorite": {
                            "type": "boolean"
                          },
                          "favorites": {
                            "items": {
                              "$ref": "#/components/schemas/favorite"
                            },
                            "maxItems": 2147483647,
                            "minItems": 0,
                            "type": "array"
                          },
                          "href": {
                            "$ref": "#/components/schemas/href"
                          },
                          "id": {
                            "$ref": "#/components/schemas/id"
                          },
                          "lastUpdated": {
                            "$ref": "#/components/schemas/lastUpdated"
                          },
                          "lastUpdatedBy": {
                            "properties": {
                              "id": {
                                "$ref": "#/components/schemas/id"
                              }
                            },
                            "required": [
                              "id"
                            ],
                            "type": "object"
                          },
                          "legends": {
                            "items": {
                              "maxProperties": 16,
                              "minProperties": 0,
                              "properties": {
                                "access": {
                                  "maxProperties": 6,
                                  "minProperties": 0,
                                  "properties": {
                                    "delete": {
                                      "$ref": "#/components/schemas/delete"
                                    },
                                    "externalize": {
                                      "$ref": "#/components/schemas/externalize"
                                    },
                                    "manage": {
                                      "$ref": "#/components/schemas/manage"
                                    },
                                    "read": {
                                      "$ref": "#/components/schemas/read"
                                    },
                                    "update": {
                                      "$ref": "#/components/schemas/update"
                                    },
                                    "write": {
                                      "$ref": "#/components/schemas/write"
                                    }
                                  },
                                  "required": [
                                    "delete",
                                    "externalize",
                                    "manage",
                                    "read",
                                    "update",
                                    "write"
                                  ],
                                  "type": "object"
                                },
                                "attributeValues": {
                                  "items": {
                                    "properties": {
                                      "attribute": {
                                        "format": "uid",
                                        "maxLength": 255,
                                        "readOnly": false,
                                        "type": "string"
                                      },
                                      "created": {
                                        "$ref": "#/components/schemas/created"
                                      },
                                      "lastUpdated": {
                                        "$ref": "#/components/schemas/lastUpdated"
                                      },
                                      "value": {
                                        "$ref": "#/components/schemas/value"
                                      }
                                    },
                                    "required": [
                                      "attribute"
                                    ]
                                  },
                                  "maxItems": 2147483647,
                                  "minItems": 0,
                                  "type": "array"
                                },
                                "color": {
                                  "$ref": "#/components/schemas/color"
                                },
                                "created": {
                                  "$ref": "#/components/schemas/created"
                                },
                                "displayName": {
                                  "$ref": "#/components/schemas/displayName"
                                },
                                "endValue": {
                                  "$ref": "#/components/schemas/endValue"
                                },
                                "externalAccess": {
                                  "$ref": "#/components/schemas/externalAccess"
                                },
                                "favorite": {
                                  "type": "boolean"
                                },
                                "favorites": {
                                  "items": {
                                    "$ref": "#/components/schemas/favorite"
                                  },
                                  "maxItems": 2147483647,
                                  "minItems": 0,
                                  "type": "array"
                                },
                                "id": {
                                  "$ref": "#/components/schemas/id"
                                },
                                "lastUpdated": {
                                  "$ref": "#/components/schemas/lastUpdated"
                                },
                                "name": {
                                  "$ref": "#/components/schemas/name"
                                },
                                "startValue": {
                                  "$ref": "#/components/schemas/startValue"
                                },
                                "translations": {
                                  "items": {
                                    "properties": {
                                      "locale": {
                                        "$ref": "#/components/schemas/locale"
                                      },
                                      "property": {
                                        "$ref": "#/components/schemas/property"
                                      },
                                      "value": {
                                        "$ref": "#/components/schemas/value"
                                      }
                                    }
                                  },
                                  "maxItems": 2147483647,
                                  "minItems": 0,
                                  "type": "array"
                                },
                                "userAccesses": {
                                  "items": {
                                    "properties": {
                                      "access": {
                                        "format": "access",
                                        "maxLength": 255,
                                        "minLength": 0,
                                        "readOnly": false,
                                        "type": "string"
                                      },
                                      "displayName": {
                                        "$ref": "#/components/schemas/displayName"
                                      },
                                      "id": {
                                        "$ref": "#/components/schemas/id"
                                      },
                                      "userUid": {
                                        "$ref": "#/components/schemas/userUid"
                                      }
                                    }
                                  },
                                  "maxItems": 2147483647,
                                  "minItems": 0,
                                  "type": "array"
                                },
                                "userGroupAccesses": {
                                  "items": {
                                    "properties": {
                                      "access": {
                                        "format": "access",
                                        "maxLength": 255,
                                        "minLength": 0,
                                        "readOnly": false,
                                        "type": "string"
                                      },
                                      "displayName": {
                                        "$ref": "#/components/schemas/displayName"
                                      },
                                      "id": {
                                        "$ref": "#/components/schemas/id"
                                      },
                                      "userGroupUid": {
                                        "$ref": "#/components/schemas/userGroupUid"
                                      }
                                    }
                                  },
                                  "maxItems": 2147483647,
                                  "minItems": 0,
                                  "type": "array"
                                }
                              },
                              "required": [
                                "access",
                                "attributeValues",
                                "color",
                                "created",
                                "displayName",
                                "endValue",
                                "externalAccess",
                                "favorite",
                                "favorites",
                                "id",
                                "lastUpdated",
                                "name",
                                "startValue",
                                "translations",
                                "userAccesses",
                                "userGroupAccesses"
                              ],
                              "type": "object"
                            },
                            "maxItems": 2147483647,
                            "minItems": 0,
                            "type": "array"
                          },
                          "name": {
                            "$ref": "#/components/schemas/name"
                          },
                          "publicAccess": {
                            "$ref": "#/components/schemas/publicAccess"
                          },
                          "symbolizer": {
                            "$ref": "#/components/schemas/symbolizer"
                          },
                          "translations": {
                            "items": {
                              "properties": {
                                "locale": {
                                  "$ref": "#/components/schemas/locale"
                                },
                                "property": {
                                  "$ref": "#/components/schemas/property"
                                },
                                "value": {
                                  "$ref": "#/components/schemas/value"
                                }
                              }
                            },
                            "maxItems": 2147483647,
                            "minItems": 0,
                            "type": "array"
                          },
                          "user": {
                            "properties": {
                              "id": {
                                "$ref": "#/components/schemas/id"
                              }
                            },
                            "required": [
                              "id"
                            ],
                            "type": "object"
                          },
                          "userAccesses": {
                            "items": {
                              "properties": {
                                "access": {
                                  "format": "access",
                                  "maxLength": 255,
                                  "minLength": 0,
                                  "readOnly": false,
                                  "type": "string"
                                },
                                "displayName": {
                                  "$ref": "#/components/schemas/displayName"
                                },
                                "id": {
                                  "$ref": "#/components/schemas/id"
                                },
                                "userUid": {
                                  "$ref": "#/components/schemas/userUid"
                                }
                              }
                            },
                            "maxItems": 2147483647,
                            "minItems": 0,
                            "type": "array"
                          },
                          "userGroupAccesses": {
                            "items": {
                              "properties": {
                                "access": {
                                  "format": "access",
                                  "maxLength": 255,
                                  "minLength": 0,
                                  "readOnly": false,
                                  "type": "string"
                                },
                                "displayName": {
                                  "$ref": "#/components/schemas/displayName"
                                },
                                "id": {
                                  "$ref": "#/components/schemas/id"
                                },
                                "userGroupUid": {
                                  "$ref": "#/components/schemas/userGroupUid"
                                }
                              }
                            },
                            "maxItems": 2147483647,
                            "minItems": 0,
                            "type": "array"
                          }
                        },
                        "required": [
                          "name"
                        ],
                        "type": "object",
                        "x-status-dhis2": "template"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "type": "array"
                    },
                    "name": {
                      "$ref": "#/components/schemas/name"
                    },
                    "shortName": {
                      "$ref": "#/components/schemas/shortName"
                    },
                    "translations": {
                      "items": {
                        "properties": {
                          "locale": {
                            "$ref": "#/components/schemas/locale"
                          },
                          "property": {
                            "$ref": "#/components/schemas/property"
                          },
                          "value": {
                            "$ref": "#/components/schemas/value"
                          }
                        }
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "type": "array"
                    },
                    "userAccesses": {
                      "items": {
                        "properties": {
                          "access": {
                            "format": "access",
                            "maxLength": 255,
                            "minLength": 0,
                            "readOnly": false,
                            "type": "string"
                          },
                          "displayName": {
                            "$ref": "#/components/schemas/displayName"
                          },
                          "id": {
                            "$ref": "#/components/schemas/id"
                          },
                          "userUid": {
                            "$ref": "#/components/schemas/userUid"
                          }
                        }
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "type": "array"
                    },
                    "userGroupAccesses": {
                      "items": {
                        "properties": {
                          "access": {
                            "format": "access",
                            "maxLength": 255,
                            "minLength": 0,
                            "readOnly": false,
                            "type": "string"
                          },
                          "displayName": {
                            "$ref": "#/components/schemas/displayName"
                          },
                          "id": {
                            "$ref": "#/components/schemas/id"
                          },
                          "userGroupUid": {
                            "$ref": "#/components/schemas/userGroupUid"
                          }
                        }
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "type": "array"
                    }
                  },
                  "required": [
                    "access",
                    "attributeValues",
                    "created",
                    "dataElement",
                    "dimensionItem",
                    "dimensionItemType",
                    "displayName",
                    "displayShortName",
                    "externalAccess",
                    "favorite",
                    "favorites",
                    "id",
                    "lastUpdated",
                    "legendSets",
                    "name",
                    "shortName",
                    "translations",
                    "userAccesses",
                    "userGroupAccesses"
                  ],
                  "type": "object"
                },
                "indicator": {
                  "maxProperties": 1,
                  "minProperties": 0,
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    }
                  },
                  "required": [
                    "id"
                  ],
                  "type": "object"
                },
                "programIndicator": {
                  "maxProperties": 1,
                  "minProperties": 0,
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    }
                  },
                  "required": [
                    "id"
                  ],
                  "type": "object"
                },
                "reportingRate": {
                  "maxProperties": 18,
                  "minProperties": 0,
                  "properties": {
                    "access": {
                      "maxProperties": 6,
                      "minProperties": 0,
                      "properties": {
                        "delete": {
                          "$ref": "#/components/schemas/delete"
                        },
                        "externalize": {
                          "$ref": "#/components/schemas/externalize"
                        },
                        "manage": {
                          "$ref": "#/components/schemas/manage"
                        },
                        "read": {
                          "$ref": "#/components/schemas/read"
                        },
                        "update": {
                          "$ref": "#/components/schemas/update"
                        },
                        "write": {
                          "$ref": "#/components/schemas/write"
                        }
                      },
                      "required": [
                        "delete",
                        "externalize",
                        "manage",
                        "read",
                        "update",
                        "write"
                      ],
                      "type": "object"
                    },
                    "attributeValues": {
                      "items": {
                        "properties": {
                          "attribute": {
                            "format": "uid",
                            "maxLength": 255,
                            "readOnly": false,
                            "type": "string"
                          },
                          "created": {
                            "$ref": "#/components/schemas/created"
                          },
                          "lastUpdated": {
                            "$ref": "#/components/schemas/lastUpdated"
                          },
                          "value": {
                            "$ref": "#/components/schemas/value"
                          }
                        },
                        "required": [
                          "attribute"
                        ]
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "type": "array"
                    },
                    "dataSet": {
                      "maxProperties": 1,
                      "minProperties": 0,
                      "properties": {
                        "id": {
                          "$ref": "#/components/schemas/id"
                        }
                      },
                      "required": [
                        "id"
                      ],
                      "type": "object"
                    },
                    "dimensionItem": {
                      "$ref": "#/components/schemas/dimensionItem"
                    },
                    "dimensionItemType": {
                      "enum": [
                        "REPORTING_RATE"
                      ],
                      "example": "REPORTING_RATE",
                      "format": "enum",
                      "type": "string"
                    },
                    "displayName": {
                      "$ref": "#/components/schemas/displayName"
                    },
                    "displayShortName": {
                      "$ref": "#/components/schemas/displayShortName"
                    },
                    "externalAccess": {
                      "$ref": "#/components/schemas/externalAccess"
                    },
                    "favorite": {
                      "type": "boolean"
                    },
                    "favorites": {
                      "items": {
                        "$ref": "#/components/schemas/favorite"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "type": "array"
                    },
                    "id": {
                      "$ref": "#/components/schemas/id"
                    },
                    "legendSets": {
                      "items": {
                        "maxProperties": 1,
                        "minProperties": 0,
                        "properties": {
                          "id": {
                            "$ref": "#/components/schemas/id"
                          }
                        },
                        "required": [
                          "id"
                        ],
                        "type": "object"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "type": "array"
                    },
                    "metric": {
                      "$ref": "#/components/schemas/metric"
                    },
                    "name": {
                      "$ref": "#/components/schemas/name"
                    },
                    "shortName": {
                      "$ref": "#/components/schemas/shortName"
                    },
                    "translations": {
                      "items": {
                        "properties": {
                          "locale": {
                            "$ref": "#/components/schemas/locale"
                          },
                          "property": {
                            "$ref": "#/components/schemas/property"
                          },
                          "value": {
                            "$ref": "#/components/schemas/value"
                          }
                        }
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "type": "array"
                    },
                    "userAccesses": {
                      "items": {
                        "properties": {
                          "access": {
                            "format": "access",
                            "maxLength": 255,
                            "minLength": 0,
                            "readOnly": false,
                            "type": "string"
                          },
                          "displayName": {
                            "$ref": "#/components/schemas/displayName"
                          },
                          "id": {
                            "$ref": "#/components/schemas/id"
                          },
                          "userUid": {
                            "$ref": "#/components/schemas/userUid"
                          }
                        }
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "type": "array"
                    },
                    "userGroupAccesses": {
                      "items": {
                        "properties": {
                          "access": {
                            "format": "access",
                            "maxLength": 255,
                            "minLength": 0,
                            "readOnly": false,
                            "type": "string"
                          },
                          "displayName": {
                            "$ref": "#/components/schemas/displayName"
                          },
                          "id": {
                            "$ref": "#/components/schemas/id"
                          },
                          "userGroupUid": {
                            "$ref": "#/components/schemas/userGroupUid"
                          }
                        }
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "type": "array"
                    }
                  },
                  "required": [
                    "access",
                    "attributeValues",
                    "dataSet",
                    "dimensionItem",
                    "dimensionItemType",
                    "displayName",
                    "displayShortName",
                    "externalAccess",
                    "favorite",
                    "favorites",
                    "id",
                    "legendSets",
                    "metric",
                    "name",
                    "shortName",
                    "translations",
                    "userAccesses",
                    "userGroupAccesses"
                  ],
                  "type": "object"
                }
              },
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "dataElementDimensions": {
            "items": {
              "maxProperties": 2,
              "minProperties": 0,
              "properties": {
                "dataElement": {
                  "maxProperties": 1,
                  "minProperties": 0,
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    }
                  },
                  "required": [
                    "id"
                  ],
                  "type": "object"
                },
                "filter": {
                  "example": "myf",
                  "format": "general",
                  "maxLength": 255,
                  "minLength": 1,
                  "type": "string"
                }
              },
              "required": [
                "dataElement"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "dataElementGroupSetDimensions": {
            "items": {
              "properties": {}
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "description": {
            "$ref": "#/components/schemas/description"
          },
          "digitGroupSeparator": {
            "$ref": "#/components/schemas/digitGroupSeparator"
          },
          "displayDescription": {
            "$ref": "#/components/schemas/displayDescription"
          },
          "displayName": {
            "$ref": "#/components/schemas/displayName"
          },
          "displayShortName": {
            "$ref": "#/components/schemas/displayShortName"
          },
          "endDate": {
            "$ref": "#/components/schemas/endDate"
          },
          "eventClustering": {
            "$ref": "#/components/schemas/eventClustering"
          },
          "eventCoordinateField": {
            "$ref": "#/components/schemas/eventCoordinateField"
          },
          "eventPointColor": {
            "$ref": "#/components/schemas/eventPointColor"
          },
          "eventPointRadius": {
            "$ref": "#/components/schemas/eventPointRadius"
          },
          "externalAccess": {
            "$ref": "#/components/schemas/externalAccess"
          },
          "favorite": {
            "type": "boolean"
          },
          "favorites": {
            "items": {
              "$ref": "#/components/schemas/favorite"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "filters": {
            "items": {
              "properties": {}
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "followUp": {
            "$ref": "#/components/schemas/followUp"
          },
          "hidden": {
            "$ref": "#/components/schemas/hidden"
          },
          "hideSubtitle": {
            "$ref": "#/components/schemas/hideSubtitle"
          },
          "hideTitle": {
            "$ref": "#/components/schemas/hideTitle"
          },
          "href": {
            "$ref": "#/components/schemas/href"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "interpretations": {
            "items": {
              "maxProperties": 33,
              "minProperties": 0,
              "properties": {
                "access": {
                  "maxProperties": 6,
                  "minProperties": 1,
                  "properties": {
                    "delete": {
                      "$ref": "#/components/schemas/delete"
                    },
                    "externalize": {
                      "$ref": "#/components/schemas/externalize"
                    },
                    "manage": {
                      "$ref": "#/components/schemas/manage"
                    },
                    "read": {
                      "$ref": "#/components/schemas/read"
                    },
                    "update": {
                      "$ref": "#/components/schemas/update"
                    },
                    "write": {
                      "$ref": "#/components/schemas/write"
                    }
                  },
                  "readOnly": true,
                  "type": "object"
                },
                "attributeValues": {
                  "items": {
                    "properties": {
                      "attribute": {
                        "format": "uid",
                        "maxLength": 255,
                        "readOnly": false,
                        "type": "string"
                      },
                      "created": {
                        "$ref": "#/components/schemas/created"
                      },
                      "lastUpdated": {
                        "$ref": "#/components/schemas/lastUpdated"
                      },
                      "value": {
                        "$ref": "#/components/schemas/value"
                      }
                    },
                    "required": [
                      "attribute"
                    ]
                  },
                  "maxItems": 2147483647,
                  "minItems": 0,
                  "type": "array"
                },
                "chart": {
                  "format": "uid",
                  "maxLength": 11,
                  "minLength": 11,
                  "type": "string",
                  "x-association": "true"
                },
                "code": {
                  "$ref": "#/components/schemas/code"
                },
                "comments": {
                  "items": {
                    "maxProperties": 1,
                    "minProperties": 0,
                    "properties": {
                      "id": {
                        "$ref": "#/components/schemas/id"
                      }
                    },
                    "type": "object"
                  },
                  "maxItems": 2147483647,
                  "minItems": 0,
                  "type": "array"
                },
                "created": {
                  "$ref": "#/components/schemas/created"
                },
                "dataSet": {
                  "format": "uid",
                  "maxLength": 11,
                  "minLength": 11,
                  "type": "string",
                  "x-association": "true"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "eventChart": {
                  "format": "uid",
                  "maxLength": 11,
                  "minLength": 11,
                  "type": "string",
                  "x-association": "true"
                },
                "eventReport": {
                  "format": "uid",
                  "maxLength": 11,
                  "minLength": 11,
                  "type": "string",
                  "x-association": "true"
                },
                "externalAccess": {
                  "$ref": "#/components/schemas/externalAccess"
                },
                "favorite": {
                  "type": "boolean"
                },
                "favorites": {
                  "items": {
                    "$ref": "#/components/schemas/favorite"
                  },
                  "maxItems": 2147483647,
                  "minItems": 0,
                  "type": "array"
                },
                "href": {
                  "$ref": "#/components/schemas/href"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "lastUpdated": {
                  "$ref": "#/components/schemas/lastUpdated"
                },
                "lastUpdatedBy": {
                  "$ref": "#/components/schemas/lastUpdatedBy"
                },
                "likeByUser": {
                  "items": {
                    "format": "uid",
                    "maxLength": 11,
                    "minLength": 11,
                    "type": "string"
                  },
                  "maxItems": 2147483647,
                  "minItems": 0,
                  "readOnly": false,
                  "type": "array"
                },
                "likedBy": {
                  "items": {
                    "properties": {}
                  },
                  "maxItems": 2147483647,
                  "minItems": 0,
                  "type": "array"
                },
                "likes": {
                  "$ref": "#/components/schemas/likes"
                },
                "map": {
                  "format": "uid",
                  "maxLength": 11,
                  "minLength": 11,
                  "type": "string"
                },
                "mentions": {
                  "items": {
                    "maxProperties": 0,
                    "minProperties": 0,
                    "properties": {}
                  },
                  "maxItems": 255,
                  "minItems": 0,
                  "readOnly": false,
                  "type": "array"
                },
                "name": {
                  "$ref": "#/components/schemas/name"
                },
                "organisationUnit": {
                  "format": "uid",
                  "maxLength": 11,
                  "minLength": 11,
                  "type": "string"
                },
                "period": {
                  "format": "uid",
                  "maxLength": 11,
                  "minLength": 11,
                  "type": "string"
                },
                "publicAccess": {
                  "$ref": "#/components/schemas/publicAccess"
                },
                "reportTable": {
                  "format": "uid",
                  "maxLength": 11,
                  "minLength": 11,
                  "type": "string"
                },
                "text": {
                  "$ref": "#/components/schemas/text"
                },
                "translations": {
                  "items": {
                    "properties": {
                      "locale": {
                        "$ref": "#/components/schemas/locale"
                      },
                      "property": {
                        "$ref": "#/components/schemas/property"
                      },
                      "value": {
                        "$ref": "#/components/schemas/value"
                      }
                    }
                  },
                  "maxItems": 2147483647,
                  "minItems": 0,
                  "type": "array"
                },
                "type": {
                  "enum": [
                    "CHART",
                    "DATASET_REPORT",
                    "EVENT_CHART",
                    "EVENT_REPORT",
                    "MAP",
                    "REPORT_TABLE"
                  ],
                  "example": "CHART",
                  "format": "enum",
                  "readOnly": true,
                  "type": "string"
                },
                "user": {
                  "format": "uid",
                  "maxLength": 11,
                  "minLength": 11,
                  "type": "string"
                },
                "userAccesses": {
                  "items": {
                    "properties": {
                      "access": {
                        "format": "access",
                        "maxLength": 255,
                        "minLength": 0,
                        "readOnly": false,
                        "type": "string"
                      },
                      "displayName": {
                        "$ref": "#/components/schemas/displayName"
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "userUid": {
                        "$ref": "#/components/schemas/userUid"
                      }
                    }
                  },
                  "maxItems": 2147483647,
                  "minItems": 0,
                  "type": "array"
                },
                "userGroupAccesses": {
                  "items": {
                    "maxProperties": 4,
                    "minProperties": 0,
                    "properties": {
                      "access": {
                        "example": "r-r-----",
                        "format": "access",
                        "maxLength": 8,
                        "minLength": 8,
                        "type": "string"
                      },
                      "displayName": {
                        "$ref": "#/components/schemas/displayName"
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "userGroupUid": {
                        "$ref": "#/components/schemas/userGroupUid"
                      }
                    },
                    "type": "object"
                  },
                  "maxItems": 2147483647,
                  "minItems": 0,
                  "type": "array"
                }
              },
              "type": "object",
              "x-status-dhis2": "template"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "itemOrganisationUnitGroups": {
            "items": {
              "properties": {}
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "labelFontColor": {
            "$ref": "#/components/schemas/labelFontColor"
          },
          "labelFontSize": {
            "$ref": "#/components/schemas/labelFontSize"
          },
          "labelFontStyle": {
            "$ref": "#/components/schemas/labelFontStyle"
          },
          "labelFontWeight": {
            "$ref": "#/components/schemas/labelFontWeight"
          },
          "labels": {
            "$ref": "#/components/schemas/labels"
          },
          "lastUpdated": {
            "$ref": "#/components/schemas/lastUpdated"
          },
          "lastUpdatedBy": {
            "$ref": "#/components/schemas/lastUpdatedBy"
          },
          "layer": {
            "$ref": "#/components/schemas/layer"
          },
          "legendSet": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "method": {
            "$ref": "#/components/schemas/method"
          },
          "name": {
            "$ref": "#/components/schemas/name"
          },
          "opacity": {
            "$ref": "#/components/schemas/opacity"
          },
          "organisationUnitGroupSet": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "organisationUnitGroupSetDimensions": {
            "items": {
              "properties": {}
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "organisationUnitLevels": {
            "items": {
              "example": 3,
              "format": "int32",
              "maximum": 2147483647,
              "minimum": 2,
              "type": "integer"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "organisationUnitSelectionMode": {
            "$ref": "#/components/schemas/organisationUnitSelectionMode"
          },
          "organisationUnits": {
            "items": {
              "maxProperties": 1,
              "minProperties": 0,
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/id"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "parentGraph": {
            "$ref": "#/components/schemas/parentGraph"
          },
          "parentGraphMap": {
            "maxProperties": 1,
            "minProperties": 1,
            "readOnly": false,
            "type": "object"
          },
          "parentLevel": {
            "$ref": "#/components/schemas/parentLevel"
          },
          "periods": {
            "items": {
              "maxProperties": 1,
              "minProperties": 0,
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/id"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "program": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "programIndicatorDimensions": {
            "items": {
              "properties": {}
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "programStage": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "programStatus": {
            "$ref": "#/components/schemas/programStatus"
          },
          "publicAccess": {
            "$ref": "#/components/schemas/publicAccess"
          },
          "radiusHigh": {
            "$ref": "#/components/schemas/radiusHigh"
          },
          "radiusLow": {
            "$ref": "#/components/schemas/radiusLow"
          },
          "relativePeriods": {
            "maxProperties": 39,
            "minProperties": 1,
            "properties": {
              "biMonthsThisYear": {
                "$ref": "#/components/schemas/biMonthsThisYear"
              },
              "last12Months": {
                "$ref": "#/components/schemas/last12Months"
              },
              "last12Weeks": {
                "$ref": "#/components/schemas/last12Weeks"
              },
              "last14Days": {
                "$ref": "#/components/schemas/last14Days"
              },
              "last2SixMonths": {
                "$ref": "#/components/schemas/last2SixMonths"
              },
              "last3Days": {
                "$ref": "#/components/schemas/last3Days"
              },
              "last3Months": {
                "$ref": "#/components/schemas/last3Months"
              },
              "last4BiWeeks": {
                "$ref": "#/components/schemas/last4BiWeeks"
              },
              "last4Quarters": {
                "$ref": "#/components/schemas/last4Quarters"
              },
              "last4Weeks": {
                "$ref": "#/components/schemas/last4Weeks"
              },
              "last52Weeks": {
                "$ref": "#/components/schemas/last52Weeks"
              },
              "last5FinancialYears": {
                "$ref": "#/components/schemas/last5FinancialYears"
              },
              "last5Years": {
                "$ref": "#/components/schemas/last5Years"
              },
              "last6BiMonths": {
                "$ref": "#/components/schemas/last6BiMonths"
              },
              "last6Months": {
                "$ref": "#/components/schemas/last6Months"
              },
              "last7Days": {
                "$ref": "#/components/schemas/last7Days"
              },
              "lastBiWeek": {
                "$ref": "#/components/schemas/lastBiWeek"
              },
              "lastBimonth": {
                "$ref": "#/components/schemas/lastBimonth"
              },
              "lastFinancialYear": {
                "$ref": "#/components/schemas/lastFinancialYear"
              },
              "lastMonth": {
                "$ref": "#/components/schemas/lastMonth"
              },
              "lastQuarter": {
                "$ref": "#/components/schemas/lastQuarter"
              },
              "lastSixMonth": {
                "$ref": "#/components/schemas/lastSixMonth"
              },
              "lastWeek": {
                "$ref": "#/components/schemas/lastWeek"
              },
              "lastYear": {
                "$ref": "#/components/schemas/lastYear"
              },
              "monthsLastYear": {
                "$ref": "#/components/schemas/monthsLastYear"
              },
              "monthsThisYear": {
                "$ref": "#/components/schemas/monthsThisYear"
              },
              "quartersLastYear": {
                "$ref": "#/components/schemas/quartersLastYear"
              },
              "quartersThisYear": {
                "$ref": "#/components/schemas/quartersThisYear"
              },
              "thisBiWeek": {
                "$ref": "#/components/schemas/thisBiWeek"
              },
              "thisBimonth": {
                "$ref": "#/components/schemas/thisBimonth"
              },
              "thisDay": {
                "$ref": "#/components/schemas/thisDay"
              },
              "thisFinancialYear": {
                "$ref": "#/components/schemas/thisFinancialYear"
              },
              "thisMonth": {
                "$ref": "#/components/schemas/thisMonth"
              },
              "thisQuarter": {
                "$ref": "#/components/schemas/thisQuarter"
              },
              "thisSixMonth": {
                "$ref": "#/components/schemas/thisSixMonth"
              },
              "thisWeek": {
                "$ref": "#/components/schemas/thisWeek"
              },
              "thisYear": {
                "$ref": "#/components/schemas/thisYear"
              },
              "weeksThisYear": {
                "$ref": "#/components/schemas/weeksThisYear"
              },
              "yesterday": {
                "$ref": "#/components/schemas/yesterday"
              }
            },
            "readOnly": false,
            "required": [
              "biMonthsThisYear",
              "last12Months",
              "last12Weeks",
              "last14Days",
              "last2SixMonths",
              "last3Days",
              "last3Months",
              "last4BiWeeks",
              "last4Quarters",
              "last4Weeks",
              "last52Weeks",
              "last5FinancialYears",
              "last5Years",
              "last6BiMonths",
              "last6Months",
              "last7Days",
              "lastBiWeek",
              "lastBimonth",
              "lastFinancialYear",
              "lastMonth",
              "lastQuarter",
              "lastSixMonth",
              "lastWeek",
              "lastYear",
              "monthsLastYear",
              "monthsThisYear",
              "quartersLastYear",
              "quartersThisYear",
              "thisBiWeek",
              "thisBimonth",
              "thisDay",
              "thisFinancialYear",
              "thisMonth",
              "thisQuarter",
              "thisSixMonth",
              "thisWeek",
              "thisYear",
              "weeksThisYear",
              "yesterday"
            ],
            "type": "object"
          },
          "rows": {
            "items": {
              "properties": {}
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "shortName": {
            "$ref": "#/components/schemas/shortName"
          },
          "sortOrder": {
            "$ref": "#/components/schemas/sortOrder"
          },
          "startDate": {
            "$ref": "#/components/schemas/startDate"
          },
          "styleDataItem": {
            "maxProperties": 2,
            "minProperties": 1,
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              },
              "valueType": {
                "example": "INTEGER",
                "format": "enum",
                "type": "string"
              }
            },
            "readOnly": false,
            "required": [
              "id",
              "valueType"
            ],
            "type": "object"
          },
          "subscribed": {
            "$ref": "#/components/schemas/subscribed"
          },
          "subscribers": {
            "items": {
              "properties": {}
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "subtitle": {
            "$ref": "#/components/schemas/subtitle"
          },
          "timeField": {
            "$ref": "#/components/schemas/timeField"
          },
          "title": {
            "$ref": "#/components/schemas/title"
          },
          "topLimit": {
            "$ref": "#/components/schemas/topLimit"
          },
          "trackedEntityType": {
            "format": "uid",
            "maxLength": 11,
            "minLength": 11,
            "type": "string"
          },
          "translations": {
            "items": {
              "properties": {
                "locale": {
                  "$ref": "#/components/schemas/locale"
                },
                "property": {
                  "$ref": "#/components/schemas/property"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "user": {
            "format": "uid",
            "maxLength": 11,
            "minLength": 11,
            "type": "string"
          },
          "userAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userUid": {
                  "$ref": "#/components/schemas/userUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "userGroupAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userGroupUid": {
                  "$ref": "#/components/schemas/userGroupUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "userOrganisationUnit": {
            "$ref": "#/components/schemas/userOrganisationUnit"
          },
          "userOrganisationUnitChildren": {
            "$ref": "#/components/schemas/userOrganisationUnitChildren"
          },
          "userOrganisationUnitGrandChildren": {
            "$ref": "#/components/schemas/userOrganisationUnitGrandChildren"
          }
        },
        "required": [
          "layer"
        ],
        "type": "object",
        "x-status-dhis2": "template"
      },
      "max": {
        "example": null,
        "format": "integer",
        "maxLength": 2147483647,
        "minLength": 0,
        "readOnly": false,
        "type": "string",
        "x-association": "true"
      },
      "maxTeiCountToReturn": {
        "example": 0,
        "format": "int32",
        "maximum": 2147483647,
        "minimum": 0,
        "type": "integer"
      },
      "measureCriteria": {
        "example": "mymeasureCrite",
        "format": "general",
        "maxLength": 255,
        "minLength": 0,
        "type": "string"
      },
      "memberCount": {
        "format": "integer",
        "maxLength": 2147483647,
        "minLength": 0,
        "type": "string",
        "x-association": "true"
      },
      "message": {
        "example": "mymessage",
        "format": "general",
        "maxLength": 2147483647,
        "minLength": 0,
        "type": "string"
      },
      "messageConversation": {
        "properties": {
          "access": {
            "items": {
              "properties": {
                "delete": {
                  "default": false,
                  "type": "boolean"
                },
                "externalize": {
                  "default": false,
                  "type": "boolean"
                },
                "manage": {
                  "default": false,
                  "type": "boolean"
                },
                "read": {
                  "default": true,
                  "type": "boolean"
                },
                "update": {
                  "default": false,
                  "type": "boolean"
                },
                "write": {
                  "default": false,
                  "type": "boolean"
                }
              },
              "readOnly": true
            },
            "maxItems": 1,
            "minItems": 1,
            "properties": {
              "delete": {
                "$ref": "#/components/schemas/delete"
              },
              "externalize": {
                "$ref": "#/components/schemas/externalize"
              },
              "manage": {
                "$ref": "#/components/schemas/manage"
              },
              "read": {
                "$ref": "#/components/schemas/read"
              },
              "update": {
                "$ref": "#/components/schemas/update"
              },
              "write": {
                "$ref": "#/components/schemas/write"
              }
            },
            "readOnly": false,
            "required": [
              "delete",
              "externalize",
              "manage",
              "read",
              "update",
              "write"
            ],
            "type": "object"
          },
          "assignee": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "attributeValues": {
            "items": {
              "properties": {
                "attribute": {
                  "format": "uid",
                  "maxLength": 255,
                  "readOnly": false,
                  "type": "string"
                },
                "created": {
                  "$ref": "#/components/schemas/created"
                },
                "lastUpdated": {
                  "$ref": "#/components/schemas/lastUpdated"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              },
              "required": [
                "attribute"
              ]
            },
            "type": "array"
          },
          "code": {
            "$ref": "#/components/schemas/code"
          },
          "created": {
            "$ref": "#/components/schemas/created"
          },
          "displayName": {
            "$ref": "#/components/schemas/displayName"
          },
          "externalAccess": {
            "$ref": "#/components/schemas/externalAccess"
          },
          "favorite": {
            "type": "boolean"
          },
          "favorites": {
            "items": {
              "$ref": "#/components/schemas/favorite"
            },
            "type": "array"
          },
          "followUp": {
            "$ref": "#/components/schemas/followUp"
          },
          "href": {
            "$ref": "#/components/schemas/href"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "lastMessage": {
            "$ref": "#/components/schemas/lastMessage"
          },
          "lastSender": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "lastSenderFirstname": {
            "$ref": "#/components/schemas/lastSenderFirstname"
          },
          "lastSenderSurname": {
            "$ref": "#/components/schemas/lastSenderSurname"
          },
          "lastUpdated": {
            "$ref": "#/components/schemas/lastUpdated"
          },
          "lastUpdatedBy": {
            "$ref": "#/components/schemas/lastUpdatedBy"
          },
          "messageCount": {
            "$ref": "#/components/schemas/messageCount"
          },
          "messageType": {
            "$ref": "#/components/schemas/messageType"
          },
          "messages": {
            "items": {
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/id"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "name": {
            "$ref": "#/components/schemas/name"
          },
          "priority": {
            "$ref": "#/components/schemas/priority"
          },
          "publicAccess": {
            "$ref": "#/components/schemas/publicAccess"
          },
          "read": {
            "$ref": "#/components/schemas/read"
          },
          "status": {
            "enum": [
              "INVALID",
              "NONE",
              "OPEN",
              "PENDING",
              "SOLVED"
            ],
            "example": "NONE",
            "format": "enum",
            "type": "string"
          },
          "subject": {
            "$ref": "#/components/schemas/subject"
          },
          "translations": {
            "items": {
              "properties": {
                "locale": {
                  "$ref": "#/components/schemas/locale"
                },
                "property": {
                  "$ref": "#/components/schemas/property"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              }
            },
            "type": "array"
          },
          "user": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "userAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userUid": {
                  "$ref": "#/components/schemas/userUid"
                }
              }
            },
            "type": "array"
          },
          "userFirstname": {
            "$ref": "#/components/schemas/userFirstname"
          },
          "userGroupAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userGroupUid": {
                  "$ref": "#/components/schemas/userGroupUid"
                }
              }
            },
            "type": "array"
          },
          "userMessages": {
            "items": {
              "properties": {
                "followUp": {
                  "$ref": "#/components/schemas/followUp"
                },
                "key": {
                  "example": "mykey",
                  "format": "general",
                  "maxLength": 36,
                  "minLength": 36,
                  "type": "string"
                },
                "read": {
                  "$ref": "#/components/schemas/read"
                },
                "user": {
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    }
                  },
                  "required": [
                    "id"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "followUp",
                "key",
                "read",
                "user"
              ],
              "type": "object"
            },
            "type": "array"
          },
          "userSurname": {
            "$ref": "#/components/schemas/userSurname"
          }
        },
        "required": [
          "subject"
        ],
        "type": "object"
      },
      "messageCount": {
        "example": 1,
        "format": "int32",
        "maximum": 2147483647,
        "minimum": 0,
        "type": "integer"
      },
      "messageTemplate": {
        "maxLength": 2147483647,
        "minLength": 0,
        "readOnly": false,
        "type": "string"
      },
      "messageType": {
        "enum": [
          "PRIVATE",
          "SYSTEM",
          "TICKET",
          "VALIDATION_RESULT"
        ],
        "example": "SYSTEM",
        "format": "enum",
        "type": "string"
      },
      "messages": {
        "type": "boolean"
      },
      "metadata": {
        "properties": {}
      },
      "method": {
        "example": 2,
        "format": "int32",
        "maximum": 2147483647,
        "minimum": 0,
        "type": "integer"
      },
      "metric": {
        "enum": [
          "REPORTING_RATE"
        ],
        "example": "REPORTING_RATE",
        "format": "enum",
        "type": "string"
      },
      "min": {
        "example": null,
        "format": "integer",
        "maxLength": 2147483647,
        "minLength": 0,
        "readOnly": false,
        "type": "string"
      },
      "minAttributesRequiredToSearch": {
        "example": 1,
        "format": "int32",
        "maximum": 2147483647,
        "minimum": 0,
        "type": "integer"
      },
      "minDaysFromStart": {
        "example": 0,
        "format": "int32",
        "maximum": 2147483647,
        "minimum": 0,
        "type": "integer"
      },
      "minMaxDataElement": {
        "maxProperties": 6,
        "minProperties": 0,
        "properties": {
          "dataElement": {
            "example": null,
            "format": "uid",
            "maxLength": 11,
            "minLength": 11,
            "readOnly": false,
            "type": "string",
            "x-association": "true"
          },
          "generated": {
            "$ref": "#/components/schemas/generated"
          },
          "max": {
            "$ref": "#/components/schemas/max"
          },
          "min": {
            "$ref": "#/components/schemas/min"
          },
          "optionCombo": {
            "$ref": "#/components/schemas/optionCombo"
          },
          "source": {
            "$ref": "#/components/schemas/source"
          }
        },
        "required": [
          "max",
          "min"
        ],
        "type": "object"
      },
      "missingValueStrategy": {
        "enum": [
          "NEVER_SKIP",
          "SKIP_IF_ALL_VALUES_MISSING",
          "SKIP_IF_ANY_VALUE_MISSING"
        ],
        "example": "SKIP_IF_ALL_VALUES_MISSING",
        "format": "enum",
        "type": "string"
      },
      "mobile": {
        "type": "boolean"
      },
      "monthsLastYear": {
        "type": "boolean"
      },
      "monthsThisYear": {
        "type": "boolean"
      },
      "moreThanOneOrgUnitMessage": {
        "example": "mymoreThanOneOrgUnitMessage",
        "format": "general",
        "maxLength": 2147483647,
        "minLength": 0,
        "type": "string"
      },
      "name": {
        "maxLength": 230,
        "minLength": 1,
        "readOnly": false,
        "type": "string"
      },
      "nationality": {
        "example": "mynationali",
        "format": "general",
        "maxLength": 160,
        "minLength": 0,
        "type": "string"
      },
      "nextExecutionTime": {
        "example": "2018-10-30T02:00:00.000",
        "format": "date-time",
        "maxLength": 255,
        "minLength": 23,
        "type": "string"
      },
      "noSpaceBetweenColumns": {
        "type": "boolean"
      },
      "noUserMessage": {
        "example": "mynoUserMessage",
        "format": "general",
        "maxLength": 2147483647,
        "minLength": 0,
        "type": "string"
      },
      "noValueRequiresComment": {
        "type": "boolean"
      },
      "note": {
        "properties": {
          "access": {
            "maxLength": 255,
            "minLength": 0,
            "readOnly": false,
            "type": "string"
          },
          "displayName": {
            "$ref": "#/components/schemas/displayName"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "userUid": {
            "$ref": "#/components/schemas/userUid"
          }
        }
      },
      "notificationRecipient": {
        "enum": [
          "ORGANISATION_UNIT_CONTACT",
          "USER_GROUP"
        ],
        "format": "enum",
        "readOnly": false,
        "type": "string"
      },
      "notificationSent": {
        "readOnly": false,
        "type": "boolean"
      },
      "notificationTrigger": {
        "enum": [
          "COMPLETION",
          "ENROLLMENT",
          "PROGRAM_RULE",
          "SCHEDULED_DAYS_DUE_DATE",
          "SCHEDULED_DAYS_ENROLLMENT_DATE",
          "SCHEDULED_DAYS_INCIDENT_DATE"
        ],
        "example": "ENROLLMENT",
        "format": "enum",
        "type": "string"
      },
      "notifyCompletingUser": {
        "type": "boolean"
      },
      "notifyParentOrganisationUnitOnly": {
        "readOnly": false,
        "type": "boolean"
      },
      "notifyUsersInHierarchyOnly": {
        "readOnly": false,
        "type": "boolean"
      },
      "number": {
        "type": "boolean"
      },
      "numberType": {
        "enum": [
          "COLUMN_PERCENTAGE",
          "ROW_PERCENTAGE",
          "VALUE"
        ],
        "example": "VALUE",
        "format": "enum",
        "type": "string"
      },
      "numberValue": {
        "format": "double",
        "type": "number"
      },
      "numerator": {
        "example": "mynumerator",
        "format": "general",
        "maxLength": 2147483647,
        "minLength": 0,
        "type": "string"
      },
      "numeratorDescription": {
        "example": "mynumera",
        "format": "general",
        "maxLength": 2147483647,
        "minLength": 0,
        "type": "string"
      },
      "oAuth2Client": {
        "maxProperties": 21,
        "minProperties": 0,
        "properties": {
          "access": {
            "maxProperties": 6,
            "minProperties": 1,
            "properties": {
              "delete": {
                "$ref": "#/components/schemas/delete"
              },
              "externalize": {
                "$ref": "#/components/schemas/externalize"
              },
              "manage": {
                "$ref": "#/components/schemas/manage"
              },
              "read": {
                "$ref": "#/components/schemas/read"
              },
              "update": {
                "$ref": "#/components/schemas/update"
              },
              "write": {
                "$ref": "#/components/schemas/write"
              }
            },
            "readOnly": true,
            "type": "object"
          },
          "attributeValue": {
            "items": {
              "maxProperties": 4,
              "minProperties": 0,
              "properties": {
                "attribute": {
                  "format": "uid",
                  "maxLength": 11,
                  "minLength": 11,
                  "readOnly": false,
                  "type": "string"
                },
                "created": {
                  "$ref": "#/components/schemas/created"
                },
                "lastUpdated": {
                  "$ref": "#/components/schemas/lastUpdated"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": false,
            "type": "array"
          },
          "cid": {
            "$ref": "#/components/schemas/cid"
          },
          "code": {
            "$ref": "#/components/schemas/code"
          },
          "created": {
            "$ref": "#/components/schemas/created"
          },
          "displayName": {
            "$ref": "#/components/schemas/displayName"
          },
          "externalAccess": {
            "$ref": "#/components/schemas/externalAccess"
          },
          "favorite": {
            "type": "boolean"
          },
          "grantType": {
            "items": {
              "maxLength": 255,
              "minLength": 0,
              "type": "string"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": false,
            "type": "array"
          },
          "href": {
            "$ref": "#/components/schemas/href"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "lastUpdated": {
            "$ref": "#/components/schemas/lastUpdated"
          },
          "lastUpdatedBy": {
            "$ref": "#/components/schemas/lastUpdatedBy"
          },
          "name": {
            "$ref": "#/components/schemas/name"
          },
          "publicAccess": {
            "$ref": "#/components/schemas/publicAccess"
          },
          "redirectUri": {
            "items": {
              "maxLength": 255,
              "minLength": 0,
              "type": "string"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": false,
            "type": "array"
          },
          "secret": {
            "$ref": "#/components/schemas/secret"
          },
          "translation": {
            "items": {
              "maxProperties": 0,
              "minProperties": 0,
              "properties": {}
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": false,
            "type": "array"
          },
          "user": {
            "format": "uid",
            "maxLength": 11,
            "minLength": 11,
            "readOnly": false,
            "type": "string"
          },
          "userAccess": {
            "items": {
              "maxProperties": 4,
              "minProperties": 0,
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 8,
                  "minLength": 8,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userUid": {
                  "$ref": "#/components/schemas/userUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": false,
            "type": "array"
          },
          "userGroupAccess": {
            "items": {
              "maxProperties": 4,
              "minProperties": 0,
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 8,
                  "minLength": 8,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userGroupUid": {
                  "$ref": "#/components/schemas/userGroupUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": false,
            "type": "array"
          }
        },
        "required": [
          "cid",
          "name"
        ],
        "x-status-dhis2": "template"
      },
      "offlineLevels": {
        "format": "integer",
        "maxLength": 2147483647,
        "minLength": 0,
        "type": "string"
      },
      "offsetPeriodType": {
        "example": "myoff",
        "format": "general",
        "maxLength": 255,
        "minLength": 0,
        "type": "string"
      },
      "offsetPeriods": {
        "example": 0,
        "format": "int32",
        "maximum": 2147483647,
        "minimum": 0,
        "type": "integer"
      },
      "onlyEnrollOnce": {
        "type": "boolean"
      },
      "opacity": {
        "example": 0.95,
        "format": "double",
        "maximum": 2147483647,
        "minimum": 0,
        "type": "number"
      },
      "openAfterEnrollment": {
        "type": "boolean"
      },
      "openFuturePeriods": {
        "example": 0,
        "format": "int32",
        "maximum": 2147483647,
        "minimum": 0,
        "type": "integer"
      },
      "openingDate": {
        "example": "2010-01-01T00:00:00.000",
        "format": "date-time",
        "maxLength": 23,
        "minLength": 23,
        "type": "string"
      },
      "operator": {
        "enum": [
          "compulsory_pair",
          "equal_to",
          "exclusive_pair",
          "greater_than",
          "greater_than_or_equal_to",
          "less_than",
          "less_than_or_equal_to",
          "not_equal_to"
        ],
        "format": "enum",
        "type": "string"
      },
      "option": {
        "maxProperties": 23,
        "minProperties": 0,
        "properties": {
          "access": {
            "maxProperties": 6,
            "minProperties": 1,
            "properties": {
              "delete": {
                "$ref": "#/components/schemas/delete"
              },
              "externalize": {
                "$ref": "#/components/schemas/externalize"
              },
              "manage": {
                "$ref": "#/components/schemas/manage"
              },
              "read": {
                "$ref": "#/components/schemas/read"
              },
              "update": {
                "$ref": "#/components/schemas/update"
              },
              "write": {
                "$ref": "#/components/schemas/write"
              }
            },
            "readOnly": true,
            "required": [
              "delete",
              "externalize",
              "manage",
              "read",
              "update",
              "write"
            ],
            "type": "object"
          },
          "attributeValues": {
            "items": {
              "properties": {
                "attribute": {
                  "format": "uid",
                  "maxLength": 255,
                  "readOnly": false,
                  "type": "string"
                },
                "created": {
                  "$ref": "#/components/schemas/created"
                },
                "lastUpdated": {
                  "$ref": "#/components/schemas/lastUpdated"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              },
              "required": [
                "attribute"
              ]
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "code": {
            "$ref": "#/components/schemas/code"
          },
          "created": {
            "$ref": "#/components/schemas/created"
          },
          "description": {
            "$ref": "#/components/schemas/description"
          },
          "displayName": {
            "$ref": "#/components/schemas/displayName"
          },
          "externalAccess": {
            "$ref": "#/components/schemas/externalAccess"
          },
          "favorite": {
            "type": "boolean"
          },
          "favorites": {
            "items": {
              "$ref": "#/components/schemas/favorite"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "formName": {
            "$ref": "#/components/schemas/formName"
          },
          "href": {
            "$ref": "#/components/schemas/href"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "lastUpdated": {
            "$ref": "#/components/schemas/lastUpdated"
          },
          "lastUpdatedBy": {
            "$ref": "#/components/schemas/lastUpdatedBy"
          },
          "name": {
            "$ref": "#/components/schemas/name"
          },
          "optionSet": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "publicAccess": {
            "$ref": "#/components/schemas/publicAccess"
          },
          "sortOrder": {
            "$ref": "#/components/schemas/sortOrder"
          },
          "style": {
            "maxProperties": 2,
            "minProperties": 1,
            "properties": {
              "color": {
                "$ref": "#/components/schemas/color"
              },
              "icon": {
                "$ref": "#/components/schemas/icon"
              }
            },
            "readOnly": false,
            "required": [
              "color",
              "icon"
            ],
            "type": "object"
          },
          "translations": {
            "items": {
              "properties": {
                "locale": {
                  "$ref": "#/components/schemas/locale"
                },
                "property": {
                  "$ref": "#/components/schemas/property"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "user": {
            "format": "uid",
            "maxLength": 11,
            "minLength": 11,
            "type": "string",
            "x-association": "true"
          },
          "userAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userUid": {
                  "$ref": "#/components/schemas/userUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "userGroupAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userGroupUid": {
                  "$ref": "#/components/schemas/userGroupUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          }
        },
        "required": [
          "code",
          "name"
        ],
        "type": "object",
        "x-status-dhis2": "template"
      },
      "optionAttribute": {
        "type": "boolean"
      },
      "optionCombo": {
        "example": null,
        "format": "uid",
        "maxLength": 11,
        "minLength": 11,
        "readOnly": false,
        "type": "string"
      },
      "optionGroup": {
        "maxProperties": 27,
        "minProperties": 0,
        "properties": {
          "access": {
            "maxProperties": 6,
            "minProperties": 1,
            "properties": {
              "delete": {
                "$ref": "#/components/schemas/delete"
              },
              "externalize": {
                "$ref": "#/components/schemas/externalize"
              },
              "manage": {
                "$ref": "#/components/schemas/manage"
              },
              "read": {
                "$ref": "#/components/schemas/read"
              },
              "update": {
                "$ref": "#/components/schemas/update"
              },
              "write": {
                "$ref": "#/components/schemas/write"
              }
            },
            "readOnly": true,
            "type": "object"
          },
          "aggregationType": {
            "enum": [
              "AVERAGE",
              "AVERAGE_SUM_ORG_UNIT",
              "COUNT",
              "CUSTOM",
              "DEFAULT",
              "LAST",
              "LAST_AVERAGE_ORG_UNIT",
              "MAX",
              "MIN",
              "NONE",
              "STDDEV",
              "SUM",
              "VARIANCE"
            ],
            "format": "enum",
            "readOnly": false,
            "type": "string"
          },
          "attributeValue": {
            "items": {
              "maxProperties": 4,
              "minProperties": 0,
              "properties": {
                "attribute": {
                  "format": "uid",
                  "maxLength": 11,
                  "minLength": 11,
                  "readOnly": false,
                  "type": "string"
                },
                "created": {
                  "$ref": "#/components/schemas/created"
                },
                "lastUpdated": {
                  "$ref": "#/components/schemas/lastUpdated"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": false,
            "type": "array"
          },
          "code": {
            "$ref": "#/components/schemas/code"
          },
          "created": {
            "$ref": "#/components/schemas/created"
          },
          "description": {
            "$ref": "#/components/schemas/description"
          },
          "dimensionItem": {
            "$ref": "#/components/schemas/dimensionItem"
          },
          "dimensionItemType": {
            "enum": [
              "CATEGORY_OPTION",
              "CATEGORY_OPTION_GROUP",
              "DATA_ELEMENT",
              "DATA_ELEMENT_GROUP",
              "DATA_ELEMENT_OPERAND",
              "INDICATOR",
              "OPTION_GROUP",
              "ORGANISATION_UNIT",
              "ORGANISATION_UNIT_GROUP",
              "PERIOD",
              "PROGRAM_ATTRIBUTE",
              "PROGRAM_DATA_ELEMENT",
              "PROGRAM_INDICATOR",
              "REPORTING_RATE"
            ],
            "format": "enum",
            "readOnly": false,
            "type": "string"
          },
          "displayDescription": {
            "$ref": "#/components/schemas/displayDescription"
          },
          "displayName": {
            "$ref": "#/components/schemas/displayName"
          },
          "displayShortName": {
            "$ref": "#/components/schemas/displayShortName"
          },
          "externalAccess": {
            "$ref": "#/components/schemas/externalAccess"
          },
          "favorite": {
            "type": "boolean"
          },
          "href": {
            "$ref": "#/components/schemas/href"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "lastUpdated": {
            "$ref": "#/components/schemas/lastUpdated"
          },
          "lastUpdatedBy": {
            "$ref": "#/components/schemas/lastUpdatedBy"
          },
          "legendSets": {
            "items": {
              "format": "uid",
              "maxLength": 11,
              "minLength": 11,
              "type": "string"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": false,
            "type": "array"
          },
          "name": {
            "$ref": "#/components/schemas/name"
          },
          "option": {
            "items": {
              "format": "uid",
              "maxLength": 11,
              "minLength": 11,
              "type": "string"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": false,
            "type": "array"
          },
          "optionSet": {
            "format": "uid",
            "maxLength": 11,
            "minLength": 11,
            "readOnly": false,
            "type": "string"
          },
          "publicAccess": {
            "$ref": "#/components/schemas/publicAccess"
          },
          "shortName": {
            "$ref": "#/components/schemas/shortName"
          },
          "translation": {
            "items": {
              "maxProperties": 0,
              "minProperties": 0,
              "properties": {}
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": false,
            "type": "array"
          },
          "user": {
            "format": "uid",
            "maxLength": 11,
            "minLength": 11,
            "readOnly": false,
            "type": "string"
          },
          "userAccess": {
            "items": {
              "maxProperties": 4,
              "minProperties": 0,
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 8,
                  "minLength": 8,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userUid": {
                  "$ref": "#/components/schemas/userUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": false,
            "type": "array"
          },
          "userGroupAccess": {
            "items": {
              "maxProperties": 4,
              "minProperties": 0,
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 8,
                  "minLength": 8,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userGroupUid": {
                  "$ref": "#/components/schemas/userGroupUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": false,
            "type": "array"
          }
        },
        "required": [
          "name",
          "shortName"
        ],
        "x-status-dhis2": "template"
      },
      "optionGroupSet": {
        "maxProperties": 31,
        "minProperties": 0,
        "properties": {
          "access": {
            "maxProperties": 6,
            "minProperties": 1,
            "properties": {
              "delete": {
                "$ref": "#/components/schemas/delete"
              },
              "externalize": {
                "$ref": "#/components/schemas/externalize"
              },
              "manage": {
                "$ref": "#/components/schemas/manage"
              },
              "read": {
                "$ref": "#/components/schemas/read"
              },
              "update": {
                "$ref": "#/components/schemas/update"
              },
              "write": {
                "$ref": "#/components/schemas/write"
              }
            },
            "readOnly": true,
            "type": "object"
          },
          "aggregationType": {
            "enum": [
              "AVERAGE",
              "AVERAGE_SUM_ORG_UNIT",
              "COUNT",
              "CUSTOM",
              "DEFAULT",
              "LAST",
              "LAST_AVERAGE_ORG_UNIT",
              "MAX",
              "MIN",
              "NONE",
              "STDDEV",
              "SUM",
              "VARIANCE"
            ],
            "format": "enum",
            "readOnly": false,
            "type": "string"
          },
          "allItems": {
            "$ref": "#/components/schemas/allItems"
          },
          "attributeValue": {
            "items": {
              "maxProperties": 4,
              "minProperties": 0,
              "properties": {
                "attribute": {
                  "format": "uid",
                  "maxLength": 11,
                  "minLength": 11,
                  "readOnly": false,
                  "type": "string"
                },
                "created": {
                  "$ref": "#/components/schemas/created"
                },
                "lastUpdated": {
                  "$ref": "#/components/schemas/lastUpdated"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": false,
            "type": "array"
          },
          "code": {
            "$ref": "#/components/schemas/code"
          },
          "created": {
            "$ref": "#/components/schemas/created"
          },
          "dataDimension": {
            "$ref": "#/components/schemas/dataDimension"
          },
          "description": {
            "$ref": "#/components/schemas/description"
          },
          "dimension": {
            "$ref": "#/components/schemas/dimension"
          },
          "dimensionType": {
            "enum": [
              "ATTRIBUTE_OPTION_COMBO",
              "CATEGORY",
              "CATEGORY_OPTION_COMBO",
              "CATEGORY_OPTION_GROUP_SET",
              "DATA_COLLAPSED",
              "DATA_ELEMENT_GROUP_SET",
              "DATA_X",
              "OPTION_GROUP_SET",
              "ORGANISATION_UNIT",
              "ORGANISATION_UNIT_GROUP",
              "ORGANISATION_UNIT_GROUP_SET",
              "ORGANISATION_UNIT_LEVEL",
              "PERIOD",
              "PROGRAM_ATTRIBUTE",
              "PROGRAM_DATA_ELEMENT",
              "PROGRAM_INDICATOR",
              "STATIC",
              "VALIDATION_RULE"
            ],
            "format": "enum",
            "readOnly": false,
            "type": "string"
          },
          "displayDescription": {
            "$ref": "#/components/schemas/displayDescription"
          },
          "displayName": {
            "$ref": "#/components/schemas/displayName"
          },
          "displayShortName": {
            "$ref": "#/components/schemas/displayShortName"
          },
          "externalAccess": {
            "$ref": "#/components/schemas/externalAccess"
          },
          "favorite": {
            "type": "boolean"
          },
          "filter": {
            "maxLength": 255,
            "minLength": 0,
            "readOnly": false,
            "type": "string"
          },
          "href": {
            "$ref": "#/components/schemas/href"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "item": {
            "items": {
              "format": "uid",
              "maxLength": 11,
              "minLength": 11,
              "type": "string"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": false,
            "type": "array"
          },
          "lastUpdated": {
            "$ref": "#/components/schemas/lastUpdated"
          },
          "lastUpdatedBy": {
            "$ref": "#/components/schemas/lastUpdatedBy"
          },
          "legendSet": {
            "format": "uid",
            "maxLength": 11,
            "minLength": 11,
            "readOnly": false,
            "type": "string"
          },
          "name": {
            "$ref": "#/components/schemas/name"
          },
          "optionGroup": {
            "items": {
              "format": "uid",
              "maxLength": 11,
              "minLength": 11,
              "type": "string"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": false,
            "type": "array"
          },
          "optionSet": {
            "format": "uid",
            "maxLength": 11,
            "minLength": 11,
            "readOnly": false,
            "type": "string"
          },
          "publicAccess": {
            "$ref": "#/components/schemas/publicAccess"
          },
          "shortName": {
            "$ref": "#/components/schemas/shortName"
          },
          "translation": {
            "items": {
              "maxProperties": 0,
              "minProperties": 0,
              "properties": {}
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": false,
            "type": "array"
          },
          "user": {
            "format": "uid",
            "maxLength": 11,
            "minLength": 11,
            "readOnly": false,
            "type": "string"
          },
          "userAccess": {
            "items": {
              "maxProperties": 4,
              "minProperties": 0,
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 8,
                  "minLength": 8,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userUid": {
                  "$ref": "#/components/schemas/userUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": false,
            "type": "array"
          },
          "userGroupAccess": {
            "items": {
              "maxProperties": 4,
              "minProperties": 0,
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 8,
                  "minLength": 8,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userGroupUid": {
                  "$ref": "#/components/schemas/userGroupUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": false,
            "type": "array"
          }
        },
        "required": [
          "name"
        ],
        "x-status-dhis2": "template"
      },
      "optionId": {
        "example": 4,
        "format": "int32",
        "maximum": 2147483647,
        "minimum": 4,
        "type": "integer"
      },
      "optionSet": {
        "maxProperties": 21,
        "minProperties": 0,
        "properties": {
          "access": {
            "maxProperties": 6,
            "minProperties": 1,
            "properties": {
              "delete": {
                "$ref": "#/components/schemas/delete"
              },
              "externalize": {
                "$ref": "#/components/schemas/externalize"
              },
              "manage": {
                "$ref": "#/components/schemas/manage"
              },
              "read": {
                "$ref": "#/components/schemas/read"
              },
              "update": {
                "$ref": "#/components/schemas/update"
              },
              "write": {
                "$ref": "#/components/schemas/write"
              }
            },
            "readOnly": true,
            "required": [
              "delete",
              "externalize",
              "manage",
              "read",
              "update",
              "write"
            ],
            "type": "object"
          },
          "attributeValues": {
            "items": {
              "properties": {
                "attribute": {
                  "format": "uid",
                  "maxLength": 255,
                  "readOnly": false,
                  "type": "string"
                },
                "created": {
                  "$ref": "#/components/schemas/created"
                },
                "lastUpdated": {
                  "$ref": "#/components/schemas/lastUpdated"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              },
              "required": [
                "attribute"
              ]
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "code": {
            "$ref": "#/components/schemas/code"
          },
          "created": {
            "$ref": "#/components/schemas/created"
          },
          "displayName": {
            "$ref": "#/components/schemas/displayName"
          },
          "externalAccess": {
            "$ref": "#/components/schemas/externalAccess"
          },
          "favorite": {
            "type": "boolean"
          },
          "favorites": {
            "items": {
              "$ref": "#/components/schemas/favorite"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "href": {
            "$ref": "#/components/schemas/href"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "lastUpdated": {
            "$ref": "#/components/schemas/lastUpdated"
          },
          "lastUpdatedBy": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "name": {
            "$ref": "#/components/schemas/name"
          },
          "options": {
            "items": {
              "maxProperties": 1,
              "minProperties": 0,
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/id"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "publicAccess": {
            "$ref": "#/components/schemas/publicAccess"
          },
          "translations": {
            "items": {
              "properties": {
                "locale": {
                  "$ref": "#/components/schemas/locale"
                },
                "property": {
                  "$ref": "#/components/schemas/property"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "user": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "userAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userUid": {
                  "$ref": "#/components/schemas/userUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "userGroupAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userGroupUid": {
                  "$ref": "#/components/schemas/userGroupUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "valueType": {
            "$ref": "#/components/schemas/valueType"
          },
          "version": {
            "example": 1,
            "format": "int32",
            "maximum": 4,
            "minimum": 0,
            "type": "integer"
          }
        },
        "required": [
          "name",
          "valueType"
        ],
        "type": "object",
        "x-status-dhis2": "template"
      },
      "optionSetAttribute": {
        "type": "boolean"
      },
      "optionSetValue": {
        "readOnly": true,
        "type": "boolean"
      },
      "orgUnit": {
        "format": "uid",
        "maxLength": 11,
        "minLength": 11,
        "readOnly": false,
        "type": "string"
      },
      "orgUnitLevel": {
        "example": 3,
        "format": "int32",
        "maximum": 2147483647,
        "minimum": 0,
        "type": "integer"
      },
      "orgUnitLevelName": {
        "format": "general",
        "maxLength": 2147483647,
        "minLength": 0,
        "type": "string"
      },
      "orgUnitName": {
        "readOnly": true,
        "type": "string"
      },
      "organisationUnit": {
        "maxProperties": 2147483647,
        "minProperties": 0,
        "properties": {
          "access": {
            "maxProperties": 6,
            "minProperties": 1,
            "properties": {
              "delete": {
                "$ref": "#/components/schemas/delete"
              },
              "externalize": {
                "$ref": "#/components/schemas/externalize"
              },
              "manage": {
                "$ref": "#/components/schemas/manage"
              },
              "read": {
                "$ref": "#/components/schemas/read"
              },
              "update": {
                "$ref": "#/components/schemas/update"
              },
              "write": {
                "$ref": "#/components/schemas/write"
              }
            },
            "readOnly": true,
            "required": [
              "delete",
              "externalize",
              "manage",
              "read",
              "update",
              "write"
            ],
            "type": "object"
          },
          "address": {
            "$ref": "#/components/schemas/address"
          },
          "aggregationType": {
            "$ref": "#/components/schemas/aggregationType"
          },
          "ancestors": {
            "items": {
              "maxProperties": 1,
              "minProperties": 0,
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/id"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": true,
            "type": "array"
          },
          "attributeValues": {
            "items": {
              "properties": {
                "attribute": {
                  "format": "uid",
                  "maxLength": 255,
                  "readOnly": false,
                  "type": "string"
                },
                "created": {
                  "$ref": "#/components/schemas/created"
                },
                "lastUpdated": {
                  "$ref": "#/components/schemas/lastUpdated"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              },
              "required": [
                "attribute"
              ]
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "child": {
            "items": {
              "format": "uid",
              "maxLength": 11,
              "minLength": 11,
              "type": "string"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": false,
            "type": "array"
          },
          "children": {
            "items": {
              "maxProperties": 1,
              "minProperties": 0,
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/id"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": true,
            "type": "array"
          },
          "closedDate": {
            "$ref": "#/components/schemas/closedDate"
          },
          "code": {
            "$ref": "#/components/schemas/code"
          },
          "comment": {
            "$ref": "#/components/schemas/comment"
          },
          "contactPerson": {
            "$ref": "#/components/schemas/contactPerson"
          },
          "coordinates": {
            "$ref": "#/components/schemas/coordinates"
          },
          "created": {
            "$ref": "#/components/schemas/created"
          },
          "dataSets": {
            "items": {
              "maxProperties": 1,
              "minProperties": 0,
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/id"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": true,
            "type": "array"
          },
          "description": {
            "$ref": "#/components/schemas/description"
          },
          "dimensionItem": {
            "$ref": "#/components/schemas/dimensionItem"
          },
          "dimensionItemType": {
            "enum": [
              "CATEGORY_OPTION",
              "CATEGORY_OPTION_GROUP",
              "DATA_ELEMENT",
              "DATA_ELEMENT_GROUP",
              "DATA_ELEMENT_OPERAND",
              "INDICATOR",
              "OPTION_GROUP",
              "ORGANISATION_UNIT",
              "ORGANISATION_UNIT_GROUP",
              "PERIOD",
              "PROGRAM_ATTRIBUTE",
              "PROGRAM_DATA_ELEMENT",
              "PROGRAM_INDICATOR",
              "REPORTING_RATE"
            ],
            "example": "ORGANISATION_UNIT",
            "format": "enum",
            "type": "string"
          },
          "displayDescription": {
            "$ref": "#/components/schemas/displayDescription"
          },
          "displayName": {
            "$ref": "#/components/schemas/displayName"
          },
          "displayShortName": {
            "$ref": "#/components/schemas/displayShortName"
          },
          "email": {
            "$ref": "#/components/schemas/email"
          },
          "externalAccess": {
            "$ref": "#/components/schemas/externalAccess"
          },
          "favorite": {
            "type": "boolean"
          },
          "favorites": {
            "items": {
              "$ref": "#/components/schemas/favorite"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "featureType": {
            "$ref": "#/components/schemas/featureType"
          },
          "href": {
            "$ref": "#/components/schemas/href"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "lastUpdated": {
            "$ref": "#/components/schemas/lastUpdated"
          },
          "lastUpdatedBy": {
            "$ref": "#/components/schemas/lastUpdatedBy"
          },
          "leaf": {
            "$ref": "#/components/schemas/leaf"
          },
          "legendSets": {
            "items": {
              "format": "uid",
              "maxLength": 11,
              "minLength": 11,
              "type": "string",
              "x-association": "true"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": false,
            "type": "array",
            "x-association": "true"
          },
          "level": {
            "$ref": "#/components/schemas/level"
          },
          "memberCount": {
            "$ref": "#/components/schemas/memberCount"
          },
          "name": {
            "$ref": "#/components/schemas/name"
          },
          "openingDate": {
            "$ref": "#/components/schemas/openingDate"
          },
          "organisationUnit": {
            "items": {
              "format": "uid",
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "organisationUnitGroups": {
            "items": {
              "maxProperties": 1,
              "minProperties": 0,
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/id"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": true,
            "type": "array"
          },
          "parent": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "path": {
            "$ref": "#/components/schemas/path"
          },
          "phoneNumber": {
            "$ref": "#/components/schemas/phoneNumber"
          },
          "programs": {
            "items": {
              "maxProperties": 1,
              "minProperties": 0,
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/id"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": true,
            "type": "array"
          },
          "publicAccess": {
            "$ref": "#/components/schemas/publicAccess"
          },
          "shortName": {
            "$ref": "#/components/schemas/shortName"
          },
          "translations": {
            "items": {
              "maxProperties": 3,
              "minProperties": 0,
              "properties": {
                "locale": {
                  "$ref": "#/components/schemas/locale"
                },
                "property": {
                  "enum": [
                    "NAME",
                    "SHORT_NAME"
                  ],
                  "example": "SHORT_NAME",
                  "format": "enum",
                  "type": "string"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              },
              "required": [
                "locale",
                "property",
                "value"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": true,
            "type": "array"
          },
          "type": {
            "format": "general",
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "url": {
            "$ref": "#/components/schemas/url"
          },
          "userAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userUid": {
                  "$ref": "#/components/schemas/userUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "userGroupAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userGroupUid": {
                  "$ref": "#/components/schemas/userGroupUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "userItem": {
            "items": {
              "format": "uid",
              "maxLength": 11,
              "minLength": 11,
              "type": "string"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": false,
            "type": "array"
          },
          "users": {
            "items": {
              "maxProperties": 1,
              "minProperties": 0,
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/id"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": true,
            "type": "array"
          }
        },
        "required": [
          "name",
          "openingDate",
          "shortName"
        ],
        "type": "object",
        "x-status-dhis2": "template"
      },
      "organisationUnitAttribute": {
        "type": "boolean"
      },
      "organisationUnitGroup": {
        "maxProperties": 2147483647,
        "minProperties": 0,
        "properties": {
          "access": {
            "maxProperties": 6,
            "minProperties": 1,
            "properties": {
              "delete": {
                "$ref": "#/components/schemas/delete"
              },
              "externalize": {
                "$ref": "#/components/schemas/externalize"
              },
              "manage": {
                "$ref": "#/components/schemas/manage"
              },
              "read": {
                "$ref": "#/components/schemas/read"
              },
              "update": {
                "$ref": "#/components/schemas/update"
              },
              "write": {
                "$ref": "#/components/schemas/write"
              }
            },
            "readOnly": true,
            "required": [
              "delete",
              "externalize",
              "manage",
              "read",
              "update",
              "write"
            ],
            "type": "object"
          },
          "aggregationType": {
            "$ref": "#/components/schemas/aggregationType"
          },
          "attributeValues": {
            "items": {
              "properties": {
                "attribute": {
                  "format": "uid",
                  "maxLength": 255,
                  "readOnly": false,
                  "type": "string"
                },
                "created": {
                  "$ref": "#/components/schemas/created"
                },
                "lastUpdated": {
                  "$ref": "#/components/schemas/lastUpdated"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              },
              "required": [
                "attribute"
              ]
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "code": {
            "$ref": "#/components/schemas/code"
          },
          "color": {
            "$ref": "#/components/schemas/color"
          },
          "coordinates": {
            "$ref": "#/components/schemas/coordinates"
          },
          "created": {
            "$ref": "#/components/schemas/created"
          },
          "description": {
            "$ref": "#/components/schemas/description"
          },
          "dimensionItem": {
            "$ref": "#/components/schemas/dimensionItem"
          },
          "dimensionItemType": {
            "enum": [
              "CATEGORY_OPTION",
              "CATEGORY_OPTION_GROUP",
              "DATA_ELEMENT",
              "DATA_ELEMENT_GROUP",
              "DATA_ELEMENT_OPERAND",
              "INDICATOR",
              "OPTION_GROUP",
              "ORGANISATION_UNIT",
              "ORGANISATION_UNIT_GROUP",
              "PERIOD",
              "PROGRAM_ATTRIBUTE",
              "PROGRAM_DATA_ELEMENT",
              "PROGRAM_INDICATOR",
              "REPORTING_RATE"
            ],
            "example": "ORGANISATION_UNIT_GROUP",
            "format": "enum",
            "type": "string"
          },
          "displayDescription": {
            "$ref": "#/components/schemas/displayDescription"
          },
          "displayName": {
            "$ref": "#/components/schemas/displayName"
          },
          "displayShortName": {
            "$ref": "#/components/schemas/displayShortName"
          },
          "externalAccess": {
            "$ref": "#/components/schemas/externalAccess"
          },
          "favorite": {
            "type": "boolean"
          },
          "favorites": {
            "items": {
              "$ref": "#/components/schemas/favorite"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "featureType": {
            "$ref": "#/components/schemas/featureType"
          },
          "groupSets": {
            "items": {
              "maxProperties": 1,
              "minProperties": 0,
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/id"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": true,
            "type": "array"
          },
          "href": {
            "$ref": "#/components/schemas/href"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "lastUpdated": {
            "$ref": "#/components/schemas/lastUpdated"
          },
          "lastUpdatedBy": {
            "$ref": "#/components/schemas/lastUpdatedBy"
          },
          "legendSets": {
            "items": {
              "format": "uid",
              "maxLength": 11,
              "minLength": 11,
              "type": "string",
              "x-association": "true"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": false,
            "type": "array",
            "x-association": "true"
          },
          "name": {
            "$ref": "#/components/schemas/name"
          },
          "organisationUnits": {
            "items": {
              "maxProperties": 1,
              "minProperties": 0,
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/id"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "publicAccess": {
            "$ref": "#/components/schemas/publicAccess"
          },
          "shortName": {
            "$ref": "#/components/schemas/shortName"
          },
          "symbol": {
            "$ref": "#/components/schemas/symbol"
          },
          "translations": {
            "items": {
              "properties": {
                "locale": {
                  "$ref": "#/components/schemas/locale"
                },
                "property": {
                  "$ref": "#/components/schemas/property"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "user": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "userAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userUid": {
                  "$ref": "#/components/schemas/userUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "userGroupAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userGroupUid": {
                  "$ref": "#/components/schemas/userGroupUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          }
        },
        "required": [
          "name"
        ],
        "type": "object",
        "x-status-dhis2": "template"
      },
      "organisationUnitGroupAttribute": {
        "type": "boolean"
      },
      "organisationUnitGroupSet": {
        "maxProperties": 33,
        "minProperties": 0,
        "properties": {
          "access": {
            "maxProperties": 6,
            "minProperties": 1,
            "properties": {
              "delete": {
                "$ref": "#/components/schemas/delete"
              },
              "externalize": {
                "$ref": "#/components/schemas/externalize"
              },
              "manage": {
                "$ref": "#/components/schemas/manage"
              },
              "read": {
                "$ref": "#/components/schemas/read"
              },
              "update": {
                "$ref": "#/components/schemas/update"
              },
              "write": {
                "$ref": "#/components/schemas/write"
              }
            },
            "readOnly": true,
            "required": [
              "delete",
              "externalize",
              "manage",
              "read",
              "update",
              "write"
            ],
            "type": "object"
          },
          "aggregationType": {
            "$ref": "#/components/schemas/aggregationType"
          },
          "allItems": {
            "$ref": "#/components/schemas/allItems"
          },
          "attributeValues": {
            "items": {
              "properties": {
                "attribute": {
                  "format": "uid",
                  "maxLength": 255,
                  "readOnly": false,
                  "type": "string"
                },
                "created": {
                  "$ref": "#/components/schemas/created"
                },
                "lastUpdated": {
                  "$ref": "#/components/schemas/lastUpdated"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              },
              "required": [
                "attribute"
              ]
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "code": {
            "$ref": "#/components/schemas/code"
          },
          "compulsory": {
            "$ref": "#/components/schemas/compulsory"
          },
          "created": {
            "$ref": "#/components/schemas/created"
          },
          "dataDimension": {
            "$ref": "#/components/schemas/dataDimension"
          },
          "description": {
            "$ref": "#/components/schemas/description"
          },
          "dimension": {
            "$ref": "#/components/schemas/dimension"
          },
          "dimensionType": {
            "enum": [
              "ATTRIBUTE_OPTION_COMBO",
              "CATEGORY",
              "CATEGORY_OPTION_COMBO",
              "CATEGORY_OPTION_GROUP_SET",
              "DATA_COLLAPSED",
              "DATA_ELEMENT_GROUP_SET",
              "DATA_X",
              "OPTION_GROUP_SET",
              "ORGANISATION_UNIT",
              "ORGANISATION_UNIT_GROUP",
              "ORGANISATION_UNIT_GROUP_SET",
              "ORGANISATION_UNIT_LEVEL",
              "PERIOD",
              "PROGRAM_ATTRIBUTE",
              "PROGRAM_DATA_ELEMENT",
              "PROGRAM_INDICATOR",
              "STATIC",
              "VALIDATION_RULE"
            ],
            "example": "ORGANISATION_UNIT_GROUP_SET",
            "format": "enum",
            "type": "string"
          },
          "displayDescription": {
            "$ref": "#/components/schemas/displayDescription"
          },
          "displayName": {
            "$ref": "#/components/schemas/displayName"
          },
          "displayShortName": {
            "$ref": "#/components/schemas/displayShortName"
          },
          "externalAccess": {
            "$ref": "#/components/schemas/externalAccess"
          },
          "favorite": {
            "type": "boolean"
          },
          "favorites": {
            "items": {
              "$ref": "#/components/schemas/favorite"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "filter": {
            "format": "general",
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "href": {
            "$ref": "#/components/schemas/href"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "includeSubhierarchyInAnalytics": {
            "$ref": "#/components/schemas/includeSubhierarchyInAnalytics"
          },
          "items": {
            "items": {
              "maxProperties": 1,
              "minProperties": 0,
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/id"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "lastUpdated": {
            "$ref": "#/components/schemas/lastUpdated"
          },
          "lastUpdatedBy": {
            "$ref": "#/components/schemas/lastUpdatedBy"
          },
          "legendSet": {
            "format": "uid",
            "maxLength": 11,
            "minLength": 11,
            "type": "string",
            "x-association": "true"
          },
          "name": {
            "$ref": "#/components/schemas/name"
          },
          "organisationUnitGroups": {
            "items": {
              "maxProperties": 1,
              "minProperties": 0,
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/id"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "publicAccess": {
            "$ref": "#/components/schemas/publicAccess"
          },
          "shortName": {
            "$ref": "#/components/schemas/shortName"
          },
          "translations": {
            "items": {
              "properties": {
                "locale": {
                  "$ref": "#/components/schemas/locale"
                },
                "property": {
                  "$ref": "#/components/schemas/property"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "user": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "userAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userUid": {
                  "$ref": "#/components/schemas/userUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "userGroupAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userGroupUid": {
                  "$ref": "#/components/schemas/userGroupUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          }
        },
        "required": [
          "name"
        ],
        "type": "object",
        "x-status-dhis2": "template"
      },
      "organisationUnitGroupSetAttribute": {
        "type": "boolean"
      },
      "organisationUnitGroupSetDimension": {
        "properties": {}
      },
      "organisationUnitLevel": {
        "maxProperties": 20,
        "minProperties": 0,
        "properties": {
          "access": {
            "maxProperties": 6,
            "minProperties": 1,
            "properties": {
              "delete": {
                "$ref": "#/components/schemas/delete"
              },
              "externalize": {
                "$ref": "#/components/schemas/externalize"
              },
              "manage": {
                "$ref": "#/components/schemas/manage"
              },
              "read": {
                "$ref": "#/components/schemas/read"
              },
              "update": {
                "$ref": "#/components/schemas/update"
              },
              "write": {
                "$ref": "#/components/schemas/write"
              }
            },
            "readOnly": true,
            "required": [
              "delete",
              "externalize",
              "manage",
              "read",
              "update",
              "write"
            ],
            "type": "object"
          },
          "attributeValues": {
            "items": {
              "properties": {
                "attribute": {
                  "format": "uid",
                  "maxLength": 255,
                  "readOnly": false,
                  "type": "string"
                },
                "created": {
                  "$ref": "#/components/schemas/created"
                },
                "lastUpdated": {
                  "$ref": "#/components/schemas/lastUpdated"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              },
              "required": [
                "attribute"
              ]
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "code": {
            "$ref": "#/components/schemas/code"
          },
          "created": {
            "$ref": "#/components/schemas/created"
          },
          "displayName": {
            "$ref": "#/components/schemas/displayName"
          },
          "externalAccess": {
            "$ref": "#/components/schemas/externalAccess"
          },
          "favorite": {
            "type": "boolean"
          },
          "favorites": {
            "items": {
              "$ref": "#/components/schemas/favorite"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "href": {
            "$ref": "#/components/schemas/href"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "lastUpdated": {
            "$ref": "#/components/schemas/lastUpdated"
          },
          "lastUpdatedBy": {
            "$ref": "#/components/schemas/lastUpdatedBy"
          },
          "level": {
            "$ref": "#/components/schemas/level"
          },
          "name": {
            "$ref": "#/components/schemas/name"
          },
          "offlineLevels": {
            "$ref": "#/components/schemas/offlineLevels"
          },
          "publicAccess": {
            "$ref": "#/components/schemas/publicAccess"
          },
          "translations": {
            "items": {
              "properties": {
                "locale": {
                  "$ref": "#/components/schemas/locale"
                },
                "property": {
                  "$ref": "#/components/schemas/property"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "user": {
            "format": "uid",
            "maxLength": 11,
            "minLength": 11,
            "type": "string"
          },
          "userAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userUid": {
                  "$ref": "#/components/schemas/userUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "userGroupAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userGroupUid": {
                  "$ref": "#/components/schemas/userGroupUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          }
        },
        "required": [
          "level",
          "name"
        ],
        "type": "object"
      },
      "organisationUnitSelectionMode": {
        "enum": [
          "ACCESSIBLE",
          "ALL",
          "CAPTURE",
          "CHILDREN",
          "DESCENDANTS",
          "SELECTED"
        ],
        "format": "enum",
        "type": "string"
      },
      "orgunitScope": {
        "type": "boolean"
      },
      "outputType": {
        "enum": [
          "ENROLLMENT",
          "EVENT",
          "TRACKED_ENTITY_INSTANCE"
        ],
        "example": "EVENT",
        "format": "enum",
        "type": "string"
      },
      "page": {
        "format": "int32",
        "maximum": 255,
        "minimum": 1,
        "readOnly": true,
        "type": "integer"
      },
      "pageCount": {
        "format": "int32",
        "maximum": 255,
        "minimum": 1,
        "readOnly": true,
        "type": "integer"
      },
      "pageSize": {
        "format": "int32",
        "maximum": 255,
        "minimum": 1,
        "readOnly": true,
        "type": "integer"
      },
      "pagination": {
        "maxItems": 1,
        "minItems": 1,
        "properties": {
          "page": {
            "format": "int32",
            "maximum": 255,
            "minimum": 1,
            "readOnly": true,
            "type": "integer"
          },
          "pageCount": {
            "format": "int32",
            "maximum": 255,
            "minimum": 1,
            "readOnly": true,
            "type": "integer"
          },
          "pageSize": {
            "format": "int32",
            "maximum": 255,
            "minimum": 1,
            "readOnly": true,
            "type": "integer"
          },
          "total": {
            "description": "total number of items found by the request",
            "format": "int32",
            "maximum": 255,
            "minimum": 0,
            "readOnly": true,
            "type": "integer"
          }
        },
        "readOnly": true,
        "type": "object"
      },
      "paramGrandParentOrganisationUnit": {
        "type": "boolean"
      },
      "paramOrganisationUnit": {
        "type": "boolean"
      },
      "paramParentOrganisationUnit": {
        "type": "boolean"
      },
      "paramReportingPeriod": {
        "type": "boolean"
      },
      "parentGraph": {
        "format": "general",
        "maxLength": 2147483647,
        "minLength": 0,
        "type": "string"
      },
      "parentGraphMap": {
        "properties": {}
      },
      "parentLevel": {
        "example": 0,
        "format": "int32",
        "maximum": 2147483647,
        "minimum": 0,
        "type": "integer"
      },
      "parserType": {
        "enum": [
          "ALERT_PARSER",
          "EVENT_REGISTRATION_PARSER",
          "J2ME_PARSER",
          "KEY_VALUE_PARSER",
          "PROGRAM_STAGE_DATAENTRY_PARSER",
          "TRACKED_ENTITY_REGISTRATION_PARSER",
          "UNREGISTERED_PARSER"
        ],
        "example": "KEY_VALUE_PARSER",
        "format": "enum",
        "type": "string",
        "x-association": "true"
      },
      "passwordLastUpdated": {
        "example": "2015-03-31T13:31:09.206",
        "format": "date-time",
        "maxLength": 23,
        "minLength": 23,
        "type": "string"
      },
      "path": {
        "example": "mypath",
        "format": "general",
        "maxLength": 255,
        "minLength": 0,
        "type": "string"
      },
      "pattern": {
        "example": "mypatter",
        "format": "general",
        "maxLength": 255,
        "type": "string"
      },
      "percentStackedValues": {
        "type": "boolean"
      },
      "period": {
        "properties": {}
      },
      "periodType": {
        "example": "mype",
        "format": "general",
        "maxLength": 255,
        "minLength": 0,
        "type": "string"
      },
      "phase": {
        "enum": [
          "ANALYTICS_TABLE_POPULATED",
          "RESOURCE_TABLE_POPULATED"
        ],
        "format": "enum",
        "readOnly": false,
        "type": "string"
      },
      "phoneNumber": {
        "example": "myphoneNumber",
        "format": "general",
        "maxLength": 80,
        "minLength": 0,
        "type": "string"
      },
      "preGenerateUID": {
        "type": "boolean"
      },
      "predictor": {
        "maxProperties": 2147483647,
        "minProperties": 0,
        "properties": {
          "access": {
            "maxProperties": 6,
            "minProperties": 0,
            "properties": {
              "delete": {
                "$ref": "#/components/schemas/delete"
              },
              "externalize": {
                "$ref": "#/components/schemas/externalize"
              },
              "manage": {
                "$ref": "#/components/schemas/manage"
              },
              "read": {
                "$ref": "#/components/schemas/read"
              },
              "update": {
                "$ref": "#/components/schemas/update"
              },
              "write": {
                "$ref": "#/components/schemas/write"
              }
            },
            "required": [
              "delete",
              "externalize",
              "manage",
              "read",
              "update",
              "write"
            ],
            "type": "object"
          },
          "annualSampleCount": {
            "$ref": "#/components/schemas/annualSampleCount"
          },
          "attributeValues": {
            "items": {
              "properties": {
                "attribute": {
                  "format": "uid",
                  "maxLength": 255,
                  "readOnly": false,
                  "type": "string"
                },
                "created": {
                  "$ref": "#/components/schemas/created"
                },
                "lastUpdated": {
                  "$ref": "#/components/schemas/lastUpdated"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              },
              "required": [
                "attribute"
              ]
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "created": {
            "$ref": "#/components/schemas/created"
          },
          "description": {
            "$ref": "#/components/schemas/description"
          },
          "displayDescription": {
            "$ref": "#/components/schemas/displayDescription"
          },
          "displayName": {
            "$ref": "#/components/schemas/displayName"
          },
          "externalAccess": {
            "$ref": "#/components/schemas/externalAccess"
          },
          "favorite": {
            "type": "boolean"
          },
          "favorites": {
            "items": {
              "$ref": "#/components/schemas/favorite"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "generator": {
            "maxProperties": 4,
            "minProperties": 0,
            "properties": {
              "description": {
                "$ref": "#/components/schemas/description"
              },
              "expression": {
                "$ref": "#/components/schemas/expression"
              },
              "missingValueStrategy": {
                "enum": [
                  "NEVER_SKIP",
                  "SKIP_IF_ALL_VALUES_MISSING",
                  "SKIP_IF_ANY_VALUE_MISSING"
                ],
                "example": "SKIP_IF_ALL_VALUES_MISSING",
                "format": "enum",
                "type": "string"
              },
              "slidingWindow": {
                "type": "boolean"
              }
            },
            "required": [
              "description",
              "expression",
              "missingValueStrategy",
              "slidingWindow"
            ],
            "type": "object"
          },
          "href": {
            "$ref": "#/components/schemas/href"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "lastUpdated": {
            "$ref": "#/components/schemas/lastUpdated"
          },
          "name": {
            "$ref": "#/components/schemas/name"
          },
          "organisationUnitLevels": {
            "items": {
              "maxProperties": 1,
              "minProperties": 0,
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/id"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "output": {
            "maxProperties": 1,
            "minProperties": 0,
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "periodType": {
            "$ref": "#/components/schemas/periodType"
          },
          "predictorGroups": {
            "items": {
              "properties": {}
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "sequentialSampleCount": {
            "$ref": "#/components/schemas/sequentialSampleCount"
          },
          "translations": {
            "items": {
              "properties": {
                "locale": {
                  "$ref": "#/components/schemas/locale"
                },
                "property": {
                  "$ref": "#/components/schemas/property"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "userAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userUid": {
                  "$ref": "#/components/schemas/userUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "userGroupAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userGroupUid": {
                  "$ref": "#/components/schemas/userGroupUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          }
        },
        "required": [
          "access",
          "annualSampleCount",
          "attributeValues",
          "created",
          "description",
          "displayDescription",
          "displayName",
          "externalAccess",
          "favorite",
          "favorites",
          "generator",
          "href",
          "id",
          "lastUpdated",
          "name",
          "organisationUnitLevels",
          "output",
          "periodType",
          "predictorGroups",
          "sequentialSampleCount",
          "translations",
          "userAccesses",
          "userGroupAccesses"
        ],
        "type": "object",
        "x-association": "true"
      },
      "predictorGroup": {
        "properties": {}
      },
      "priority": {
        "enum": [
          "HIGH",
          "LOW",
          "MEDIUM",
          "NONE"
        ],
        "example": "NONE",
        "format": "enum",
        "type": "string"
      },
      "program": {
        "maxProperties": 2147483647,
        "minProperties": 0,
        "properties": {
          "access": {
            "maxProperties": 7,
            "minProperties": 1,
            "properties": {
              "data": {
                "properties": {
                  "read": {
                    "$ref": "#/components/schemas/read"
                  },
                  "write": {
                    "$ref": "#/components/schemas/write"
                  }
                },
                "required": [
                  "read",
                  "write"
                ],
                "type": "object"
              },
              "delete": {
                "$ref": "#/components/schemas/delete"
              },
              "externalize": {
                "$ref": "#/components/schemas/externalize"
              },
              "manage": {
                "$ref": "#/components/schemas/manage"
              },
              "read": {
                "$ref": "#/components/schemas/read"
              },
              "update": {
                "$ref": "#/components/schemas/update"
              },
              "write": {
                "$ref": "#/components/schemas/write"
              }
            },
            "readOnly": true,
            "required": [
              "data",
              "delete",
              "externalize",
              "manage",
              "read",
              "update",
              "write"
            ],
            "type": "object"
          },
          "accessLevel": {
            "$ref": "#/components/schemas/accessLevel"
          },
          "attributeValues": {
            "items": {
              "properties": {
                "attribute": {
                  "format": "uid",
                  "maxLength": 255,
                  "readOnly": false,
                  "type": "string"
                },
                "created": {
                  "$ref": "#/components/schemas/created"
                },
                "lastUpdated": {
                  "$ref": "#/components/schemas/lastUpdated"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              },
              "required": [
                "attribute"
              ]
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "captureCoordinates": {
            "$ref": "#/components/schemas/captureCoordinates"
          },
          "categoryCombo": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "code": {
            "$ref": "#/components/schemas/code"
          },
          "completeEventsExpiryDays": {
            "$ref": "#/components/schemas/completeEventsExpiryDays"
          },
          "created": {
            "$ref": "#/components/schemas/created"
          },
          "dataEntryForm": {
            "format": "uid",
            "maxLength": 11,
            "minLength": 11,
            "type": "string"
          },
          "description": {
            "$ref": "#/components/schemas/description"
          },
          "displayDescription": {
            "$ref": "#/components/schemas/displayDescription"
          },
          "displayFrontPageList": {
            "$ref": "#/components/schemas/displayFrontPageList"
          },
          "displayIncidentDate": {
            "$ref": "#/components/schemas/displayIncidentDate"
          },
          "displayName": {
            "$ref": "#/components/schemas/displayName"
          },
          "displayShortName": {
            "$ref": "#/components/schemas/displayShortName"
          },
          "enrollmentDateLabel": {
            "$ref": "#/components/schemas/enrollmentDateLabel"
          },
          "expiryDays": {
            "$ref": "#/components/schemas/expiryDays"
          },
          "expiryPeriodType": {
            "maxProperties": 1,
            "minProperties": 1,
            "readOnly": false,
            "type": "object"
          },
          "externalAccess": {
            "$ref": "#/components/schemas/externalAccess"
          },
          "favorite": {
            "type": "boolean"
          },
          "favorites": {
            "items": {
              "$ref": "#/components/schemas/favorite"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "featureType": {
            "enum": [
              "NONE",
              "POINT"
            ],
            "example": "NONE",
            "format": "enum",
            "type": "string"
          },
          "formName": {
            "$ref": "#/components/schemas/formName"
          },
          "href": {
            "$ref": "#/components/schemas/href"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "ignoreOverdueEvents": {
            "$ref": "#/components/schemas/ignoreOverdueEvents"
          },
          "incidentDateLabel": {
            "$ref": "#/components/schemas/incidentDateLabel"
          },
          "lastUpdated": {
            "$ref": "#/components/schemas/lastUpdated"
          },
          "lastUpdatedBy": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "maxTeiCountToReturn": {
            "$ref": "#/components/schemas/maxTeiCountToReturn"
          },
          "minAttributesRequiredToSearch": {
            "$ref": "#/components/schemas/minAttributesRequiredToSearch"
          },
          "name": {
            "$ref": "#/components/schemas/name"
          },
          "notificationTemplates": {
            "items": {
              "maxProperties": 1,
              "minProperties": 0,
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/id"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "onlyEnrollOnce": {
            "$ref": "#/components/schemas/onlyEnrollOnce"
          },
          "organisationUnits": {
            "items": {
              "maxProperties": 1,
              "minProperties": 0,
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/id"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "programIndicators": {
            "items": {
              "maxProperties": 1,
              "minProperties": 0,
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/id"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "programRuleVariables": {
            "items": {
              "maxProperties": 1,
              "minProperties": 0,
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/id"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "programSections": {
            "items": {
              "maxProperties": 24,
              "minProperties": 0,
              "properties": {
                "access": {
                  "maxProperties": 6,
                  "minProperties": 1,
                  "properties": {
                    "delete": {
                      "$ref": "#/components/schemas/delete"
                    },
                    "externalize": {
                      "$ref": "#/components/schemas/externalize"
                    },
                    "manage": {
                      "$ref": "#/components/schemas/manage"
                    },
                    "read": {
                      "$ref": "#/components/schemas/read"
                    },
                    "update": {
                      "$ref": "#/components/schemas/update"
                    },
                    "write": {
                      "$ref": "#/components/schemas/write"
                    }
                  },
                  "readOnly": true,
                  "type": "object"
                },
                "attributeValue": {
                  "items": {
                    "maxProperties": 4,
                    "minProperties": 0,
                    "properties": {
                      "attribute": {
                        "format": "uid",
                        "maxLength": 11,
                        "minLength": 11,
                        "readOnly": false,
                        "type": "string"
                      },
                      "created": {
                        "$ref": "#/components/schemas/created"
                      },
                      "lastUpdated": {
                        "$ref": "#/components/schemas/lastUpdated"
                      },
                      "value": {
                        "$ref": "#/components/schemas/value"
                      }
                    }
                  },
                  "maxItems": 2147483647,
                  "minItems": 0,
                  "readOnly": false,
                  "type": "array"
                },
                "code": {
                  "$ref": "#/components/schemas/code"
                },
                "created": {
                  "$ref": "#/components/schemas/created"
                },
                "description": {
                  "$ref": "#/components/schemas/description"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "externalAccess": {
                  "$ref": "#/components/schemas/externalAccess"
                },
                "favorite": {
                  "type": "boolean"
                },
                "formName": {
                  "$ref": "#/components/schemas/formName"
                },
                "href": {
                  "$ref": "#/components/schemas/href"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "lastUpdated": {
                  "$ref": "#/components/schemas/lastUpdated"
                },
                "lastUpdatedBy": {
                  "$ref": "#/components/schemas/lastUpdatedBy"
                },
                "name": {
                  "$ref": "#/components/schemas/name"
                },
                "program": {
                  "format": "uid",
                  "maxLength": 11,
                  "minLength": 11,
                  "readOnly": false,
                  "type": "string"
                },
                "programTrackedEntityAttribute": {
                  "items": {
                    "format": "uid",
                    "maxLength": 11,
                    "minLength": 11,
                    "type": "string"
                  },
                  "maxItems": 2147483647,
                  "minItems": 0,
                  "readOnly": false,
                  "type": "array"
                },
                "publicAccess": {
                  "$ref": "#/components/schemas/publicAccess"
                },
                "renderType": {
                  "maxProperties": 0,
                  "minProperties": 1,
                  "properties": {},
                  "readOnly": false,
                  "type": "object"
                },
                "sortOrder": {
                  "$ref": "#/components/schemas/sortOrder"
                },
                "style": {
                  "maxProperties": 0,
                  "minProperties": 1,
                  "properties": {},
                  "readOnly": false,
                  "type": "object"
                },
                "translation": {
                  "items": {
                    "maxProperties": 0,
                    "minProperties": 0,
                    "properties": {}
                  },
                  "maxItems": 2147483647,
                  "minItems": 0,
                  "readOnly": false,
                  "type": "array"
                },
                "user": {
                  "format": "uid",
                  "maxLength": 11,
                  "minLength": 11,
                  "readOnly": false,
                  "type": "string"
                },
                "userAccess": {
                  "items": {
                    "maxProperties": 4,
                    "minProperties": 0,
                    "properties": {
                      "access": {
                        "format": "access",
                        "maxLength": 8,
                        "minLength": 8,
                        "readOnly": false,
                        "type": "string"
                      },
                      "displayName": {
                        "$ref": "#/components/schemas/displayName"
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "userUid": {
                        "$ref": "#/components/schemas/userUid"
                      }
                    }
                  },
                  "maxItems": 2147483647,
                  "minItems": 0,
                  "readOnly": false,
                  "type": "array"
                },
                "userGroupAccess": {
                  "items": {
                    "maxProperties": 4,
                    "minProperties": 0,
                    "properties": {
                      "access": {
                        "format": "access",
                        "maxLength": 8,
                        "minLength": 8,
                        "readOnly": false,
                        "type": "string"
                      },
                      "displayName": {
                        "$ref": "#/components/schemas/displayName"
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "userGroupUid": {
                        "$ref": "#/components/schemas/userGroupUid"
                      }
                    }
                  },
                  "maxItems": 2147483647,
                  "minItems": 0,
                  "readOnly": false,
                  "type": "array"
                }
              },
              "required": [
                "name",
                "sortOrder"
              ],
              "x-status-dhis2": "template"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "programStages": {
            "items": {
              "maxProperties": 1,
              "minProperties": 0,
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/id"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "programTrackedEntityAttributes": {
            "items": {
              "maxProperties": 24,
              "minProperties": 0,
              "properties": {
                "access": {
                  "maxProperties": 6,
                  "minProperties": 0,
                  "properties": {
                    "delete": {
                      "$ref": "#/components/schemas/delete"
                    },
                    "externalize": {
                      "$ref": "#/components/schemas/externalize"
                    },
                    "manage": {
                      "$ref": "#/components/schemas/manage"
                    },
                    "read": {
                      "$ref": "#/components/schemas/read"
                    },
                    "update": {
                      "$ref": "#/components/schemas/update"
                    },
                    "write": {
                      "$ref": "#/components/schemas/write"
                    }
                  },
                  "required": [
                    "delete",
                    "externalize",
                    "manage",
                    "read",
                    "update",
                    "write"
                  ],
                  "type": "object"
                },
                "allowFutureDate": {
                  "type": "boolean"
                },
                "attributeValues": {
                  "items": {
                    "properties": {
                      "attribute": {
                        "format": "uid",
                        "maxLength": 255,
                        "readOnly": false,
                        "type": "string"
                      },
                      "created": {
                        "$ref": "#/components/schemas/created"
                      },
                      "lastUpdated": {
                        "$ref": "#/components/schemas/lastUpdated"
                      },
                      "value": {
                        "$ref": "#/components/schemas/value"
                      }
                    },
                    "required": [
                      "attribute"
                    ]
                  },
                  "maxItems": 2147483647,
                  "minItems": 0,
                  "type": "array"
                },
                "created": {
                  "$ref": "#/components/schemas/created"
                },
                "displayInList": {
                  "type": "boolean"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "displayShortName": {
                  "$ref": "#/components/schemas/displayShortName"
                },
                "externalAccess": {
                  "$ref": "#/components/schemas/externalAccess"
                },
                "favorite": {
                  "type": "boolean"
                },
                "favorites": {
                  "items": {
                    "$ref": "#/components/schemas/favorite"
                  },
                  "maxItems": 2147483647,
                  "minItems": 0,
                  "type": "array"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "lastUpdated": {
                  "$ref": "#/components/schemas/lastUpdated"
                },
                "mandatory": {
                  "$ref": "#/components/schemas/mandatory"
                },
                "name": {
                  "$ref": "#/components/schemas/name"
                },
                "program": {
                  "maxProperties": 1,
                  "minProperties": 0,
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    }
                  },
                  "required": [
                    "id"
                  ],
                  "type": "object"
                },
                "programTrackedEntityAttributeGroups": {
                  "items": {
                    "maxProperties": 23,
                    "minProperties": 0,
                    "properties": {
                      "access": {
                        "maxProperties": 6,
                        "minProperties": 1,
                        "properties": {
                          "delete": {
                            "$ref": "#/components/schemas/delete"
                          },
                          "externalize": {
                            "$ref": "#/components/schemas/externalize"
                          },
                          "manage": {
                            "$ref": "#/components/schemas/manage"
                          },
                          "read": {
                            "$ref": "#/components/schemas/read"
                          },
                          "update": {
                            "$ref": "#/components/schemas/update"
                          },
                          "write": {
                            "$ref": "#/components/schemas/write"
                          }
                        },
                        "readOnly": true,
                        "type": "object"
                      },
                      "attribute": {
                        "items": {
                          "format": "uid",
                          "maxLength": 11,
                          "minLength": 11,
                          "type": "string"
                        },
                        "maxItems": 2147483647,
                        "minItems": 0,
                        "readOnly": false,
                        "type": "array"
                      },
                      "attributeValue": {
                        "items": {
                          "maxProperties": 4,
                          "minProperties": 0,
                          "properties": {
                            "attribute": {
                              "format": "uid",
                              "maxLength": 11,
                              "minLength": 11,
                              "readOnly": false,
                              "type": "string"
                            },
                            "created": {
                              "$ref": "#/components/schemas/created"
                            },
                            "lastUpdated": {
                              "$ref": "#/components/schemas/lastUpdated"
                            },
                            "value": {
                              "$ref": "#/components/schemas/value"
                            }
                          }
                        },
                        "maxItems": 2147483647,
                        "minItems": 0,
                        "readOnly": false,
                        "type": "array"
                      },
                      "code": {
                        "$ref": "#/components/schemas/code"
                      },
                      "created": {
                        "$ref": "#/components/schemas/created"
                      },
                      "description": {
                        "$ref": "#/components/schemas/description"
                      },
                      "displayDescription": {
                        "$ref": "#/components/schemas/displayDescription"
                      },
                      "displayName": {
                        "$ref": "#/components/schemas/displayName"
                      },
                      "displayShortName": {
                        "$ref": "#/components/schemas/displayShortName"
                      },
                      "externalAccess": {
                        "$ref": "#/components/schemas/externalAccess"
                      },
                      "favorite": {
                        "type": "boolean"
                      },
                      "href": {
                        "$ref": "#/components/schemas/href"
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "lastUpdated": {
                        "$ref": "#/components/schemas/lastUpdated"
                      },
                      "lastUpdatedBy": {
                        "$ref": "#/components/schemas/lastUpdatedBy"
                      },
                      "name": {
                        "$ref": "#/components/schemas/name"
                      },
                      "publicAccess": {
                        "$ref": "#/components/schemas/publicAccess"
                      },
                      "shortName": {
                        "$ref": "#/components/schemas/shortName"
                      },
                      "translation": {
                        "items": {
                          "maxProperties": 0,
                          "minProperties": 0,
                          "properties": {}
                        },
                        "maxItems": 2147483647,
                        "minItems": 0,
                        "readOnly": false,
                        "type": "array"
                      },
                      "uniqunessType": {
                        "$ref": "#/components/schemas/uniqunessType"
                      },
                      "user": {
                        "format": "uid",
                        "maxLength": 11,
                        "minLength": 11,
                        "readOnly": false,
                        "type": "string"
                      },
                      "userAccess": {
                        "items": {
                          "maxProperties": 4,
                          "minProperties": 0,
                          "properties": {
                            "access": {
                              "format": "access",
                              "maxLength": 8,
                              "minLength": 8,
                              "readOnly": false,
                              "type": "string"
                            },
                            "displayName": {
                              "$ref": "#/components/schemas/displayName"
                            },
                            "id": {
                              "$ref": "#/components/schemas/id"
                            },
                            "userUid": {
                              "$ref": "#/components/schemas/userUid"
                            }
                          }
                        },
                        "maxItems": 2147483647,
                        "minItems": 0,
                        "readOnly": false,
                        "type": "array"
                      },
                      "userGroupAccess": {
                        "items": {
                          "maxProperties": 4,
                          "minProperties": 0,
                          "properties": {
                            "access": {
                              "format": "access",
                              "maxLength": 8,
                              "minLength": 8,
                              "readOnly": false,
                              "type": "string"
                            },
                            "displayName": {
                              "$ref": "#/components/schemas/displayName"
                            },
                            "id": {
                              "$ref": "#/components/schemas/id"
                            },
                            "userGroupUid": {
                              "$ref": "#/components/schemas/userGroupUid"
                            }
                          }
                        },
                        "maxItems": 2147483647,
                        "minItems": 0,
                        "readOnly": false,
                        "type": "array"
                      }
                    },
                    "required": [
                      "name",
                      "uniqunessType"
                    ],
                    "x-status-dhis2": "template"
                  },
                  "maxItems": 2147483647,
                  "minItems": 0,
                  "type": "array"
                },
                "renderOptionsAsRadio": {
                  "type": "boolean"
                },
                "searchable": {
                  "type": "boolean"
                },
                "sortOrder": {
                  "$ref": "#/components/schemas/sortOrder"
                },
                "trackedEntityAttribute": {
                  "maxProperties": 1,
                  "minProperties": 0,
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    }
                  },
                  "required": [
                    "id"
                  ],
                  "type": "object"
                },
                "translations": {
                  "items": {
                    "properties": {
                      "locale": {
                        "$ref": "#/components/schemas/locale"
                      },
                      "property": {
                        "$ref": "#/components/schemas/property"
                      },
                      "value": {
                        "$ref": "#/components/schemas/value"
                      }
                    }
                  },
                  "maxItems": 2147483647,
                  "minItems": 0,
                  "type": "array"
                },
                "userAccesses": {
                  "items": {
                    "properties": {
                      "access": {
                        "format": "access",
                        "maxLength": 255,
                        "minLength": 0,
                        "readOnly": false,
                        "type": "string"
                      },
                      "displayName": {
                        "$ref": "#/components/schemas/displayName"
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "userUid": {
                        "$ref": "#/components/schemas/userUid"
                      }
                    }
                  },
                  "maxItems": 2147483647,
                  "minItems": 0,
                  "type": "array"
                },
                "userGroupAccesses": {
                  "items": {
                    "properties": {
                      "access": {
                        "format": "access",
                        "maxLength": 255,
                        "minLength": 0,
                        "readOnly": false,
                        "type": "string"
                      },
                      "displayName": {
                        "$ref": "#/components/schemas/displayName"
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "userGroupUid": {
                        "$ref": "#/components/schemas/userGroupUid"
                      }
                    }
                  },
                  "maxItems": 2147483647,
                  "minItems": 0,
                  "type": "array"
                },
                "valueType": {
                  "enum": [
                    "AGE",
                    "COORDINATE",
                    "DATE",
                    "EMAIL",
                    "NUMBER",
                    "PHONE_NUMBER",
                    "TEXT"
                  ],
                  "example": "TEXT",
                  "format": "enum",
                  "type": "string"
                }
              },
              "required": [
                "access",
                "allowFutureDate",
                "attributeValues",
                "created",
                "displayInList",
                "displayName",
                "displayShortName",
                "externalAccess",
                "favorite",
                "favorites",
                "id",
                "lastUpdated",
                "mandatory",
                "name",
                "program",
                "programTrackedEntityAttributeGroups",
                "renderOptionsAsRadio",
                "searchable",
                "sortOrder",
                "trackedEntityAttribute",
                "translations",
                "userAccesses",
                "userGroupAccesses",
                "valueType"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "programType": {
            "$ref": "#/components/schemas/programType"
          },
          "publicAccess": {
            "$ref": "#/components/schemas/publicAccess"
          },
          "registration": {
            "$ref": "#/components/schemas/registration"
          },
          "relatedProgram": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "selectEnrollmentDatesInFuture": {
            "$ref": "#/components/schemas/selectEnrollmentDatesInFuture"
          },
          "selectIncidentDatesInFuture": {
            "$ref": "#/components/schemas/selectIncidentDatesInFuture"
          },
          "shortName": {
            "$ref": "#/components/schemas/shortName"
          },
          "skipOffline": {
            "$ref": "#/components/schemas/skipOffline"
          },
          "style": {
            "maxProperties": 2,
            "minProperties": 1,
            "properties": {
              "color": {
                "$ref": "#/components/schemas/color"
              },
              "icon": {
                "$ref": "#/components/schemas/icon"
              }
            },
            "readOnly": false,
            "required": [
              "color",
              "icon"
            ],
            "type": "object"
          },
          "trackedEntityType": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "translations": {
            "items": {
              "properties": {
                "locale": {
                  "$ref": "#/components/schemas/locale"
                },
                "property": {
                  "$ref": "#/components/schemas/property"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "useFirstStageDuringRegistration": {
            "$ref": "#/components/schemas/useFirstStageDuringRegistration"
          },
          "user": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "userAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userUid": {
                  "$ref": "#/components/schemas/userUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "userGroupAccesses": {
            "items": {
              "maxProperties": 4,
              "minProperties": 0,
              "properties": {
                "access": {
                  "example": "r-rw----",
                  "format": "access",
                  "maxLength": 8,
                  "minLength": 8,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userGroupUid": {
                  "$ref": "#/components/schemas/userGroupUid"
                }
              },
              "required": [
                "access",
                "displayName",
                "id",
                "userGroupUid"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "userRoles": {
            "items": {
              "maxProperties": 1,
              "minProperties": 0,
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/id"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "version": {
            "example": 4,
            "format": "int32",
            "maximum": 22,
            "minimum": 1,
            "type": "integer"
          },
          "withoutRegistration": {
            "$ref": "#/components/schemas/withoutRegistration"
          },
          "workflow": {
            "$ref": "#/components/schemas/workflow"
          }
        },
        "required": [
          "name",
          "programType",
          "shortName"
        ],
        "type": "object",
        "x-status-dhis2": "template"
      },
      "programAttribute": {
        "type": "boolean"
      },
      "programDataElement": {
        "properties": {
          "access": {
            "maxProperties": 6,
            "minProperties": 1,
            "properties": {
              "delete": {
                "$ref": "#/components/schemas/delete"
              },
              "externalize": {
                "$ref": "#/components/schemas/externalize"
              },
              "manage": {
                "$ref": "#/components/schemas/manage"
              },
              "read": {
                "$ref": "#/components/schemas/read"
              },
              "update": {
                "$ref": "#/components/schemas/update"
              },
              "write": {
                "$ref": "#/components/schemas/write"
              }
            },
            "readOnly": true,
            "type": "object"
          },
          "aggregationType": {
            "enum": [
              "AVERAGE",
              "AVERAGE_SUM_ORG_UNIT",
              "COUNT",
              "CUSTOM",
              "DEFAULT",
              "LAST",
              "LAST_AVERAGE_ORG_UNIT",
              "MAX",
              "MIN",
              "NONE",
              "STDDEV",
              "SUM",
              "VARIANCE"
            ],
            "format": "enum",
            "readOnly": false,
            "type": "string"
          },
          "attributeValue": {
            "items": {
              "maxProperties": 4,
              "minProperties": 0,
              "properties": {
                "attribute": {
                  "format": "uid",
                  "maxLength": 11,
                  "minLength": 11,
                  "readOnly": false,
                  "type": "string"
                },
                "created": {
                  "$ref": "#/components/schemas/created"
                },
                "lastUpdated": {
                  "$ref": "#/components/schemas/lastUpdated"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              },
              "required": [
                "attribute"
              ]
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": false,
            "type": "array"
          },
          "code": {
            "$ref": "#/components/schemas/code"
          },
          "created": {
            "$ref": "#/components/schemas/created"
          },
          "dataElement": {
            "format": "uid",
            "maxLength": 11,
            "minLength": 11,
            "readOnly": false,
            "type": "string"
          },
          "description": {
            "$ref": "#/components/schemas/description"
          },
          "dimensionItem": {
            "$ref": "#/components/schemas/dimensionItem"
          },
          "dimensionItemType": {
            "enum": [
              "CATEGORY_OPTION",
              "CATEGORY_OPTION_GROUP",
              "DATA_ELEMENT",
              "DATA_ELEMENT_GROUP",
              "DATA_ELEMENT_OPERAND",
              "INDICATOR",
              "OPTION_GROUP",
              "ORGANISATION_UNIT",
              "ORGANISATION_UNIT_GROUP",
              "PERIOD",
              "PROGRAM_ATTRIBUTE",
              "PROGRAM_DATA_ELEMENT",
              "PROGRAM_INDICATOR",
              "REPORTING_RATE"
            ],
            "format": "enum",
            "readOnly": false,
            "type": "string"
          },
          "displayDescription": {
            "$ref": "#/components/schemas/displayDescription"
          },
          "displayName": {
            "$ref": "#/components/schemas/displayName"
          },
          "displayShortName": {
            "$ref": "#/components/schemas/displayShortName"
          },
          "externalAccess": {
            "$ref": "#/components/schemas/externalAccess"
          },
          "favorite": {
            "type": "boolean"
          },
          "href": {
            "$ref": "#/components/schemas/href"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "lastUpdated": {
            "$ref": "#/components/schemas/lastUpdated"
          },
          "lastUpdatedBy": {
            "$ref": "#/components/schemas/lastUpdatedBy"
          },
          "legendSets": {
            "items": {
              "format": "uid",
              "maxLength": 11,
              "minLength": 11,
              "type": "string"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": false,
            "type": "array"
          },
          "name": {
            "$ref": "#/components/schemas/name"
          },
          "program": {
            "format": "uid",
            "maxLength": 11,
            "minLength": 11,
            "readOnly": false,
            "type": "string"
          },
          "publicAccess": {
            "$ref": "#/components/schemas/publicAccess"
          },
          "shortName": {
            "$ref": "#/components/schemas/shortName"
          },
          "translation": {
            "items": {
              "maxProperties": 0,
              "minProperties": 0,
              "properties": {}
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": false,
            "type": "array"
          },
          "user": {
            "format": "uid",
            "maxLength": 11,
            "minLength": 11,
            "readOnly": false,
            "type": "string"
          },
          "userAccess": {
            "items": {
              "maxProperties": 4,
              "minProperties": 0,
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 8,
                  "minLength": 8,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userUid": {
                  "$ref": "#/components/schemas/userUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": false,
            "type": "array"
          },
          "userGroupAccess": {
            "items": {
              "maxProperties": 4,
              "minProperties": 0,
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 8,
                  "minLength": 8,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userGroupUid": {
                  "$ref": "#/components/schemas/userGroupUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": false,
            "type": "array"
          },
          "valueType": {
            "enum": [
              "AGE",
              "BOOLEAN",
              "COORDINATE",
              "DATE",
              "DATETIME",
              "EMAIL",
              "FILE_RESOURCE",
              "IMAGE",
              "INTEGER",
              "INTEGER_NEGATIVE",
              "INTEGER_POSITIVE",
              "INTEGER_ZERO_OR_POSITIVE",
              "LETTER",
              "LONG_TEXT",
              "NUMBER",
              "ORGANISATION_UNIT",
              "PERCENTAGE",
              "PHONE_NUMBER",
              "TEXT",
              "TIME",
              "TRACKER_ASSOCIATE",
              "TRUE_ONLY",
              "UNIT_INTERVAL",
              "URL",
              "USERNAME"
            ],
            "format": "enum",
            "readOnly": true,
            "type": "string"
          }
        },
        "x-status-dhis2": "template"
      },
      "programIndicator": {
        "maxProperties": 2147483647,
        "minProperties": 0,
        "properties": {
          "access": {
            "maxProperties": 6,
            "minProperties": 1,
            "properties": {
              "delete": {
                "$ref": "#/components/schemas/delete"
              },
              "externalize": {
                "$ref": "#/components/schemas/externalize"
              },
              "manage": {
                "$ref": "#/components/schemas/manage"
              },
              "read": {
                "$ref": "#/components/schemas/read"
              },
              "update": {
                "$ref": "#/components/schemas/update"
              },
              "write": {
                "$ref": "#/components/schemas/write"
              }
            },
            "readOnly": true,
            "required": [
              "delete",
              "externalize",
              "manage",
              "read",
              "update",
              "write"
            ],
            "type": "object"
          },
          "aggregateExportAttributeOptionCombo": {
            "$ref": "#/components/schemas/aggregateExportAttributeOptionCombo"
          },
          "aggregateExportCategoryOptionCombo": {
            "$ref": "#/components/schemas/aggregateExportCategoryOptionCombo"
          },
          "aggregationType": {
            "enum": [
              "AVERAGE",
              "AVERAGE_SUM_ORG_UNIT",
              "COUNT",
              "CUSTOM",
              "DEFAULT",
              "LAST",
              "LAST_AVERAGE_ORG_UNIT",
              "MAX",
              "MIN",
              "NONE",
              "STDDEV",
              "SUM",
              "VARIANCE"
            ],
            "example": "AVERAGE",
            "format": "enum",
            "type": "string"
          },
          "analyticsPeriodBoundaries": {
            "items": {
              "maxProperties": 15,
              "minProperties": 0,
              "properties": {
                "access": {
                  "maxProperties": 6,
                  "minProperties": 0,
                  "properties": {
                    "delete": {
                      "$ref": "#/components/schemas/delete"
                    },
                    "externalize": {
                      "$ref": "#/components/schemas/externalize"
                    },
                    "manage": {
                      "$ref": "#/components/schemas/manage"
                    },
                    "read": {
                      "$ref": "#/components/schemas/read"
                    },
                    "update": {
                      "$ref": "#/components/schemas/update"
                    },
                    "write": {
                      "$ref": "#/components/schemas/write"
                    }
                  },
                  "required": [
                    "delete",
                    "externalize",
                    "manage",
                    "read",
                    "update",
                    "write"
                  ],
                  "type": "object"
                },
                "analyticsPeriodBoundaryType": {
                  "enum": [
                    "AFTER_START_OF_REPORTING_PERIOD",
                    "BEFORE_END_OF_REPORTING_PERIOD"
                  ],
                  "example": "BEFORE_END_OF_REPORTING_PERIOD",
                  "format": "enum",
                  "type": "string"
                },
                "attributeValues": {
                  "items": {
                    "properties": {
                      "attribute": {
                        "format": "uid",
                        "maxLength": 255,
                        "readOnly": false,
                        "type": "string"
                      },
                      "created": {
                        "$ref": "#/components/schemas/created"
                      },
                      "lastUpdated": {
                        "$ref": "#/components/schemas/lastUpdated"
                      },
                      "value": {
                        "$ref": "#/components/schemas/value"
                      }
                    },
                    "required": [
                      "attribute"
                    ]
                  },
                  "maxItems": 2147483647,
                  "minItems": 0,
                  "type": "array"
                },
                "boundaryTarget": {
                  "enum": [
                    "ENROLLMENT_DATE",
                    "EVENT_DATE"
                  ],
                  "example": "EVENT_DATE",
                  "format": "enum",
                  "type": "string"
                },
                "created": {
                  "$ref": "#/components/schemas/created"
                },
                "externalAccess": {
                  "$ref": "#/components/schemas/externalAccess"
                },
                "favorite": {
                  "type": "boolean"
                },
                "favorites": {
                  "items": {
                    "$ref": "#/components/schemas/favorite"
                  },
                  "maxItems": 2147483647,
                  "minItems": 0,
                  "type": "array"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "lastUpdated": {
                  "$ref": "#/components/schemas/lastUpdated"
                },
                "offsetPeriodType": {
                  "example": "myoff",
                  "format": "general",
                  "maxLength": 6,
                  "minLength": 6,
                  "type": "string"
                },
                "offsetPeriods": {
                  "example": 0,
                  "format": "int32",
                  "maximum": 1,
                  "minimum": 0,
                  "type": "integer"
                },
                "translations": {
                  "items": {
                    "properties": {
                      "locale": {
                        "$ref": "#/components/schemas/locale"
                      },
                      "property": {
                        "$ref": "#/components/schemas/property"
                      },
                      "value": {
                        "$ref": "#/components/schemas/value"
                      }
                    }
                  },
                  "maxItems": 2147483647,
                  "minItems": 0,
                  "type": "array"
                },
                "userAccesses": {
                  "items": {
                    "properties": {
                      "access": {
                        "format": "access",
                        "maxLength": 255,
                        "minLength": 0,
                        "readOnly": false,
                        "type": "string"
                      },
                      "displayName": {
                        "$ref": "#/components/schemas/displayName"
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "userUid": {
                        "$ref": "#/components/schemas/userUid"
                      }
                    }
                  },
                  "maxItems": 2147483647,
                  "minItems": 0,
                  "type": "array"
                },
                "userGroupAccesses": {
                  "items": {
                    "properties": {
                      "access": {
                        "format": "access",
                        "maxLength": 255,
                        "minLength": 0,
                        "readOnly": false,
                        "type": "string"
                      },
                      "displayName": {
                        "$ref": "#/components/schemas/displayName"
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "userGroupUid": {
                        "$ref": "#/components/schemas/userGroupUid"
                      }
                    }
                  },
                  "maxItems": 2147483647,
                  "minItems": 0,
                  "type": "array"
                }
              },
              "required": [
                "access",
                "analyticsPeriodBoundaryType",
                "attributeValues",
                "boundaryTarget",
                "created",
                "externalAccess",
                "favorite",
                "favorites",
                "id",
                "lastUpdated",
                "translations",
                "userAccesses",
                "userGroupAccesses"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "analyticsPeriodBoundary": {
            "items": {
              "format": "uid",
              "maxLength": 11,
              "minLength": 11,
              "type": "string"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": false,
            "type": "array"
          },
          "analyticsType": {
            "$ref": "#/components/schemas/analyticsType"
          },
          "attributeValues": {
            "items": {
              "properties": {
                "attribute": {
                  "format": "uid",
                  "maxLength": 255,
                  "readOnly": false,
                  "type": "string"
                },
                "created": {
                  "$ref": "#/components/schemas/created"
                },
                "lastUpdated": {
                  "$ref": "#/components/schemas/lastUpdated"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              },
              "required": [
                "attribute"
              ]
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "code": {
            "$ref": "#/components/schemas/code"
          },
          "created": {
            "$ref": "#/components/schemas/created"
          },
          "decimals": {
            "$ref": "#/components/schemas/decimals"
          },
          "description": {
            "$ref": "#/components/schemas/description"
          },
          "dimensionItem": {
            "$ref": "#/components/schemas/dimensionItem"
          },
          "dimensionItemType": {
            "enum": [
              "CATEGORY_OPTION",
              "CATEGORY_OPTION_GROUP",
              "DATA_ELEMENT",
              "DATA_ELEMENT_GROUP",
              "DATA_ELEMENT_OPERAND",
              "INDICATOR",
              "OPTION_GROUP",
              "ORGANISATION_UNIT",
              "ORGANISATION_UNIT_GROUP",
              "PERIOD",
              "PROGRAM_ATTRIBUTE",
              "PROGRAM_DATA_ELEMENT",
              "PROGRAM_INDICATOR",
              "REPORTING_RATE"
            ],
            "example": "PROGRAM_INDICATOR",
            "format": "enum",
            "type": "string"
          },
          "displayDescription": {
            "$ref": "#/components/schemas/displayDescription"
          },
          "displayInForm": {
            "$ref": "#/components/schemas/displayInForm"
          },
          "displayName": {
            "$ref": "#/components/schemas/displayName"
          },
          "displayShortName": {
            "$ref": "#/components/schemas/displayShortName"
          },
          "expression": {
            "$ref": "#/components/schemas/expression"
          },
          "externalAccess": {
            "$ref": "#/components/schemas/externalAccess"
          },
          "favorite": {
            "type": "boolean"
          },
          "favorites": {
            "items": {
              "$ref": "#/components/schemas/favorite"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "filter": {
            "example": "myfilter",
            "format": "general",
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "formName": {
            "$ref": "#/components/schemas/formName"
          },
          "href": {
            "$ref": "#/components/schemas/href"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "lastUpdated": {
            "$ref": "#/components/schemas/lastUpdated"
          },
          "lastUpdatedBy": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "legendSets": {
            "items": {
              "format": "uid",
              "maxLength": 11,
              "minLength": 11,
              "type": "string",
              "x-association": "true"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": false,
            "type": "array",
            "x-association": "true"
          },
          "name": {
            "$ref": "#/components/schemas/name"
          },
          "program": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "programIndicatorGroups": {
            "items": {
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/id"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": false,
            "type": "array"
          },
          "publicAccess": {
            "$ref": "#/components/schemas/publicAccess"
          },
          "shortName": {
            "$ref": "#/components/schemas/shortName"
          },
          "style": {
            "maxProperties": 1,
            "minProperties": 1,
            "readOnly": false,
            "type": "object"
          },
          "translations": {
            "items": {
              "properties": {
                "locale": {
                  "$ref": "#/components/schemas/locale"
                },
                "property": {
                  "$ref": "#/components/schemas/property"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "user": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "userAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userUid": {
                  "$ref": "#/components/schemas/userUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "userGroupAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userGroupUid": {
                  "$ref": "#/components/schemas/userGroupUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          }
        },
        "required": [
          "name",
          "program",
          "shortName"
        ],
        "type": "object",
        "x-status-dhis2": "template"
      },
      "programIndicatorAttribute": {
        "type": "boolean"
      },
      "programIndicatorDimension": {
        "properties": {}
      },
      "programIndicatorGroup": {
        "maxProperties": 20,
        "minProperties": 0,
        "properties": {
          "access": {
            "maxProperties": 6,
            "minProperties": 1,
            "properties": {
              "delete": {
                "$ref": "#/components/schemas/delete"
              },
              "externalize": {
                "$ref": "#/components/schemas/externalize"
              },
              "manage": {
                "$ref": "#/components/schemas/manage"
              },
              "read": {
                "$ref": "#/components/schemas/read"
              },
              "update": {
                "$ref": "#/components/schemas/update"
              },
              "write": {
                "$ref": "#/components/schemas/write"
              }
            },
            "readOnly": true,
            "required": [
              "delete",
              "externalize",
              "manage",
              "read",
              "update",
              "write"
            ],
            "type": "object"
          },
          "attributeValues": {
            "items": {
              "properties": {
                "attribute": {
                  "format": "uid",
                  "maxLength": 255,
                  "readOnly": false,
                  "type": "string"
                },
                "created": {
                  "$ref": "#/components/schemas/created"
                },
                "lastUpdated": {
                  "$ref": "#/components/schemas/lastUpdated"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              },
              "required": [
                "attribute"
              ]
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "code": {
            "$ref": "#/components/schemas/code"
          },
          "created": {
            "$ref": "#/components/schemas/created"
          },
          "description": {
            "$ref": "#/components/schemas/description"
          },
          "displayName": {
            "$ref": "#/components/schemas/displayName"
          },
          "externalAccess": {
            "$ref": "#/components/schemas/externalAccess"
          },
          "favorite": {
            "type": "boolean"
          },
          "favorites": {
            "items": {
              "$ref": "#/components/schemas/favorite"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "href": {
            "$ref": "#/components/schemas/href"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "lastUpdated": {
            "$ref": "#/components/schemas/lastUpdated"
          },
          "lastUpdatedBy": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "name": {
            "$ref": "#/components/schemas/name"
          },
          "programIndicators": {
            "items": {
              "maxProperties": 1,
              "minProperties": 0,
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/id"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "publicAccess": {
            "$ref": "#/components/schemas/publicAccess"
          },
          "translations": {
            "items": {
              "properties": {
                "locale": {
                  "$ref": "#/components/schemas/locale"
                },
                "property": {
                  "$ref": "#/components/schemas/property"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "user": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "userAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userUid": {
                  "$ref": "#/components/schemas/userUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "userGroupAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userGroupUid": {
                  "$ref": "#/components/schemas/userGroupUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          }
        },
        "required": [
          "name"
        ],
        "type": "object",
        "x-status-dhis2": "template"
      },
      "programNotificationTemplate": {
        "maxProperties": 29,
        "minProperties": 0,
        "properties": {
          "access": {
            "maxProperties": 6,
            "minProperties": 1,
            "properties": {
              "delete": {
                "$ref": "#/components/schemas/delete"
              },
              "externalize": {
                "$ref": "#/components/schemas/externalize"
              },
              "manage": {
                "$ref": "#/components/schemas/manage"
              },
              "read": {
                "$ref": "#/components/schemas/read"
              },
              "update": {
                "$ref": "#/components/schemas/update"
              },
              "write": {
                "$ref": "#/components/schemas/write"
              }
            },
            "readOnly": true,
            "required": [
              "delete",
              "externalize",
              "manage",
              "read",
              "update",
              "write"
            ],
            "type": "object"
          },
          "attributeValues": {
            "items": {
              "properties": {
                "attribute": {
                  "format": "uid",
                  "maxLength": 255,
                  "readOnly": false,
                  "type": "string"
                },
                "created": {
                  "$ref": "#/components/schemas/created"
                },
                "lastUpdated": {
                  "$ref": "#/components/schemas/lastUpdated"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              },
              "required": [
                "attribute"
              ]
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "code": {
            "$ref": "#/components/schemas/code"
          },
          "created": {
            "$ref": "#/components/schemas/created"
          },
          "deliveryChannels": {
            "items": {
              "enum": [
                "SMS"
              ],
              "example": "SMS",
              "format": "enum",
              "type": "string"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": true,
            "type": "array"
          },
          "displayName": {
            "$ref": "#/components/schemas/displayName"
          },
          "externalAccess": {
            "$ref": "#/components/schemas/externalAccess"
          },
          "favorite": {
            "type": "boolean"
          },
          "favorites": {
            "items": {
              "$ref": "#/components/schemas/favorite"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "href": {
            "$ref": "#/components/schemas/href"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "lastUpdated": {
            "$ref": "#/components/schemas/lastUpdated"
          },
          "lastUpdatedBy": {
            "$ref": "#/components/schemas/lastUpdatedBy"
          },
          "messageTemplate": {
            "$ref": "#/components/schemas/messageTemplate"
          },
          "name": {
            "$ref": "#/components/schemas/name"
          },
          "notificationRecipient": {
            "enum": [
              "DATA_ELEMENT",
              "ORGANISATION_UNIT_CONTACT",
              "PROGRAM_ATTRIBUTE",
              "TRACKED_ENTITY_INSTANCE",
              "USERS_AT_ORGANISATION_UNIT",
              "USER_GROUP"
            ],
            "example": "USER_GROUP",
            "format": "enum",
            "type": "string"
          },
          "notificationTrigger": {
            "$ref": "#/components/schemas/notificationTrigger"
          },
          "notifyParentOrganisationUnitOnly": {
            "$ref": "#/components/schemas/notifyParentOrganisationUnitOnly"
          },
          "notifyUsersInHierarchyOnly": {
            "$ref": "#/components/schemas/notifyUsersInHierarchyOnly"
          },
          "publicAccess": {
            "$ref": "#/components/schemas/publicAccess"
          },
          "recipientDataElement": {
            "$ref": "#/components/schemas/recipientDataElement"
          },
          "recipientProgramAttribute": {
            "$ref": "#/components/schemas/recipientProgramAttribute"
          },
          "recipientUserGroup": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "relativeScheduledDays": {
            "$ref": "#/components/schemas/relativeScheduledDays"
          },
          "subjectTemplate": {
            "$ref": "#/components/schemas/subjectTemplate"
          },
          "translations": {
            "items": {
              "properties": {
                "locale": {
                  "$ref": "#/components/schemas/locale"
                },
                "property": {
                  "$ref": "#/components/schemas/property"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "user": {
            "format": "uid",
            "maxLength": 11,
            "minLength": 11,
            "readOnly": true,
            "type": "string",
            "x-association": "true"
          },
          "userAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userUid": {
                  "$ref": "#/components/schemas/userUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "userGroupAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userGroupUid": {
                  "$ref": "#/components/schemas/userGroupUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          }
        },
        "required": [
          "messageTemplate",
          "name"
        ],
        "type": "object"
      },
      "programRule": {
        "maxProperties": 24,
        "minProperties": 0,
        "properties": {
          "access": {
            "maxProperties": 6,
            "minProperties": 1,
            "properties": {
              "delete": {
                "$ref": "#/components/schemas/delete"
              },
              "externalize": {
                "$ref": "#/components/schemas/externalize"
              },
              "manage": {
                "$ref": "#/components/schemas/manage"
              },
              "read": {
                "$ref": "#/components/schemas/read"
              },
              "update": {
                "$ref": "#/components/schemas/update"
              },
              "write": {
                "$ref": "#/components/schemas/write"
              }
            },
            "readOnly": true,
            "required": [
              "delete",
              "externalize",
              "manage",
              "read",
              "update",
              "write"
            ],
            "type": "object"
          },
          "attributeValues": {
            "items": {
              "properties": {
                "attribute": {
                  "format": "uid",
                  "maxLength": 255,
                  "readOnly": false,
                  "type": "string"
                },
                "created": {
                  "$ref": "#/components/schemas/created"
                },
                "lastUpdated": {
                  "$ref": "#/components/schemas/lastUpdated"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              },
              "required": [
                "attribute"
              ]
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "code": {
            "$ref": "#/components/schemas/code"
          },
          "condition": {
            "$ref": "#/components/schemas/condition"
          },
          "created": {
            "$ref": "#/components/schemas/created"
          },
          "description": {
            "$ref": "#/components/schemas/description"
          },
          "displayName": {
            "$ref": "#/components/schemas/displayName"
          },
          "externalAccess": {
            "$ref": "#/components/schemas/externalAccess"
          },
          "favorite": {
            "type": "boolean"
          },
          "favorites": {
            "items": {
              "$ref": "#/components/schemas/favorite"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "href": {
            "$ref": "#/components/schemas/href"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "lastUpdated": {
            "$ref": "#/components/schemas/lastUpdated"
          },
          "lastUpdatedBy": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "name": {
            "$ref": "#/components/schemas/name"
          },
          "priority": {
            "example": 1,
            "format": "int32",
            "maximum": 2,
            "minimum": 1,
            "type": "integer"
          },
          "program": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "programRuleActions": {
            "items": {
              "maxProperties": 1,
              "minProperties": 0,
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/id"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "programStage": {
            "format": "uid",
            "maxLength": 11,
            "minLength": 11,
            "type": "string",
            "x-association": "true"
          },
          "publicAccess": {
            "$ref": "#/components/schemas/publicAccess"
          },
          "translations": {
            "items": {
              "properties": {
                "locale": {
                  "$ref": "#/components/schemas/locale"
                },
                "property": {
                  "$ref": "#/components/schemas/property"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "user": {
            "format": "uid",
            "maxLength": 11,
            "minLength": 11,
            "type": "string",
            "x-association": "true"
          },
          "userAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userUid": {
                  "$ref": "#/components/schemas/userUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "userGroupAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userGroupUid": {
                  "$ref": "#/components/schemas/userGroupUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          }
        },
        "required": [
          "name",
          "program"
        ],
        "type": "object",
        "x-status-dhis2": "template"
      },
      "programRuleAction": {
        "maxProperties": 31,
        "minProperties": 0,
        "properties": {
          "access": {
            "maxProperties": 6,
            "minProperties": 1,
            "properties": {
              "delete": {
                "$ref": "#/components/schemas/delete"
              },
              "externalize": {
                "$ref": "#/components/schemas/externalize"
              },
              "manage": {
                "$ref": "#/components/schemas/manage"
              },
              "read": {
                "$ref": "#/components/schemas/read"
              },
              "update": {
                "$ref": "#/components/schemas/update"
              },
              "write": {
                "$ref": "#/components/schemas/write"
              }
            },
            "readOnly": true,
            "required": [
              "delete",
              "externalize",
              "manage",
              "read",
              "update",
              "write"
            ],
            "type": "object"
          },
          "attributeValues": {
            "items": {
              "properties": {
                "attribute": {
                  "format": "uid",
                  "maxLength": 255,
                  "readOnly": false,
                  "type": "string"
                },
                "created": {
                  "$ref": "#/components/schemas/created"
                },
                "lastUpdated": {
                  "$ref": "#/components/schemas/lastUpdated"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              },
              "required": [
                "attribute"
              ]
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "code": {
            "$ref": "#/components/schemas/code"
          },
          "content": {
            "$ref": "#/components/schemas/content"
          },
          "created": {
            "$ref": "#/components/schemas/created"
          },
          "data": {
            "$ref": "#/components/schemas/data"
          },
          "dataElement": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "displayName": {
            "$ref": "#/components/schemas/displayName"
          },
          "externalAccess": {
            "$ref": "#/components/schemas/externalAccess"
          },
          "favorite": {
            "type": "boolean"
          },
          "favorites": {
            "items": {
              "$ref": "#/components/schemas/favorite"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "href": {
            "$ref": "#/components/schemas/href"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "lastUpdated": {
            "$ref": "#/components/schemas/lastUpdated"
          },
          "lastUpdatedBy": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "location": {
            "$ref": "#/components/schemas/location"
          },
          "name": {
            "$ref": "#/components/schemas/name"
          },
          "option": {
            "format": "uid",
            "maxLength": 11,
            "minLength": 11,
            "type": "string",
            "x-association": "true"
          },
          "optionGroup": {
            "format": "uid",
            "maxLength": 11,
            "minLength": 11,
            "type": "string",
            "x-association": "true"
          },
          "programIndicator": {
            "format": "uid",
            "maxLength": 11,
            "minLength": 11,
            "type": "string",
            "x-association": "true"
          },
          "programNotificationTemplate": {
            "format": "uid",
            "maxLength": 11,
            "minLength": 11,
            "type": "string",
            "x-association": "true"
          },
          "programRule": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "programRuleActionType": {
            "$ref": "#/components/schemas/programRuleActionType"
          },
          "programStage": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "programStageSection": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "publicAccess": {
            "$ref": "#/components/schemas/publicAccess"
          },
          "trackedEntityAttribute": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "translations": {
            "items": {
              "properties": {
                "locale": {
                  "$ref": "#/components/schemas/locale"
                },
                "property": {
                  "$ref": "#/components/schemas/property"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "user": {
            "format": "uid",
            "maxLength": 11,
            "minLength": 11,
            "type": "string",
            "x-association": "true"
          },
          "userAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userUid": {
                  "$ref": "#/components/schemas/userUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "userGroupAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userGroupUid": {
                  "$ref": "#/components/schemas/userGroupUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          }
        },
        "required": [
          "programRuleActionType"
        ],
        "type": "object",
        "x-status-dhis2": "template"
      },
      "programRuleActionType": {
        "enum": [
          "ASSIGN",
          "CREATEEVENT",
          "DISPLAYKEYVALUEPAIR",
          "DISPLAYTEXT",
          "ERRORONCOMPLETE",
          "HIDEFIELD",
          "HIDEOPTION",
          "HIDEOPTIONGROUP",
          "HIDEPROGRAMSTAGE",
          "HIDESECTION",
          "SCHEDULEMESSAGE",
          "SENDMESSAGE",
          "SETMANDATORYFIELD",
          "SHOWERROR",
          "SHOWOPTIONGROUP",
          "SHOWWARNING",
          "WARNINGONCOMPLETE"
        ],
        "example": "HIDESECTION",
        "format": "enum",
        "type": "string"
      },
      "programRuleVariable": {
        "maxProperties": 2147483647,
        "minProperties": 0,
        "properties": {
          "access": {
            "maxProperties": 6,
            "minProperties": 1,
            "properties": {
              "delete": {
                "$ref": "#/components/schemas/delete"
              },
              "externalize": {
                "$ref": "#/components/schemas/externalize"
              },
              "manage": {
                "$ref": "#/components/schemas/manage"
              },
              "read": {
                "$ref": "#/components/schemas/read"
              },
              "update": {
                "$ref": "#/components/schemas/update"
              },
              "write": {
                "$ref": "#/components/schemas/write"
              }
            },
            "readOnly": true,
            "required": [
              "delete",
              "externalize",
              "manage",
              "read",
              "update",
              "write"
            ],
            "type": "object"
          },
          "attributeValues": {
            "items": {
              "properties": {
                "attribute": {
                  "format": "uid",
                  "maxLength": 255,
                  "readOnly": false,
                  "type": "string"
                },
                "created": {
                  "$ref": "#/components/schemas/created"
                },
                "lastUpdated": {
                  "$ref": "#/components/schemas/lastUpdated"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              },
              "required": [
                "attribute"
              ]
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "code": {
            "$ref": "#/components/schemas/code"
          },
          "created": {
            "$ref": "#/components/schemas/created"
          },
          "dataElement": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "displayName": {
            "$ref": "#/components/schemas/displayName"
          },
          "externalAccess": {
            "$ref": "#/components/schemas/externalAccess"
          },
          "favorite": {
            "type": "boolean"
          },
          "favorites": {
            "items": {
              "$ref": "#/components/schemas/favorite"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "href": {
            "$ref": "#/components/schemas/href"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "lastUpdated": {
            "$ref": "#/components/schemas/lastUpdated"
          },
          "lastUpdatedBy": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "name": {
            "$ref": "#/components/schemas/name"
          },
          "program": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "programRuleVariableSourceType": {
            "$ref": "#/components/schemas/programRuleVariableSourceType"
          },
          "programStage": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "publicAccess": {
            "$ref": "#/components/schemas/publicAccess"
          },
          "trackedEntityAttribute": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "translations": {
            "items": {
              "properties": {
                "locale": {
                  "$ref": "#/components/schemas/locale"
                },
                "property": {
                  "$ref": "#/components/schemas/property"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "useCodeForOptionSet": {
            "$ref": "#/components/schemas/useCodeForOptionSet"
          },
          "user": {
            "format": "uid",
            "maxLength": 11,
            "minLength": 11,
            "type": "string",
            "x-association": "true"
          },
          "userAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userUid": {
                  "$ref": "#/components/schemas/userUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "userGroupAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userGroupUid": {
                  "$ref": "#/components/schemas/userGroupUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          }
        },
        "required": [
          "name",
          "program",
          "programRuleVariableSourceType"
        ],
        "type": "object",
        "x-status-dhis2": "template"
      },
      "programRuleVariableSourceType": {
        "enum": [
          "CALCULATED_VALUE",
          "DATAELEMENT_CURRENT_EVENT",
          "DATAELEMENT_NEWEST_EVENT_PROGRAM",
          "DATAELEMENT_NEWEST_EVENT_PROGRAM_STAGE",
          "DATAELEMENT_PREVIOUS_EVENT",
          "TEI_ATTRIBUTE"
        ],
        "example": "DATAELEMENT_NEWEST_EVENT_PROGRAM",
        "format": "enum",
        "type": "string"
      },
      "programScope": {
        "type": "boolean"
      },
      "programSection": {
        "maxProperties": 2147483647,
        "minProperties": 0,
        "properties": {
          "access": {
            "maxProperties": 6,
            "minProperties": 1,
            "properties": {
              "delete": {
                "$ref": "#/components/schemas/delete"
              },
              "externalize": {
                "$ref": "#/components/schemas/externalize"
              },
              "manage": {
                "$ref": "#/components/schemas/manage"
              },
              "read": {
                "$ref": "#/components/schemas/read"
              },
              "update": {
                "$ref": "#/components/schemas/update"
              },
              "write": {
                "$ref": "#/components/schemas/write"
              }
            },
            "readOnly": true,
            "type": "object"
          },
          "attributeValue": {
            "items": {
              "maxProperties": 4,
              "minProperties": 0,
              "properties": {
                "attribute": {
                  "format": "uid",
                  "maxLength": 11,
                  "minLength": 11,
                  "readOnly": false,
                  "type": "string"
                },
                "created": {
                  "$ref": "#/components/schemas/created"
                },
                "lastUpdated": {
                  "$ref": "#/components/schemas/lastUpdated"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": false,
            "type": "array"
          },
          "code": {
            "$ref": "#/components/schemas/code"
          },
          "created": {
            "$ref": "#/components/schemas/created"
          },
          "description": {
            "$ref": "#/components/schemas/description"
          },
          "displayName": {
            "$ref": "#/components/schemas/displayName"
          },
          "externalAccess": {
            "$ref": "#/components/schemas/externalAccess"
          },
          "favorite": {
            "type": "boolean"
          },
          "formName": {
            "$ref": "#/components/schemas/formName"
          },
          "href": {
            "$ref": "#/components/schemas/href"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "lastUpdated": {
            "$ref": "#/components/schemas/lastUpdated"
          },
          "lastUpdatedBy": {
            "$ref": "#/components/schemas/lastUpdatedBy"
          },
          "name": {
            "$ref": "#/components/schemas/name"
          },
          "program": {
            "format": "uid",
            "maxLength": 11,
            "minLength": 11,
            "readOnly": false,
            "type": "string"
          },
          "programTrackedEntityAttribute": {
            "items": {
              "format": "uid",
              "maxLength": 11,
              "minLength": 11,
              "type": "string"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": false,
            "type": "array"
          },
          "publicAccess": {
            "$ref": "#/components/schemas/publicAccess"
          },
          "renderType": {
            "maxProperties": 0,
            "minProperties": 1,
            "properties": {},
            "readOnly": false,
            "type": "object"
          },
          "sortOrder": {
            "$ref": "#/components/schemas/sortOrder"
          },
          "style": {
            "maxProperties": 0,
            "minProperties": 1,
            "properties": {},
            "readOnly": false,
            "type": "object"
          },
          "translation": {
            "items": {
              "maxProperties": 0,
              "minProperties": 0,
              "properties": {}
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": false,
            "type": "array"
          },
          "user": {
            "format": "uid",
            "maxLength": 11,
            "minLength": 11,
            "readOnly": false,
            "type": "string"
          },
          "userAccess": {
            "items": {
              "maxProperties": 4,
              "minProperties": 0,
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 8,
                  "minLength": 8,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userUid": {
                  "$ref": "#/components/schemas/userUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": false,
            "type": "array"
          },
          "userGroupAccess": {
            "items": {
              "maxProperties": 4,
              "minProperties": 0,
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 8,
                  "minLength": 8,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userGroupUid": {
                  "$ref": "#/components/schemas/userGroupUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": false,
            "type": "array"
          }
        },
        "required": [
          "name",
          "sortOrder"
        ],
        "x-status-dhis2": "template"
      },
      "programStage": {
        "maxProperties": 48,
        "minProperties": 0,
        "properties": {
          "access": {
            "maxProperties": 7,
            "minProperties": 1,
            "properties": {
              "data": {
                "properties": {
                  "read": {
                    "$ref": "#/components/schemas/read"
                  },
                  "write": {
                    "$ref": "#/components/schemas/write"
                  }
                },
                "required": [
                  "read",
                  "write"
                ],
                "type": "object"
              },
              "delete": {
                "$ref": "#/components/schemas/delete"
              },
              "externalize": {
                "$ref": "#/components/schemas/externalize"
              },
              "manage": {
                "$ref": "#/components/schemas/manage"
              },
              "read": {
                "$ref": "#/components/schemas/read"
              },
              "update": {
                "$ref": "#/components/schemas/update"
              },
              "write": {
                "$ref": "#/components/schemas/write"
              }
            },
            "readOnly": true,
            "required": [
              "data",
              "delete",
              "externalize",
              "manage",
              "read",
              "update",
              "write"
            ],
            "type": "object"
          },
          "allowGenerateNextVisit": {
            "$ref": "#/components/schemas/allowGenerateNextVisit"
          },
          "attributeValues": {
            "items": {
              "properties": {
                "attribute": {
                  "format": "uid",
                  "maxLength": 255,
                  "readOnly": false,
                  "type": "string"
                },
                "created": {
                  "$ref": "#/components/schemas/created"
                },
                "lastUpdated": {
                  "$ref": "#/components/schemas/lastUpdated"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              },
              "required": [
                "attribute"
              ]
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "autoGenerateEvent": {
            "$ref": "#/components/schemas/autoGenerateEvent"
          },
          "blockEntryForm": {
            "$ref": "#/components/schemas/blockEntryForm"
          },
          "code": {
            "$ref": "#/components/schemas/code"
          },
          "created": {
            "$ref": "#/components/schemas/created"
          },
          "dataEntryForm": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "description": {
            "$ref": "#/components/schemas/description"
          },
          "displayDescription": {
            "$ref": "#/components/schemas/displayDescription"
          },
          "displayGenerateEventBox": {
            "$ref": "#/components/schemas/displayGenerateEventBox"
          },
          "displayName": {
            "$ref": "#/components/schemas/displayName"
          },
          "dueDateLabel": {
            "$ref": "#/components/schemas/dueDateLabel"
          },
          "executionDateLabel": {
            "$ref": "#/components/schemas/executionDateLabel"
          },
          "externalAccess": {
            "$ref": "#/components/schemas/externalAccess"
          },
          "favorite": {
            "type": "boolean"
          },
          "favorites": {
            "items": {
              "$ref": "#/components/schemas/favorite"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "featureType": {
            "$ref": "#/components/schemas/featureType"
          },
          "formName": {
            "$ref": "#/components/schemas/formName"
          },
          "formType": {
            "enum": [
              "CUSTOM",
              "DEFAULT",
              "SECTION",
              "SECTION_MULTIORG"
            ],
            "example": "DEFAULT",
            "format": "enum",
            "readOnly": true,
            "type": "string"
          },
          "generatedByEnrollmentDate": {
            "$ref": "#/components/schemas/generatedByEnrollmentDate"
          },
          "hideDueDate": {
            "$ref": "#/components/schemas/hideDueDate"
          },
          "href": {
            "$ref": "#/components/schemas/href"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "lastUpdated": {
            "$ref": "#/components/schemas/lastUpdated"
          },
          "lastUpdatedBy": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "minDaysFromStart": {
            "$ref": "#/components/schemas/minDaysFromStart"
          },
          "name": {
            "$ref": "#/components/schemas/name"
          },
          "notificationTemplates": {
            "items": {
              "maxProperties": 1,
              "minProperties": 0,
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/id"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "openAfterEnrollment": {
            "$ref": "#/components/schemas/openAfterEnrollment"
          },
          "periodType": {
            "$ref": "#/components/schemas/periodType"
          },
          "preGenerateUID": {
            "$ref": "#/components/schemas/preGenerateUID"
          },
          "program": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "programStageDataElements": {
            "items": {
              "maxProperties": 21,
              "minProperties": 0,
              "properties": {
                "access": {
                  "maxProperties": 6,
                  "minProperties": 0,
                  "properties": {
                    "delete": {
                      "$ref": "#/components/schemas/delete"
                    },
                    "externalize": {
                      "$ref": "#/components/schemas/externalize"
                    },
                    "manage": {
                      "$ref": "#/components/schemas/manage"
                    },
                    "read": {
                      "$ref": "#/components/schemas/read"
                    },
                    "update": {
                      "$ref": "#/components/schemas/update"
                    },
                    "write": {
                      "$ref": "#/components/schemas/write"
                    }
                  },
                  "required": [
                    "delete",
                    "externalize",
                    "manage",
                    "read",
                    "update",
                    "write"
                  ],
                  "type": "object"
                },
                "allowFutureDate": {
                  "$ref": "#/components/schemas/allowFutureDate"
                },
                "allowProvidedElsewhere": {
                  "type": "boolean"
                },
                "attributeValues": {
                  "items": {
                    "properties": {
                      "attribute": {
                        "format": "uid",
                        "maxLength": 255,
                        "readOnly": false,
                        "type": "string"
                      },
                      "created": {
                        "$ref": "#/components/schemas/created"
                      },
                      "lastUpdated": {
                        "$ref": "#/components/schemas/lastUpdated"
                      },
                      "value": {
                        "$ref": "#/components/schemas/value"
                      }
                    },
                    "required": [
                      "attribute"
                    ]
                  },
                  "maxItems": 2147483647,
                  "minItems": 0,
                  "type": "array"
                },
                "compulsory": {
                  "$ref": "#/components/schemas/compulsory"
                },
                "created": {
                  "$ref": "#/components/schemas/created"
                },
                "dataElement": {
                  "maxProperties": 1,
                  "minProperties": 0,
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    }
                  },
                  "required": [
                    "id"
                  ],
                  "type": "object"
                },
                "displayInReports": {
                  "type": "boolean"
                },
                "externalAccess": {
                  "$ref": "#/components/schemas/externalAccess"
                },
                "favorite": {
                  "type": "boolean"
                },
                "favorites": {
                  "items": {
                    "$ref": "#/components/schemas/favorite"
                  },
                  "maxItems": 2147483647,
                  "minItems": 0,
                  "type": "array"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "lastUpdated": {
                  "$ref": "#/components/schemas/lastUpdated"
                },
                "lastUpdatedBy": {
                  "maxProperties": 1,
                  "minProperties": 0,
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    }
                  },
                  "required": [
                    "id"
                  ],
                  "type": "object"
                },
                "programStage": {
                  "maxProperties": 1,
                  "minProperties": 0,
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    }
                  },
                  "required": [
                    "id"
                  ],
                  "type": "object"
                },
                "renderOptionsAsRadio": {
                  "$ref": "#/components/schemas/renderOptionsAsRadio"
                },
                "skipSynchronization": {
                  "$ref": "#/components/schemas/skipSynchronization"
                },
                "sortOrder": {
                  "$ref": "#/components/schemas/sortOrder"
                },
                "translations": {
                  "items": {
                    "properties": {
                      "locale": {
                        "$ref": "#/components/schemas/locale"
                      },
                      "property": {
                        "$ref": "#/components/schemas/property"
                      },
                      "value": {
                        "$ref": "#/components/schemas/value"
                      }
                    }
                  },
                  "maxItems": 2147483647,
                  "minItems": 0,
                  "type": "array"
                },
                "userAccesses": {
                  "items": {
                    "properties": {
                      "access": {
                        "format": "access",
                        "maxLength": 255,
                        "minLength": 0,
                        "readOnly": false,
                        "type": "string"
                      },
                      "displayName": {
                        "$ref": "#/components/schemas/displayName"
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "userUid": {
                        "$ref": "#/components/schemas/userUid"
                      }
                    }
                  },
                  "maxItems": 2147483647,
                  "minItems": 0,
                  "type": "array"
                },
                "userGroupAccesses": {
                  "items": {
                    "properties": {
                      "access": {
                        "format": "access",
                        "maxLength": 255,
                        "minLength": 0,
                        "readOnly": false,
                        "type": "string"
                      },
                      "displayName": {
                        "$ref": "#/components/schemas/displayName"
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "userGroupUid": {
                        "$ref": "#/components/schemas/userGroupUid"
                      }
                    }
                  },
                  "maxItems": 2147483647,
                  "minItems": 0,
                  "type": "array"
                }
              },
              "required": [
                "access",
                "allowFutureDate",
                "allowProvidedElsewhere",
                "attributeValues",
                "compulsory",
                "created",
                "dataElement",
                "externalAccess",
                "favorite",
                "favorites",
                "id",
                "lastUpdated",
                "programStage",
                "skipSynchronization",
                "sortOrder",
                "translations",
                "userAccesses",
                "userGroupAccesses"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "programStageSections": {
            "items": {
              "maxProperties": 1,
              "minProperties": 0,
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/id"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "publicAccess": {
            "$ref": "#/components/schemas/publicAccess"
          },
          "remindCompleted": {
            "$ref": "#/components/schemas/remindCompleted"
          },
          "repeatable": {
            "$ref": "#/components/schemas/repeatable"
          },
          "reportDateToUse": {
            "$ref": "#/components/schemas/reportDateToUse"
          },
          "sortOrder": {
            "$ref": "#/components/schemas/sortOrder"
          },
          "standardInterval": {
            "$ref": "#/components/schemas/standardInterval"
          },
          "style": {
            "maxProperties": 1,
            "minProperties": 1,
            "readOnly": false,
            "type": "object"
          },
          "translations": {
            "items": {
              "properties": {
                "locale": {
                  "$ref": "#/components/schemas/locale"
                },
                "property": {
                  "$ref": "#/components/schemas/property"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "user": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "userAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userUid": {
                  "$ref": "#/components/schemas/userUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "userGroupAccesses": {
            "items": {
              "maxProperties": 4,
              "minProperties": 0,
              "properties": {
                "access": {
                  "example": "r-rw----",
                  "format": "access",
                  "maxLength": 8,
                  "minLength": 8,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userGroupUid": {
                  "$ref": "#/components/schemas/userGroupUid"
                }
              },
              "required": [
                "access",
                "displayName",
                "id",
                "userGroupUid"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "validCompleteOnly": {
            "$ref": "#/components/schemas/validCompleteOnly"
          },
          "validationStrategy": {
            "$ref": "#/components/schemas/validationStrategy"
          }
        },
        "required": [
          "access",
          "allowGenerateNextVisit",
          "attributeValues",
          "autoGenerateEvent",
          "blockEntryForm",
          "created",
          "displayGenerateEventBox",
          "displayName",
          "externalAccess",
          "favorite",
          "favorites",
          "featureType",
          "formType",
          "generatedByEnrollmentDate",
          "hideDueDate",
          "href",
          "id",
          "lastUpdated",
          "minDaysFromStart",
          "name",
          "notificationTemplates",
          "openAfterEnrollment",
          "program",
          "programStageDataElements",
          "programStageSections",
          "publicAccess",
          "remindCompleted",
          "repeatable",
          "sortOrder",
          "translations",
          "userAccesses",
          "userGroupAccesses",
          "validationStrategy"
        ],
        "type": "object",
        "x-status-dhis2": "template"
      },
      "programStageAttribute": {
        "type": "boolean"
      },
      "programStageSection": {
        "maxProperties": 26,
        "minProperties": 0,
        "properties": {
          "access": {
            "maxProperties": 6,
            "minProperties": 1,
            "properties": {
              "delete": {
                "$ref": "#/components/schemas/delete"
              },
              "externalize": {
                "$ref": "#/components/schemas/externalize"
              },
              "manage": {
                "$ref": "#/components/schemas/manage"
              },
              "read": {
                "$ref": "#/components/schemas/read"
              },
              "update": {
                "$ref": "#/components/schemas/update"
              },
              "write": {
                "$ref": "#/components/schemas/write"
              }
            },
            "readOnly": true,
            "required": [
              "delete",
              "externalize",
              "manage",
              "read",
              "update",
              "write"
            ],
            "type": "object"
          },
          "attributeValues": {
            "items": {
              "properties": {
                "attribute": {
                  "format": "uid",
                  "maxLength": 255,
                  "readOnly": false,
                  "type": "string"
                },
                "created": {
                  "$ref": "#/components/schemas/created"
                },
                "lastUpdated": {
                  "$ref": "#/components/schemas/lastUpdated"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              },
              "required": [
                "attribute"
              ]
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "code": {
            "$ref": "#/components/schemas/code"
          },
          "created": {
            "$ref": "#/components/schemas/created"
          },
          "dataElements": {
            "items": {
              "maxProperties": 1,
              "minProperties": 0,
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/id"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "description": {
            "$ref": "#/components/schemas/description"
          },
          "displayName": {
            "$ref": "#/components/schemas/displayName"
          },
          "externalAccess": {
            "$ref": "#/components/schemas/externalAccess"
          },
          "favorite": {
            "type": "boolean"
          },
          "favorites": {
            "items": {
              "$ref": "#/components/schemas/favorite"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "formName": {
            "$ref": "#/components/schemas/formName"
          },
          "href": {
            "$ref": "#/components/schemas/href"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "lastUpdated": {
            "$ref": "#/components/schemas/lastUpdated"
          },
          "lastUpdatedBy": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "name": {
            "$ref": "#/components/schemas/name"
          },
          "programIndicators": {
            "items": {
              "maxProperties": 1,
              "minProperties": 0,
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/id"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "programStage": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "publicAccess": {
            "$ref": "#/components/schemas/publicAccess"
          },
          "renderType": {
            "maxProperties": 1,
            "minProperties": 1,
            "properties": {
              "MOBILE": {
                "properties": {
                  "type": {
                    "enum": [
                      "LISTING",
                      "MATRIX",
                      "SEQUENTIAL"
                    ],
                    "example": "SEQUENTIAL",
                    "format": "enum",
                    "type": "string"
                  }
                },
                "required": [
                  "type"
                ],
                "type": "object"
              }
            },
            "readOnly": false,
            "required": [
              "MOBILE"
            ],
            "type": "object"
          },
          "sortOrder": {
            "$ref": "#/components/schemas/sortOrder"
          },
          "style": {
            "maxProperties": 1,
            "minProperties": 1,
            "readOnly": false,
            "type": "object"
          },
          "translations": {
            "items": {
              "properties": {
                "locale": {
                  "$ref": "#/components/schemas/locale"
                },
                "property": {
                  "$ref": "#/components/schemas/property"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "user": {
            "format": "uid",
            "maxLength": 11,
            "minLength": 11,
            "type": "string",
            "x-association": "true"
          },
          "userAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userUid": {
                  "$ref": "#/components/schemas/userUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "userGroupAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userGroupUid": {
                  "$ref": "#/components/schemas/userGroupUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          }
        },
        "required": [
          "name",
          "sortOrder"
        ],
        "type": "object",
        "x-status-dhis2": "template"
      },
      "programStatus": {
        "enum": [
          "ACTIVE",
          "CANCELLED",
          "COMPLETED"
        ],
        "format": "enum",
        "type": "string"
      },
      "programTrackedEntityAttributeGroup": {
        "maxProperties": 23,
        "minProperties": 0,
        "properties": {
          "access": {
            "maxProperties": 6,
            "minProperties": 1,
            "properties": {
              "delete": {
                "$ref": "#/components/schemas/delete"
              },
              "externalize": {
                "$ref": "#/components/schemas/externalize"
              },
              "manage": {
                "$ref": "#/components/schemas/manage"
              },
              "read": {
                "$ref": "#/components/schemas/read"
              },
              "update": {
                "$ref": "#/components/schemas/update"
              },
              "write": {
                "$ref": "#/components/schemas/write"
              }
            },
            "readOnly": true,
            "type": "object"
          },
          "attribute": {
            "items": {
              "format": "uid",
              "maxLength": 11,
              "minLength": 11,
              "type": "string"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": false,
            "type": "array"
          },
          "attributeValue": {
            "items": {
              "maxProperties": 4,
              "minProperties": 0,
              "properties": {
                "attribute": {
                  "format": "uid",
                  "maxLength": 11,
                  "minLength": 11,
                  "readOnly": false,
                  "type": "string"
                },
                "created": {
                  "$ref": "#/components/schemas/created"
                },
                "lastUpdated": {
                  "$ref": "#/components/schemas/lastUpdated"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": false,
            "type": "array"
          },
          "code": {
            "$ref": "#/components/schemas/code"
          },
          "created": {
            "$ref": "#/components/schemas/created"
          },
          "description": {
            "$ref": "#/components/schemas/description"
          },
          "displayDescription": {
            "$ref": "#/components/schemas/displayDescription"
          },
          "displayName": {
            "$ref": "#/components/schemas/displayName"
          },
          "displayShortName": {
            "$ref": "#/components/schemas/displayShortName"
          },
          "externalAccess": {
            "$ref": "#/components/schemas/externalAccess"
          },
          "favorite": {
            "type": "boolean"
          },
          "href": {
            "$ref": "#/components/schemas/href"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "lastUpdated": {
            "$ref": "#/components/schemas/lastUpdated"
          },
          "lastUpdatedBy": {
            "$ref": "#/components/schemas/lastUpdatedBy"
          },
          "name": {
            "$ref": "#/components/schemas/name"
          },
          "publicAccess": {
            "$ref": "#/components/schemas/publicAccess"
          },
          "shortName": {
            "$ref": "#/components/schemas/shortName"
          },
          "translation": {
            "items": {
              "maxProperties": 0,
              "minProperties": 0,
              "properties": {}
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": false,
            "type": "array"
          },
          "uniqunessType": {
            "$ref": "#/components/schemas/uniqunessType"
          },
          "user": {
            "format": "uid",
            "maxLength": 11,
            "minLength": 11,
            "readOnly": false,
            "type": "string"
          },
          "userAccess": {
            "items": {
              "maxProperties": 4,
              "minProperties": 0,
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 8,
                  "minLength": 8,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userUid": {
                  "$ref": "#/components/schemas/userUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": false,
            "type": "array"
          },
          "userGroupAccess": {
            "items": {
              "maxProperties": 4,
              "minProperties": 0,
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 8,
                  "minLength": 8,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userGroupUid": {
                  "$ref": "#/components/schemas/userGroupUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": false,
            "type": "array"
          }
        },
        "required": [
          "name",
          "uniqunessType"
        ],
        "x-status-dhis2": "template"
      },
      "programType": {
        "enum": [
          "WITHOUT_REGISTRATION",
          "WITH_REGISTRATION"
        ],
        "example": "WITHOUT_REGISTRATION",
        "format": "enum",
        "type": "string"
      },
      "property": {
        "maximum": 255,
        "minimum": 1,
        "readOnly": true,
        "type": "string"
      },
      "publicAccess": {
        "maxLength": 8,
        "minLength": 8,
        "readOnly": false,
        "type": "string"
      },
      "pushAnalysi": {
        "maxProperties": 18,
        "minProperties": 0,
        "properties": {
          "access": {
            "maxProperties": 6,
            "minProperties": 0,
            "properties": {
              "delete": {
                "$ref": "#/components/schemas/delete"
              },
              "externalize": {
                "$ref": "#/components/schemas/externalize"
              },
              "manage": {
                "$ref": "#/components/schemas/manage"
              },
              "read": {
                "$ref": "#/components/schemas/read"
              },
              "update": {
                "$ref": "#/components/schemas/update"
              },
              "write": {
                "$ref": "#/components/schemas/write"
              }
            },
            "required": [
              "delete",
              "externalize",
              "manage",
              "read",
              "update",
              "write"
            ],
            "type": "object"
          },
          "attributeValues": {
            "items": {
              "properties": {
                "attribute": {
                  "format": "uid",
                  "maxLength": 255,
                  "readOnly": false,
                  "type": "string"
                },
                "created": {
                  "$ref": "#/components/schemas/created"
                },
                "lastUpdated": {
                  "$ref": "#/components/schemas/lastUpdated"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              },
              "required": [
                "attribute"
              ]
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "created": {
            "$ref": "#/components/schemas/created"
          },
          "dashboard": {
            "maxProperties": 1,
            "minProperties": 0,
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "displayName": {
            "$ref": "#/components/schemas/displayName"
          },
          "externalAccess": {
            "$ref": "#/components/schemas/externalAccess"
          },
          "favorite": {
            "type": "boolean"
          },
          "favorites": {
            "items": {
              "$ref": "#/components/schemas/favorite"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "href": {
            "$ref": "#/components/schemas/href"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "lastUpdated": {
            "$ref": "#/components/schemas/lastUpdated"
          },
          "message": {
            "$ref": "#/components/schemas/message"
          },
          "name": {
            "$ref": "#/components/schemas/name"
          },
          "recipientUserGroups": {
            "items": {
              "maxProperties": 1,
              "minProperties": 0,
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/id"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "title": {
            "$ref": "#/components/schemas/title"
          },
          "translations": {
            "items": {
              "properties": {
                "locale": {
                  "$ref": "#/components/schemas/locale"
                },
                "property": {
                  "$ref": "#/components/schemas/property"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "userAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userUid": {
                  "$ref": "#/components/schemas/userUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "userGroupAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userGroupUid": {
                  "$ref": "#/components/schemas/userGroupUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          }
        },
        "required": [
          "access",
          "attributeValues",
          "created",
          "dashboard",
          "displayName",
          "externalAccess",
          "favorite",
          "favorites",
          "href",
          "id",
          "lastUpdated",
          "message",
          "name",
          "recipientUserGroups",
          "title",
          "translations",
          "userAccesses",
          "userGroupAccesses"
        ],
        "type": "object"
      },
      "quartersLastYear": {
        "type": "boolean"
      },
      "quartersThisYear": {
        "type": "boolean"
      },
      "radiusHigh": {
        "example": 8,
        "format": "int32",
        "maximum": 2147483647,
        "minimum": 0,
        "type": "integer"
      },
      "radiusLow": {
        "example": 4,
        "format": "int32",
        "maximum": 2147483647,
        "minimum": 0,
        "type": "integer"
      },
      "rangeAxisDecimals": {
        "example": 1,
        "format": "int32",
        "maximum": 2147483647,
        "minimum": 0,
        "type": "integer"
      },
      "rangeAxisLabel": {
        "example": "myrangeAxis",
        "format": "general",
        "maxLength": 255,
        "minLength": 0,
        "type": "string"
      },
      "rangeAxisMaxValue": {
        "example": 120.0,
        "format": "double",
        "maximum": 2147483647,
        "minimum": 0,
        "type": "number"
      },
      "rangeAxisMinValue": {
        "example": 50.0,
        "format": "double",
        "maximum": 2147483647,
        "minimum": -2147483648,
        "type": "number"
      },
      "rangeAxisSteps": {
        "example": 20,
        "format": "int32",
        "maximum": 2147483647,
        "minimum": 0,
        "type": "integer"
      },
      "read": {
        "default": true,
        "type": "boolean"
      },
      "receivedMessage": {
        "example": "myreceivedMessage",
        "format": "general",
        "maxLength": 2147483647,
        "minLength": 0,
        "type": "string"
      },
      "recipientDataElement": {
        "format": "uid",
        "maxLength": 11,
        "minLength": 11,
        "readOnly": true,
        "type": "string",
        "x-association": "true"
      },
      "recipientProgramAttribute": {
        "format": "uid",
        "maxLength": 11,
        "minLength": 11,
        "readOnly": true,
        "type": "string",
        "x-association": "true"
      },
      "recipientUserGroup": {
        "format": "uid",
        "maxLength": 11,
        "minLength": 11,
        "readOnly": false,
        "type": "string"
      },
      "registration": {
        "readOnly": true,
        "type": "boolean"
      },
      "regression": {
        "type": "boolean"
      },
      "regressionType": {
        "enum": [
          "LINEAR",
          "LOESS",
          "NONE",
          "POLYNOMIAL"
        ],
        "example": "NONE",
        "format": "enum",
        "type": "string"
      },
      "relationship": {
        "properties": {}
      },
      "relationshipEntity": {
        "enum": [
          "TRACKED_ENTITY_INSTANCE"
        ],
        "example": "TRACKED_ENTITY_INSTANCE",
        "format": "enum",
        "type": "string"
      },
      "relationshipType": {
        "maxProperties": 21,
        "minProperties": 0,
        "properties": {
          "access": {
            "maxProperties": 7,
            "minProperties": 1,
            "properties": {
              "data": {
                "properties": {
                  "read": {
                    "$ref": "#/components/schemas/read"
                  },
                  "write": {
                    "$ref": "#/components/schemas/write"
                  }
                },
                "required": [
                  "read",
                  "write"
                ],
                "type": "object"
              },
              "delete": {
                "$ref": "#/components/schemas/delete"
              },
              "externalize": {
                "$ref": "#/components/schemas/externalize"
              },
              "manage": {
                "$ref": "#/components/schemas/manage"
              },
              "read": {
                "$ref": "#/components/schemas/read"
              },
              "update": {
                "$ref": "#/components/schemas/update"
              },
              "write": {
                "$ref": "#/components/schemas/write"
              }
            },
            "readOnly": true,
            "required": [
              "data",
              "delete",
              "externalize",
              "manage",
              "read",
              "update",
              "write"
            ],
            "type": "object"
          },
          "attributeValues": {
            "items": {
              "properties": {
                "attribute": {
                  "format": "uid",
                  "maxLength": 255,
                  "readOnly": false,
                  "type": "string"
                },
                "created": {
                  "$ref": "#/components/schemas/created"
                },
                "lastUpdated": {
                  "$ref": "#/components/schemas/lastUpdated"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              },
              "required": [
                "attribute"
              ]
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "code": {
            "$ref": "#/components/schemas/code"
          },
          "created": {
            "$ref": "#/components/schemas/created"
          },
          "description": {
            "$ref": "#/components/schemas/description"
          },
          "displayName": {
            "$ref": "#/components/schemas/displayName"
          },
          "externalAccess": {
            "$ref": "#/components/schemas/externalAccess"
          },
          "favorite": {
            "type": "boolean"
          },
          "favorites": {
            "items": {
              "$ref": "#/components/schemas/favorite"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "fromConstraint": {
            "maxProperties": 2,
            "minProperties": 1,
            "properties": {
              "relationshipEntity": {
                "enum": [
                  "TRACKED_ENTITY_INSTANCE"
                ],
                "example": "TRACKED_ENTITY_INSTANCE",
                "format": "enum",
                "type": "string"
              },
              "trackedEntityType": {
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/id"
                  }
                },
                "required": [
                  "id"
                ],
                "type": "object"
              }
            },
            "readOnly": false,
            "required": [
              "relationshipEntity",
              "trackedEntityType"
            ],
            "type": "object"
          },
          "href": {
            "$ref": "#/components/schemas/href"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "lastUpdated": {
            "$ref": "#/components/schemas/lastUpdated"
          },
          "lastUpdatedBy": {
            "$ref": "#/components/schemas/lastUpdatedBy"
          },
          "name": {
            "$ref": "#/components/schemas/name"
          },
          "publicAccess": {
            "$ref": "#/components/schemas/publicAccess"
          },
          "toConstraint": {
            "maxProperties": 2,
            "minProperties": 1,
            "properties": {
              "relationshipEntity": {
                "$ref": "#/components/schemas/relationshipEntity"
              },
              "trackedEntityType": {
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/id"
                  }
                },
                "required": [
                  "id"
                ],
                "type": "object"
              }
            },
            "readOnly": false,
            "required": [
              "relationshipEntity",
              "trackedEntityType"
            ],
            "type": "object"
          },
          "translations": {
            "items": {
              "properties": {
                "locale": {
                  "$ref": "#/components/schemas/locale"
                },
                "property": {
                  "$ref": "#/components/schemas/property"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "user": {
            "format": "uid",
            "maxLength": 11,
            "minLength": 11,
            "type": "string",
            "x-association": "true"
          },
          "userAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userUid": {
                  "$ref": "#/components/schemas/userUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "userGroupAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userGroupUid": {
                  "$ref": "#/components/schemas/userGroupUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          }
        },
        "type": "object",
        "x-status-dhis2": "template"
      },
      "relativePeriods": {
        "properties": {}
      },
      "relativeScheduledDays": {
        "format": "integer",
        "maxLength": 2147483647,
        "minLength": -2147483648,
        "readOnly": false,
        "type": "string"
      },
      "remindCompleted": {
        "type": "boolean"
      },
      "renderAsTabs": {
        "type": "boolean"
      },
      "renderHorizontally": {
        "type": "boolean"
      },
      "renderOptionsAsRadio": {
        "type": "boolean"
      },
      "renderType": {
        "properties": {}
      },
      "repeatable": {
        "type": "boolean"
      },
      "report": {
        "maxProperties": 24,
        "minProperties": 0,
        "properties": {
          "access": {
            "maxProperties": 6,
            "minProperties": 1,
            "properties": {
              "delete": {
                "$ref": "#/components/schemas/delete"
              },
              "externalize": {
                "$ref": "#/components/schemas/externalize"
              },
              "manage": {
                "$ref": "#/components/schemas/manage"
              },
              "read": {
                "$ref": "#/components/schemas/read"
              },
              "update": {
                "$ref": "#/components/schemas/update"
              },
              "write": {
                "$ref": "#/components/schemas/write"
              }
            },
            "readOnly": true,
            "required": [
              "delete",
              "externalize",
              "manage",
              "read",
              "update",
              "write"
            ],
            "type": "object"
          },
          "attributeValues": {
            "items": {
              "properties": {
                "attribute": {
                  "format": "uid",
                  "maxLength": 255,
                  "readOnly": false,
                  "type": "string"
                },
                "created": {
                  "$ref": "#/components/schemas/created"
                },
                "lastUpdated": {
                  "$ref": "#/components/schemas/lastUpdated"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              },
              "required": [
                "attribute"
              ]
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "cacheStrategy": {
            "$ref": "#/components/schemas/cacheStrategy"
          },
          "code": {
            "$ref": "#/components/schemas/code"
          },
          "created": {
            "$ref": "#/components/schemas/created"
          },
          "designContent": {
            "$ref": "#/components/schemas/designContent"
          },
          "displayName": {
            "$ref": "#/components/schemas/displayName"
          },
          "externalAccess": {
            "$ref": "#/components/schemas/externalAccess"
          },
          "favorite": {
            "type": "boolean"
          },
          "favorites": {
            "items": {
              "$ref": "#/components/schemas/favorite"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "href": {
            "$ref": "#/components/schemas/href"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "lastUpdated": {
            "$ref": "#/components/schemas/lastUpdated"
          },
          "lastUpdatedBy": {
            "$ref": "#/components/schemas/lastUpdatedBy"
          },
          "name": {
            "$ref": "#/components/schemas/name"
          },
          "publicAccess": {
            "$ref": "#/components/schemas/publicAccess"
          },
          "relativePeriods": {
            "maxProperties": 39,
            "minProperties": 1,
            "properties": {
              "biMonthsThisYear": {
                "$ref": "#/components/schemas/biMonthsThisYear"
              },
              "last12Months": {
                "$ref": "#/components/schemas/last12Months"
              },
              "last12Weeks": {
                "$ref": "#/components/schemas/last12Weeks"
              },
              "last14Days": {
                "$ref": "#/components/schemas/last14Days"
              },
              "last2SixMonths": {
                "$ref": "#/components/schemas/last2SixMonths"
              },
              "last3Days": {
                "$ref": "#/components/schemas/last3Days"
              },
              "last3Months": {
                "$ref": "#/components/schemas/last3Months"
              },
              "last4BiWeeks": {
                "$ref": "#/components/schemas/last4BiWeeks"
              },
              "last4Quarters": {
                "$ref": "#/components/schemas/last4Quarters"
              },
              "last4Weeks": {
                "$ref": "#/components/schemas/last4Weeks"
              },
              "last52Weeks": {
                "$ref": "#/components/schemas/last52Weeks"
              },
              "last5FinancialYears": {
                "$ref": "#/components/schemas/last5FinancialYears"
              },
              "last5Years": {
                "$ref": "#/components/schemas/last5Years"
              },
              "last6BiMonths": {
                "$ref": "#/components/schemas/last6BiMonths"
              },
              "last6Months": {
                "$ref": "#/components/schemas/last6Months"
              },
              "last7Days": {
                "$ref": "#/components/schemas/last7Days"
              },
              "lastBiWeek": {
                "$ref": "#/components/schemas/lastBiWeek"
              },
              "lastBimonth": {
                "$ref": "#/components/schemas/lastBimonth"
              },
              "lastFinancialYear": {
                "$ref": "#/components/schemas/lastFinancialYear"
              },
              "lastMonth": {
                "$ref": "#/components/schemas/lastMonth"
              },
              "lastQuarter": {
                "$ref": "#/components/schemas/lastQuarter"
              },
              "lastSixMonth": {
                "$ref": "#/components/schemas/lastSixMonth"
              },
              "lastWeek": {
                "$ref": "#/components/schemas/lastWeek"
              },
              "lastYear": {
                "$ref": "#/components/schemas/lastYear"
              },
              "monthsLastYear": {
                "$ref": "#/components/schemas/monthsLastYear"
              },
              "monthsThisYear": {
                "$ref": "#/components/schemas/monthsThisYear"
              },
              "quartersLastYear": {
                "$ref": "#/components/schemas/quartersLastYear"
              },
              "quartersThisYear": {
                "$ref": "#/components/schemas/quartersThisYear"
              },
              "thisBiWeek": {
                "$ref": "#/components/schemas/thisBiWeek"
              },
              "thisBimonth": {
                "$ref": "#/components/schemas/thisBimonth"
              },
              "thisDay": {
                "$ref": "#/components/schemas/thisDay"
              },
              "thisFinancialYear": {
                "$ref": "#/components/schemas/thisFinancialYear"
              },
              "thisMonth": {
                "$ref": "#/components/schemas/thisMonth"
              },
              "thisQuarter": {
                "$ref": "#/components/schemas/thisQuarter"
              },
              "thisSixMonth": {
                "$ref": "#/components/schemas/thisSixMonth"
              },
              "thisWeek": {
                "$ref": "#/components/schemas/thisWeek"
              },
              "thisYear": {
                "$ref": "#/components/schemas/thisYear"
              },
              "weeksThisYear": {
                "$ref": "#/components/schemas/weeksThisYear"
              },
              "yesterday": {
                "$ref": "#/components/schemas/yesterday"
              }
            },
            "readOnly": false,
            "required": [
              "biMonthsThisYear",
              "last12Months",
              "last12Weeks",
              "last14Days",
              "last2SixMonths",
              "last3Days",
              "last3Months",
              "last4BiWeeks",
              "last4Quarters",
              "last4Weeks",
              "last52Weeks",
              "last5FinancialYears",
              "last5Years",
              "last6BiMonths",
              "last6Months",
              "last7Days",
              "lastBiWeek",
              "lastBimonth",
              "lastFinancialYear",
              "lastMonth",
              "lastQuarter",
              "lastSixMonth",
              "lastWeek",
              "lastYear",
              "monthsLastYear",
              "monthsThisYear",
              "quartersLastYear",
              "quartersThisYear",
              "thisBiWeek",
              "thisBimonth",
              "thisDay",
              "thisFinancialYear",
              "thisMonth",
              "thisQuarter",
              "thisSixMonth",
              "thisWeek",
              "thisYear",
              "weeksThisYear",
              "yesterday"
            ],
            "type": "object"
          },
          "reportParams": {
            "maxProperties": 4,
            "minProperties": 1,
            "properties": {
              "paramGrandParentOrganisationUnit": {
                "$ref": "#/components/schemas/paramGrandParentOrganisationUnit"
              },
              "paramOrganisationUnit": {
                "$ref": "#/components/schemas/paramOrganisationUnit"
              },
              "paramParentOrganisationUnit": {
                "$ref": "#/components/schemas/paramParentOrganisationUnit"
              },
              "paramReportingPeriod": {
                "$ref": "#/components/schemas/paramReportingPeriod"
              }
            },
            "readOnly": false,
            "required": [
              "paramGrandParentOrganisationUnit",
              "paramOrganisationUnit",
              "paramParentOrganisationUnit",
              "paramReportingPeriod"
            ],
            "type": "object"
          },
          "reportTable": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "translations": {
            "items": {
              "properties": {
                "locale": {
                  "$ref": "#/components/schemas/locale"
                },
                "property": {
                  "$ref": "#/components/schemas/property"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "type": {
            "enum": [
              "HTML",
              "JASPER_JDBC",
              "JASPER_REPORT_TABLE"
            ],
            "example": "JASPER_REPORT_TABLE",
            "format": "enum",
            "type": "string"
          },
          "user": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "userAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userUid": {
                  "$ref": "#/components/schemas/userUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "userGroupAccesses": {
            "items": {
              "maxProperties": 4,
              "minProperties": 0,
              "properties": {
                "access": {
                  "example": "rwr-----",
                  "format": "access",
                  "maxLength": 8,
                  "minLength": 8,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userGroupUid": {
                  "$ref": "#/components/schemas/userGroupUid"
                }
              },
              "required": [
                "access",
                "displayName",
                "id",
                "userGroupUid"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          }
        },
        "required": [
          "name"
        ],
        "type": "object",
        "x-status-dhis2": "template"
      },
      "reportDateToUse": {
        "example": "myre",
        "format": "general",
        "maxLength": 255,
        "minLength": 0,
        "type": "string"
      },
      "reportParams": {
        "properties": {}
      },
      "reportTable": {
        "maxProperties": 77,
        "minProperties": 0,
        "properties": {
          "access": {
            "maxProperties": 6,
            "minProperties": 1,
            "properties": {
              "delete": {
                "$ref": "#/components/schemas/delete"
              },
              "externalize": {
                "$ref": "#/components/schemas/externalize"
              },
              "manage": {
                "$ref": "#/components/schemas/manage"
              },
              "read": {
                "$ref": "#/components/schemas/read"
              },
              "update": {
                "$ref": "#/components/schemas/update"
              },
              "write": {
                "$ref": "#/components/schemas/write"
              }
            },
            "readOnly": true,
            "required": [
              "delete",
              "externalize",
              "manage",
              "read",
              "update",
              "write"
            ],
            "type": "object"
          },
          "aggregationType": {
            "enum": [
              "AVERAGE",
              "AVERAGE_SUM_ORG_UNIT",
              "COUNT",
              "CUSTOM",
              "DEFAULT",
              "LAST",
              "LAST_AVERAGE_ORG_UNIT",
              "MAX",
              "MIN",
              "NONE",
              "STDDEV",
              "SUM",
              "VARIANCE"
            ],
            "example": "DEFAULT",
            "format": "enum",
            "type": "string"
          },
          "attributeDimensions": {
            "items": {
              "properties": {}
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "attributeValues": {
            "items": {
              "properties": {
                "attribute": {
                  "format": "uid",
                  "maxLength": 255,
                  "readOnly": false,
                  "type": "string"
                },
                "created": {
                  "$ref": "#/components/schemas/created"
                },
                "lastUpdated": {
                  "$ref": "#/components/schemas/lastUpdated"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              },
              "required": [
                "attribute"
              ]
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "categoryDimensions": {
            "items": {
              "maxProperties": 2,
              "minProperties": 0,
              "properties": {
                "category": {
                  "maxProperties": 1,
                  "minProperties": 0,
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    }
                  },
                  "required": [
                    "id"
                  ],
                  "type": "object"
                },
                "categoryOptions": {
                  "items": {
                    "maxProperties": 1,
                    "minProperties": 0,
                    "properties": {
                      "id": {
                        "$ref": "#/components/schemas/id"
                      }
                    },
                    "required": [
                      "id"
                    ],
                    "type": "object"
                  },
                  "maxItems": 2147483647,
                  "minItems": 0,
                  "type": "array"
                }
              },
              "required": [
                "category",
                "categoryOptions"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "categoryOptionGroupSetDimensions": {
            "items": {
              "properties": {}
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "code": {
            "$ref": "#/components/schemas/code"
          },
          "colSubTotals": {
            "$ref": "#/components/schemas/colSubTotals"
          },
          "colTotals": {
            "$ref": "#/components/schemas/colTotals"
          },
          "columnDimensions": {
            "items": {
              "example": "m",
              "format": "dimension",
              "maxLength": 255,
              "minLength": 1,
              "type": "string"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "columns": {
            "items": {
              "properties": {}
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "completedOnly": {
            "$ref": "#/components/schemas/completedOnly"
          },
          "created": {
            "$ref": "#/components/schemas/created"
          },
          "cumulative": {
            "$ref": "#/components/schemas/cumulative"
          },
          "dataDimensionItems": {
            "items": {
              "maxProperties": 7,
              "minProperties": 0,
              "properties": {
                "dataDimensionItemType": {
                  "enum": [
                    "DATA_ELEMENT",
                    "DATA_ELEMENT_OPERAND",
                    "INDICATOR",
                    "PROGRAM_DATA_ELEMENT",
                    "PROGRAM_INDICATOR",
                    "REPORTING_RATE"
                  ],
                  "example": "DATA_ELEMENT",
                  "format": "enum",
                  "type": "string"
                },
                "dataElement": {
                  "maxProperties": 1,
                  "minProperties": 0,
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    }
                  },
                  "required": [
                    "id"
                  ],
                  "type": "object"
                },
                "dataElementOperand": {
                  "maxProperties": 21,
                  "minProperties": 0,
                  "properties": {
                    "access": {
                      "maxProperties": 6,
                      "minProperties": 0,
                      "properties": {
                        "delete": {
                          "$ref": "#/components/schemas/delete"
                        },
                        "externalize": {
                          "$ref": "#/components/schemas/externalize"
                        },
                        "manage": {
                          "$ref": "#/components/schemas/manage"
                        },
                        "read": {
                          "$ref": "#/components/schemas/read"
                        },
                        "update": {
                          "$ref": "#/components/schemas/update"
                        },
                        "write": {
                          "$ref": "#/components/schemas/write"
                        }
                      },
                      "required": [
                        "delete",
                        "externalize",
                        "manage",
                        "read",
                        "update",
                        "write"
                      ],
                      "type": "object"
                    },
                    "aggregationType": {
                      "$ref": "#/components/schemas/aggregationType"
                    },
                    "attributeValues": {
                      "items": {
                        "properties": {
                          "attribute": {
                            "format": "uid",
                            "maxLength": 255,
                            "readOnly": false,
                            "type": "string"
                          },
                          "created": {
                            "$ref": "#/components/schemas/created"
                          },
                          "lastUpdated": {
                            "$ref": "#/components/schemas/lastUpdated"
                          },
                          "value": {
                            "$ref": "#/components/schemas/value"
                          }
                        },
                        "required": [
                          "attribute"
                        ]
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "type": "array"
                    },
                    "categoryOptionCombo": {
                      "maxProperties": 1,
                      "minProperties": 0,
                      "properties": {
                        "id": {
                          "$ref": "#/components/schemas/id"
                        }
                      },
                      "required": [
                        "id"
                      ],
                      "type": "object"
                    },
                    "created": {
                      "$ref": "#/components/schemas/created"
                    },
                    "dataElement": {
                      "maxProperties": 1,
                      "minProperties": 0,
                      "properties": {
                        "id": {
                          "$ref": "#/components/schemas/id"
                        }
                      },
                      "required": [
                        "id"
                      ],
                      "type": "object"
                    },
                    "dimensionItem": {
                      "$ref": "#/components/schemas/dimensionItem"
                    },
                    "dimensionItemType": {
                      "enum": [
                        "DATA_ELEMENT_OPERAND"
                      ],
                      "example": "DATA_ELEMENT_OPERAND",
                      "format": "enum",
                      "type": "string"
                    },
                    "displayName": {
                      "$ref": "#/components/schemas/displayName"
                    },
                    "displayShortName": {
                      "$ref": "#/components/schemas/displayShortName"
                    },
                    "externalAccess": {
                      "$ref": "#/components/schemas/externalAccess"
                    },
                    "favorite": {
                      "type": "boolean"
                    },
                    "favorites": {
                      "items": {
                        "$ref": "#/components/schemas/favorite"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "type": "array"
                    },
                    "id": {
                      "$ref": "#/components/schemas/id"
                    },
                    "lastUpdated": {
                      "$ref": "#/components/schemas/lastUpdated"
                    },
                    "legendSets": {
                      "items": {
                        "maxProperties": 20,
                        "minProperties": 0,
                        "properties": {
                          "access": {
                            "maxProperties": 6,
                            "minProperties": 1,
                            "properties": {
                              "delete": {
                                "$ref": "#/components/schemas/delete"
                              },
                              "externalize": {
                                "$ref": "#/components/schemas/externalize"
                              },
                              "manage": {
                                "$ref": "#/components/schemas/manage"
                              },
                              "read": {
                                "$ref": "#/components/schemas/read"
                              },
                              "update": {
                                "$ref": "#/components/schemas/update"
                              },
                              "write": {
                                "$ref": "#/components/schemas/write"
                              }
                            },
                            "readOnly": true,
                            "required": [
                              "delete",
                              "externalize",
                              "manage",
                              "read",
                              "update",
                              "write"
                            ],
                            "type": "object"
                          },
                          "attributeValues": {
                            "items": {
                              "properties": {
                                "attribute": {
                                  "format": "uid",
                                  "maxLength": 255,
                                  "readOnly": false,
                                  "type": "string"
                                },
                                "created": {
                                  "$ref": "#/components/schemas/created"
                                },
                                "lastUpdated": {
                                  "$ref": "#/components/schemas/lastUpdated"
                                },
                                "value": {
                                  "$ref": "#/components/schemas/value"
                                }
                              },
                              "required": [
                                "attribute"
                              ]
                            },
                            "maxItems": 2147483647,
                            "minItems": 0,
                            "type": "array"
                          },
                          "code": {
                            "$ref": "#/components/schemas/code"
                          },
                          "created": {
                            "$ref": "#/components/schemas/created"
                          },
                          "displayName": {
                            "$ref": "#/components/schemas/displayName"
                          },
                          "externalAccess": {
                            "$ref": "#/components/schemas/externalAccess"
                          },
                          "favorite": {
                            "type": "boolean"
                          },
                          "favorites": {
                            "items": {
                              "$ref": "#/components/schemas/favorite"
                            },
                            "maxItems": 2147483647,
                            "minItems": 0,
                            "type": "array"
                          },
                          "href": {
                            "$ref": "#/components/schemas/href"
                          },
                          "id": {
                            "$ref": "#/components/schemas/id"
                          },
                          "lastUpdated": {
                            "$ref": "#/components/schemas/lastUpdated"
                          },
                          "lastUpdatedBy": {
                            "properties": {
                              "id": {
                                "$ref": "#/components/schemas/id"
                              }
                            },
                            "required": [
                              "id"
                            ],
                            "type": "object"
                          },
                          "legends": {
                            "items": {
                              "maxProperties": 16,
                              "minProperties": 0,
                              "properties": {
                                "access": {
                                  "maxProperties": 6,
                                  "minProperties": 0,
                                  "properties": {
                                    "delete": {
                                      "$ref": "#/components/schemas/delete"
                                    },
                                    "externalize": {
                                      "$ref": "#/components/schemas/externalize"
                                    },
                                    "manage": {
                                      "$ref": "#/components/schemas/manage"
                                    },
                                    "read": {
                                      "$ref": "#/components/schemas/read"
                                    },
                                    "update": {
                                      "$ref": "#/components/schemas/update"
                                    },
                                    "write": {
                                      "$ref": "#/components/schemas/write"
                                    }
                                  },
                                  "required": [
                                    "delete",
                                    "externalize",
                                    "manage",
                                    "read",
                                    "update",
                                    "write"
                                  ],
                                  "type": "object"
                                },
                                "attributeValues": {
                                  "items": {
                                    "properties": {
                                      "attribute": {
                                        "format": "uid",
                                        "maxLength": 255,
                                        "readOnly": false,
                                        "type": "string"
                                      },
                                      "created": {
                                        "$ref": "#/components/schemas/created"
                                      },
                                      "lastUpdated": {
                                        "$ref": "#/components/schemas/lastUpdated"
                                      },
                                      "value": {
                                        "$ref": "#/components/schemas/value"
                                      }
                                    },
                                    "required": [
                                      "attribute"
                                    ]
                                  },
                                  "maxItems": 2147483647,
                                  "minItems": 0,
                                  "type": "array"
                                },
                                "color": {
                                  "$ref": "#/components/schemas/color"
                                },
                                "created": {
                                  "$ref": "#/components/schemas/created"
                                },
                                "displayName": {
                                  "$ref": "#/components/schemas/displayName"
                                },
                                "endValue": {
                                  "$ref": "#/components/schemas/endValue"
                                },
                                "externalAccess": {
                                  "$ref": "#/components/schemas/externalAccess"
                                },
                                "favorite": {
                                  "type": "boolean"
                                },
                                "favorites": {
                                  "items": {
                                    "$ref": "#/components/schemas/favorite"
                                  },
                                  "maxItems": 2147483647,
                                  "minItems": 0,
                                  "type": "array"
                                },
                                "id": {
                                  "$ref": "#/components/schemas/id"
                                },
                                "lastUpdated": {
                                  "$ref": "#/components/schemas/lastUpdated"
                                },
                                "name": {
                                  "$ref": "#/components/schemas/name"
                                },
                                "startValue": {
                                  "$ref": "#/components/schemas/startValue"
                                },
                                "translations": {
                                  "items": {
                                    "properties": {
                                      "locale": {
                                        "$ref": "#/components/schemas/locale"
                                      },
                                      "property": {
                                        "$ref": "#/components/schemas/property"
                                      },
                                      "value": {
                                        "$ref": "#/components/schemas/value"
                                      }
                                    }
                                  },
                                  "maxItems": 2147483647,
                                  "minItems": 0,
                                  "type": "array"
                                },
                                "userAccesses": {
                                  "items": {
                                    "properties": {
                                      "access": {
                                        "format": "access",
                                        "maxLength": 255,
                                        "minLength": 0,
                                        "readOnly": false,
                                        "type": "string"
                                      },
                                      "displayName": {
                                        "$ref": "#/components/schemas/displayName"
                                      },
                                      "id": {
                                        "$ref": "#/components/schemas/id"
                                      },
                                      "userUid": {
                                        "$ref": "#/components/schemas/userUid"
                                      }
                                    }
                                  },
                                  "maxItems": 2147483647,
                                  "minItems": 0,
                                  "type": "array"
                                },
                                "userGroupAccesses": {
                                  "items": {
                                    "properties": {
                                      "access": {
                                        "format": "access",
                                        "maxLength": 255,
                                        "minLength": 0,
                                        "readOnly": false,
                                        "type": "string"
                                      },
                                      "displayName": {
                                        "$ref": "#/components/schemas/displayName"
                                      },
                                      "id": {
                                        "$ref": "#/components/schemas/id"
                                      },
                                      "userGroupUid": {
                                        "$ref": "#/components/schemas/userGroupUid"
                                      }
                                    }
                                  },
                                  "maxItems": 2147483647,
                                  "minItems": 0,
                                  "type": "array"
                                }
                              },
                              "required": [
                                "access",
                                "attributeValues",
                                "color",
                                "created",
                                "displayName",
                                "endValue",
                                "externalAccess",
                                "favorite",
                                "favorites",
                                "id",
                                "lastUpdated",
                                "name",
                                "startValue",
                                "translations",
                                "userAccesses",
                                "userGroupAccesses"
                              ],
                              "type": "object"
                            },
                            "maxItems": 2147483647,
                            "minItems": 0,
                            "type": "array"
                          },
                          "name": {
                            "$ref": "#/components/schemas/name"
                          },
                          "publicAccess": {
                            "$ref": "#/components/schemas/publicAccess"
                          },
                          "symbolizer": {
                            "$ref": "#/components/schemas/symbolizer"
                          },
                          "translations": {
                            "items": {
                              "properties": {
                                "locale": {
                                  "$ref": "#/components/schemas/locale"
                                },
                                "property": {
                                  "$ref": "#/components/schemas/property"
                                },
                                "value": {
                                  "$ref": "#/components/schemas/value"
                                }
                              }
                            },
                            "maxItems": 2147483647,
                            "minItems": 0,
                            "type": "array"
                          },
                          "user": {
                            "properties": {
                              "id": {
                                "$ref": "#/components/schemas/id"
                              }
                            },
                            "required": [
                              "id"
                            ],
                            "type": "object"
                          },
                          "userAccesses": {
                            "items": {
                              "properties": {
                                "access": {
                                  "format": "access",
                                  "maxLength": 255,
                                  "minLength": 0,
                                  "readOnly": false,
                                  "type": "string"
                                },
                                "displayName": {
                                  "$ref": "#/components/schemas/displayName"
                                },
                                "id": {
                                  "$ref": "#/components/schemas/id"
                                },
                                "userUid": {
                                  "$ref": "#/components/schemas/userUid"
                                }
                              }
                            },
                            "maxItems": 2147483647,
                            "minItems": 0,
                            "type": "array"
                          },
                          "userGroupAccesses": {
                            "items": {
                              "properties": {
                                "access": {
                                  "format": "access",
                                  "maxLength": 255,
                                  "minLength": 0,
                                  "readOnly": false,
                                  "type": "string"
                                },
                                "displayName": {
                                  "$ref": "#/components/schemas/displayName"
                                },
                                "id": {
                                  "$ref": "#/components/schemas/id"
                                },
                                "userGroupUid": {
                                  "$ref": "#/components/schemas/userGroupUid"
                                }
                              }
                            },
                            "maxItems": 2147483647,
                            "minItems": 0,
                            "type": "array"
                          }
                        },
                        "required": [
                          "name"
                        ],
                        "type": "object",
                        "x-status-dhis2": "template"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "type": "array"
                    },
                    "name": {
                      "$ref": "#/components/schemas/name"
                    },
                    "shortName": {
                      "$ref": "#/components/schemas/shortName"
                    },
                    "translations": {
                      "items": {
                        "properties": {
                          "locale": {
                            "$ref": "#/components/schemas/locale"
                          },
                          "property": {
                            "$ref": "#/components/schemas/property"
                          },
                          "value": {
                            "$ref": "#/components/schemas/value"
                          }
                        }
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "type": "array"
                    },
                    "userAccesses": {
                      "items": {
                        "properties": {
                          "access": {
                            "format": "access",
                            "maxLength": 255,
                            "minLength": 0,
                            "readOnly": false,
                            "type": "string"
                          },
                          "displayName": {
                            "$ref": "#/components/schemas/displayName"
                          },
                          "id": {
                            "$ref": "#/components/schemas/id"
                          },
                          "userUid": {
                            "$ref": "#/components/schemas/userUid"
                          }
                        }
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "type": "array"
                    },
                    "userGroupAccesses": {
                      "items": {
                        "properties": {
                          "access": {
                            "format": "access",
                            "maxLength": 255,
                            "minLength": 0,
                            "readOnly": false,
                            "type": "string"
                          },
                          "displayName": {
                            "$ref": "#/components/schemas/displayName"
                          },
                          "id": {
                            "$ref": "#/components/schemas/id"
                          },
                          "userGroupUid": {
                            "$ref": "#/components/schemas/userGroupUid"
                          }
                        }
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "type": "array"
                    }
                  },
                  "required": [
                    "access",
                    "attributeValues",
                    "categoryOptionCombo",
                    "created",
                    "dataElement",
                    "dimensionItem",
                    "dimensionItemType",
                    "displayName",
                    "displayShortName",
                    "externalAccess",
                    "favorite",
                    "favorites",
                    "id",
                    "lastUpdated",
                    "legendSets",
                    "name",
                    "shortName",
                    "translations",
                    "userAccesses",
                    "userGroupAccesses"
                  ],
                  "type": "object"
                },
                "indicator": {
                  "maxProperties": 1,
                  "minProperties": 0,
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    }
                  },
                  "required": [
                    "id"
                  ],
                  "type": "object"
                },
                "programDataElement": {
                  "maxProperties": 19,
                  "minProperties": 0,
                  "properties": {
                    "access": {
                      "maxProperties": 6,
                      "minProperties": 0,
                      "properties": {
                        "delete": {
                          "$ref": "#/components/schemas/delete"
                        },
                        "externalize": {
                          "$ref": "#/components/schemas/externalize"
                        },
                        "manage": {
                          "$ref": "#/components/schemas/manage"
                        },
                        "read": {
                          "$ref": "#/components/schemas/read"
                        },
                        "update": {
                          "$ref": "#/components/schemas/update"
                        },
                        "write": {
                          "$ref": "#/components/schemas/write"
                        }
                      },
                      "required": [
                        "delete",
                        "externalize",
                        "manage",
                        "read",
                        "update",
                        "write"
                      ],
                      "type": "object"
                    },
                    "aggregationType": {
                      "enum": [
                        "SUM"
                      ],
                      "example": "SUM",
                      "format": "enum",
                      "type": "string"
                    },
                    "attributeValues": {
                      "items": {
                        "properties": {
                          "attribute": {
                            "format": "uid",
                            "maxLength": 255,
                            "readOnly": false,
                            "type": "string"
                          },
                          "created": {
                            "$ref": "#/components/schemas/created"
                          },
                          "lastUpdated": {
                            "$ref": "#/components/schemas/lastUpdated"
                          },
                          "value": {
                            "$ref": "#/components/schemas/value"
                          }
                        },
                        "required": [
                          "attribute"
                        ]
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "type": "array"
                    },
                    "dataElement": {
                      "maxProperties": 1,
                      "minProperties": 0,
                      "properties": {
                        "id": {
                          "$ref": "#/components/schemas/id"
                        }
                      },
                      "required": [
                        "id"
                      ],
                      "type": "object"
                    },
                    "dimensionItem": {
                      "$ref": "#/components/schemas/dimensionItem"
                    },
                    "dimensionItemType": {
                      "enum": [
                        "PROGRAM_DATA_ELEMENT"
                      ],
                      "example": "PROGRAM_DATA_ELEMENT",
                      "format": "enum",
                      "type": "string"
                    },
                    "displayName": {
                      "$ref": "#/components/schemas/displayName"
                    },
                    "displayShortName": {
                      "$ref": "#/components/schemas/displayShortName"
                    },
                    "externalAccess": {
                      "$ref": "#/components/schemas/externalAccess"
                    },
                    "favorite": {
                      "type": "boolean"
                    },
                    "favorites": {
                      "items": {
                        "$ref": "#/components/schemas/favorite"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "type": "array"
                    },
                    "legendSets": {
                      "items": {
                        "maxProperties": 20,
                        "minProperties": 0,
                        "properties": {
                          "access": {
                            "maxProperties": 6,
                            "minProperties": 1,
                            "properties": {
                              "delete": {
                                "$ref": "#/components/schemas/delete"
                              },
                              "externalize": {
                                "$ref": "#/components/schemas/externalize"
                              },
                              "manage": {
                                "$ref": "#/components/schemas/manage"
                              },
                              "read": {
                                "$ref": "#/components/schemas/read"
                              },
                              "update": {
                                "$ref": "#/components/schemas/update"
                              },
                              "write": {
                                "$ref": "#/components/schemas/write"
                              }
                            },
                            "readOnly": true,
                            "required": [
                              "delete",
                              "externalize",
                              "manage",
                              "read",
                              "update",
                              "write"
                            ],
                            "type": "object"
                          },
                          "attributeValues": {
                            "items": {
                              "properties": {
                                "attribute": {
                                  "format": "uid",
                                  "maxLength": 255,
                                  "readOnly": false,
                                  "type": "string"
                                },
                                "created": {
                                  "$ref": "#/components/schemas/created"
                                },
                                "lastUpdated": {
                                  "$ref": "#/components/schemas/lastUpdated"
                                },
                                "value": {
                                  "$ref": "#/components/schemas/value"
                                }
                              },
                              "required": [
                                "attribute"
                              ]
                            },
                            "maxItems": 2147483647,
                            "minItems": 0,
                            "type": "array"
                          },
                          "code": {
                            "$ref": "#/components/schemas/code"
                          },
                          "created": {
                            "$ref": "#/components/schemas/created"
                          },
                          "displayName": {
                            "$ref": "#/components/schemas/displayName"
                          },
                          "externalAccess": {
                            "$ref": "#/components/schemas/externalAccess"
                          },
                          "favorite": {
                            "type": "boolean"
                          },
                          "favorites": {
                            "items": {
                              "$ref": "#/components/schemas/favorite"
                            },
                            "maxItems": 2147483647,
                            "minItems": 0,
                            "type": "array"
                          },
                          "href": {
                            "$ref": "#/components/schemas/href"
                          },
                          "id": {
                            "$ref": "#/components/schemas/id"
                          },
                          "lastUpdated": {
                            "$ref": "#/components/schemas/lastUpdated"
                          },
                          "lastUpdatedBy": {
                            "properties": {
                              "id": {
                                "$ref": "#/components/schemas/id"
                              }
                            },
                            "required": [
                              "id"
                            ],
                            "type": "object"
                          },
                          "legends": {
                            "items": {
                              "maxProperties": 16,
                              "minProperties": 0,
                              "properties": {
                                "access": {
                                  "maxProperties": 6,
                                  "minProperties": 0,
                                  "properties": {
                                    "delete": {
                                      "$ref": "#/components/schemas/delete"
                                    },
                                    "externalize": {
                                      "$ref": "#/components/schemas/externalize"
                                    },
                                    "manage": {
                                      "$ref": "#/components/schemas/manage"
                                    },
                                    "read": {
                                      "$ref": "#/components/schemas/read"
                                    },
                                    "update": {
                                      "$ref": "#/components/schemas/update"
                                    },
                                    "write": {
                                      "$ref": "#/components/schemas/write"
                                    }
                                  },
                                  "required": [
                                    "delete",
                                    "externalize",
                                    "manage",
                                    "read",
                                    "update",
                                    "write"
                                  ],
                                  "type": "object"
                                },
                                "attributeValues": {
                                  "items": {
                                    "properties": {
                                      "attribute": {
                                        "format": "uid",
                                        "maxLength": 255,
                                        "readOnly": false,
                                        "type": "string"
                                      },
                                      "created": {
                                        "$ref": "#/components/schemas/created"
                                      },
                                      "lastUpdated": {
                                        "$ref": "#/components/schemas/lastUpdated"
                                      },
                                      "value": {
                                        "$ref": "#/components/schemas/value"
                                      }
                                    },
                                    "required": [
                                      "attribute"
                                    ]
                                  },
                                  "maxItems": 2147483647,
                                  "minItems": 0,
                                  "type": "array"
                                },
                                "color": {
                                  "$ref": "#/components/schemas/color"
                                },
                                "created": {
                                  "$ref": "#/components/schemas/created"
                                },
                                "displayName": {
                                  "$ref": "#/components/schemas/displayName"
                                },
                                "endValue": {
                                  "$ref": "#/components/schemas/endValue"
                                },
                                "externalAccess": {
                                  "$ref": "#/components/schemas/externalAccess"
                                },
                                "favorite": {
                                  "type": "boolean"
                                },
                                "favorites": {
                                  "items": {
                                    "$ref": "#/components/schemas/favorite"
                                  },
                                  "maxItems": 2147483647,
                                  "minItems": 0,
                                  "type": "array"
                                },
                                "id": {
                                  "$ref": "#/components/schemas/id"
                                },
                                "lastUpdated": {
                                  "$ref": "#/components/schemas/lastUpdated"
                                },
                                "name": {
                                  "$ref": "#/components/schemas/name"
                                },
                                "startValue": {
                                  "$ref": "#/components/schemas/startValue"
                                },
                                "translations": {
                                  "items": {
                                    "properties": {
                                      "locale": {
                                        "$ref": "#/components/schemas/locale"
                                      },
                                      "property": {
                                        "$ref": "#/components/schemas/property"
                                      },
                                      "value": {
                                        "$ref": "#/components/schemas/value"
                                      }
                                    }
                                  },
                                  "maxItems": 2147483647,
                                  "minItems": 0,
                                  "type": "array"
                                },
                                "userAccesses": {
                                  "items": {
                                    "properties": {
                                      "access": {
                                        "format": "access",
                                        "maxLength": 255,
                                        "minLength": 0,
                                        "readOnly": false,
                                        "type": "string"
                                      },
                                      "displayName": {
                                        "$ref": "#/components/schemas/displayName"
                                      },
                                      "id": {
                                        "$ref": "#/components/schemas/id"
                                      },
                                      "userUid": {
                                        "$ref": "#/components/schemas/userUid"
                                      }
                                    }
                                  },
                                  "maxItems": 2147483647,
                                  "minItems": 0,
                                  "type": "array"
                                },
                                "userGroupAccesses": {
                                  "items": {
                                    "properties": {
                                      "access": {
                                        "format": "access",
                                        "maxLength": 255,
                                        "minLength": 0,
                                        "readOnly": false,
                                        "type": "string"
                                      },
                                      "displayName": {
                                        "$ref": "#/components/schemas/displayName"
                                      },
                                      "id": {
                                        "$ref": "#/components/schemas/id"
                                      },
                                      "userGroupUid": {
                                        "$ref": "#/components/schemas/userGroupUid"
                                      }
                                    }
                                  },
                                  "maxItems": 2147483647,
                                  "minItems": 0,
                                  "type": "array"
                                }
                              },
                              "required": [
                                "access",
                                "attributeValues",
                                "color",
                                "created",
                                "displayName",
                                "endValue",
                                "externalAccess",
                                "favorite",
                                "favorites",
                                "id",
                                "lastUpdated",
                                "name",
                                "startValue",
                                "translations",
                                "userAccesses",
                                "userGroupAccesses"
                              ],
                              "type": "object"
                            },
                            "maxItems": 2147483647,
                            "minItems": 0,
                            "type": "array"
                          },
                          "name": {
                            "$ref": "#/components/schemas/name"
                          },
                          "publicAccess": {
                            "$ref": "#/components/schemas/publicAccess"
                          },
                          "symbolizer": {
                            "$ref": "#/components/schemas/symbolizer"
                          },
                          "translations": {
                            "items": {
                              "properties": {
                                "locale": {
                                  "$ref": "#/components/schemas/locale"
                                },
                                "property": {
                                  "$ref": "#/components/schemas/property"
                                },
                                "value": {
                                  "$ref": "#/components/schemas/value"
                                }
                              }
                            },
                            "maxItems": 2147483647,
                            "minItems": 0,
                            "type": "array"
                          },
                          "user": {
                            "properties": {
                              "id": {
                                "$ref": "#/components/schemas/id"
                              }
                            },
                            "required": [
                              "id"
                            ],
                            "type": "object"
                          },
                          "userAccesses": {
                            "items": {
                              "properties": {
                                "access": {
                                  "format": "access",
                                  "maxLength": 255,
                                  "minLength": 0,
                                  "readOnly": false,
                                  "type": "string"
                                },
                                "displayName": {
                                  "$ref": "#/components/schemas/displayName"
                                },
                                "id": {
                                  "$ref": "#/components/schemas/id"
                                },
                                "userUid": {
                                  "$ref": "#/components/schemas/userUid"
                                }
                              }
                            },
                            "maxItems": 2147483647,
                            "minItems": 0,
                            "type": "array"
                          },
                          "userGroupAccesses": {
                            "items": {
                              "properties": {
                                "access": {
                                  "format": "access",
                                  "maxLength": 255,
                                  "minLength": 0,
                                  "readOnly": false,
                                  "type": "string"
                                },
                                "displayName": {
                                  "$ref": "#/components/schemas/displayName"
                                },
                                "id": {
                                  "$ref": "#/components/schemas/id"
                                },
                                "userGroupUid": {
                                  "$ref": "#/components/schemas/userGroupUid"
                                }
                              }
                            },
                            "maxItems": 2147483647,
                            "minItems": 0,
                            "type": "array"
                          }
                        },
                        "required": [
                          "name"
                        ],
                        "type": "object",
                        "x-status-dhis2": "template"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "type": "array"
                    },
                    "name": {
                      "$ref": "#/components/schemas/name"
                    },
                    "program": {
                      "maxProperties": 1,
                      "minProperties": 0,
                      "properties": {
                        "id": {
                          "$ref": "#/components/schemas/id"
                        }
                      },
                      "required": [
                        "id"
                      ],
                      "type": "object"
                    },
                    "shortName": {
                      "$ref": "#/components/schemas/shortName"
                    },
                    "translations": {
                      "items": {
                        "properties": {
                          "locale": {
                            "$ref": "#/components/schemas/locale"
                          },
                          "property": {
                            "$ref": "#/components/schemas/property"
                          },
                          "value": {
                            "$ref": "#/components/schemas/value"
                          }
                        }
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "type": "array"
                    },
                    "userAccesses": {
                      "items": {
                        "properties": {
                          "access": {
                            "format": "access",
                            "maxLength": 255,
                            "minLength": 0,
                            "readOnly": false,
                            "type": "string"
                          },
                          "displayName": {
                            "$ref": "#/components/schemas/displayName"
                          },
                          "id": {
                            "$ref": "#/components/schemas/id"
                          },
                          "userUid": {
                            "$ref": "#/components/schemas/userUid"
                          }
                        }
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "type": "array"
                    },
                    "userGroupAccesses": {
                      "items": {
                        "properties": {
                          "access": {
                            "format": "access",
                            "maxLength": 255,
                            "minLength": 0,
                            "readOnly": false,
                            "type": "string"
                          },
                          "displayName": {
                            "$ref": "#/components/schemas/displayName"
                          },
                          "id": {
                            "$ref": "#/components/schemas/id"
                          },
                          "userGroupUid": {
                            "$ref": "#/components/schemas/userGroupUid"
                          }
                        }
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "type": "array"
                    },
                    "valueType": {
                      "enum": [
                        "BOOLEAN"
                      ],
                      "example": "BOOLEAN",
                      "format": "enum",
                      "type": "string"
                    }
                  },
                  "required": [
                    "access",
                    "aggregationType",
                    "attributeValues",
                    "dataElement",
                    "dimensionItem",
                    "dimensionItemType",
                    "displayName",
                    "displayShortName",
                    "externalAccess",
                    "favorite",
                    "favorites",
                    "legendSets",
                    "name",
                    "program",
                    "shortName",
                    "translations",
                    "userAccesses",
                    "userGroupAccesses",
                    "valueType"
                  ],
                  "type": "object"
                },
                "programIndicator": {
                  "maxProperties": 1,
                  "minProperties": 0,
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    }
                  },
                  "required": [
                    "id"
                  ],
                  "type": "object"
                },
                "reportingRate": {
                  "maxProperties": 18,
                  "minProperties": 0,
                  "properties": {
                    "access": {
                      "maxProperties": 6,
                      "minProperties": 0,
                      "properties": {
                        "delete": {
                          "$ref": "#/components/schemas/delete"
                        },
                        "externalize": {
                          "$ref": "#/components/schemas/externalize"
                        },
                        "manage": {
                          "$ref": "#/components/schemas/manage"
                        },
                        "read": {
                          "$ref": "#/components/schemas/read"
                        },
                        "update": {
                          "$ref": "#/components/schemas/update"
                        },
                        "write": {
                          "$ref": "#/components/schemas/write"
                        }
                      },
                      "required": [
                        "delete",
                        "externalize",
                        "manage",
                        "read",
                        "update",
                        "write"
                      ],
                      "type": "object"
                    },
                    "attributeValues": {
                      "items": {
                        "properties": {
                          "attribute": {
                            "format": "uid",
                            "maxLength": 255,
                            "readOnly": false,
                            "type": "string"
                          },
                          "created": {
                            "$ref": "#/components/schemas/created"
                          },
                          "lastUpdated": {
                            "$ref": "#/components/schemas/lastUpdated"
                          },
                          "value": {
                            "$ref": "#/components/schemas/value"
                          }
                        },
                        "required": [
                          "attribute"
                        ]
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "type": "array"
                    },
                    "dataSet": {
                      "maxProperties": 1,
                      "minProperties": 0,
                      "properties": {
                        "id": {
                          "$ref": "#/components/schemas/id"
                        }
                      },
                      "required": [
                        "id"
                      ],
                      "type": "object"
                    },
                    "dimensionItem": {
                      "$ref": "#/components/schemas/dimensionItem"
                    },
                    "dimensionItemType": {
                      "enum": [
                        "REPORTING_RATE"
                      ],
                      "example": "REPORTING_RATE",
                      "format": "enum",
                      "type": "string"
                    },
                    "displayName": {
                      "$ref": "#/components/schemas/displayName"
                    },
                    "displayShortName": {
                      "$ref": "#/components/schemas/displayShortName"
                    },
                    "externalAccess": {
                      "$ref": "#/components/schemas/externalAccess"
                    },
                    "favorite": {
                      "type": "boolean"
                    },
                    "favorites": {
                      "items": {
                        "$ref": "#/components/schemas/favorite"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "type": "array"
                    },
                    "id": {
                      "$ref": "#/components/schemas/id"
                    },
                    "legendSets": {
                      "items": {
                        "maxProperties": 1,
                        "minProperties": 0,
                        "properties": {
                          "id": {
                            "$ref": "#/components/schemas/id"
                          }
                        },
                        "required": [
                          "id"
                        ],
                        "type": "object"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "type": "array"
                    },
                    "metric": {
                      "enum": [
                        "ACTUAL_REPORTS",
                        "ACTUAL_REPORTS_ON_TIME",
                        "EXPECTED_REPORTS",
                        "REPORTING_RATE",
                        "REPORTING_RATE_ON_TIME"
                      ],
                      "example": "REPORTING_RATE",
                      "format": "enum",
                      "type": "string"
                    },
                    "name": {
                      "$ref": "#/components/schemas/name"
                    },
                    "shortName": {
                      "$ref": "#/components/schemas/shortName"
                    },
                    "translations": {
                      "items": {
                        "properties": {
                          "locale": {
                            "$ref": "#/components/schemas/locale"
                          },
                          "property": {
                            "$ref": "#/components/schemas/property"
                          },
                          "value": {
                            "$ref": "#/components/schemas/value"
                          }
                        }
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "type": "array"
                    },
                    "userAccesses": {
                      "items": {
                        "properties": {
                          "access": {
                            "format": "access",
                            "maxLength": 255,
                            "minLength": 0,
                            "readOnly": false,
                            "type": "string"
                          },
                          "displayName": {
                            "$ref": "#/components/schemas/displayName"
                          },
                          "id": {
                            "$ref": "#/components/schemas/id"
                          },
                          "userUid": {
                            "$ref": "#/components/schemas/userUid"
                          }
                        }
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "type": "array"
                    },
                    "userGroupAccesses": {
                      "items": {
                        "properties": {
                          "access": {
                            "format": "access",
                            "maxLength": 255,
                            "minLength": 0,
                            "readOnly": false,
                            "type": "string"
                          },
                          "displayName": {
                            "$ref": "#/components/schemas/displayName"
                          },
                          "id": {
                            "$ref": "#/components/schemas/id"
                          },
                          "userGroupUid": {
                            "$ref": "#/components/schemas/userGroupUid"
                          }
                        }
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "type": "array"
                    }
                  },
                  "required": [
                    "access",
                    "attributeValues",
                    "dataSet",
                    "dimensionItem",
                    "dimensionItemType",
                    "displayName",
                    "displayShortName",
                    "externalAccess",
                    "favorite",
                    "favorites",
                    "id",
                    "legendSets",
                    "metric",
                    "name",
                    "shortName",
                    "translations",
                    "userAccesses",
                    "userGroupAccesses"
                  ],
                  "type": "object"
                }
              },
              "required": [
                "dataDimensionItemType"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "dataElementDimensions": {
            "items": {
              "properties": {}
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "dataElementGroupSetDimensions": {
            "items": {
              "maxProperties": 2,
              "minProperties": 0,
              "properties": {
                "dataElementGroupSet": {
                  "maxProperties": 1,
                  "minProperties": 0,
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    }
                  },
                  "required": [
                    "id"
                  ],
                  "type": "object"
                },
                "dataElementGroups": {
                  "items": {
                    "maxProperties": 1,
                    "minProperties": 0,
                    "properties": {
                      "id": {
                        "$ref": "#/components/schemas/id"
                      }
                    },
                    "required": [
                      "id"
                    ],
                    "type": "object"
                  },
                  "maxItems": 2147483647,
                  "minItems": 0,
                  "type": "array"
                }
              },
              "required": [
                "dataElementGroupSet",
                "dataElementGroups"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "description": {
            "$ref": "#/components/schemas/description"
          },
          "digitGroupSeparator": {
            "enum": [
              "COMMA",
              "NONE",
              "SPACE"
            ],
            "example": "SPACE",
            "format": "enum",
            "type": "string"
          },
          "displayDensity": {
            "$ref": "#/components/schemas/displayDensity"
          },
          "displayDescription": {
            "$ref": "#/components/schemas/displayDescription"
          },
          "displayName": {
            "$ref": "#/components/schemas/displayName"
          },
          "displayShortName": {
            "$ref": "#/components/schemas/displayShortName"
          },
          "externalAccess": {
            "$ref": "#/components/schemas/externalAccess"
          },
          "favorite": {
            "type": "boolean"
          },
          "favorites": {
            "items": {
              "$ref": "#/components/schemas/favorite"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "filterDimensions": {
            "items": {
              "example": "m",
              "format": "dimension",
              "maxLength": 255,
              "minLength": 1,
              "type": "string"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "filters": {
            "items": {
              "properties": {}
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "fontSize": {
            "$ref": "#/components/schemas/fontSize"
          },
          "hideEmptyColumns": {
            "$ref": "#/components/schemas/hideEmptyColumns"
          },
          "hideEmptyRows": {
            "$ref": "#/components/schemas/hideEmptyRows"
          },
          "hideSubtitle": {
            "$ref": "#/components/schemas/hideSubtitle"
          },
          "hideTitle": {
            "$ref": "#/components/schemas/hideTitle"
          },
          "href": {
            "$ref": "#/components/schemas/href"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "interpretations": {
            "items": {
              "maxProperties": 1,
              "minProperties": 0,
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/id"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "itemOrganisationUnitGroups": {
            "items": {
              "maxProperties": 1,
              "minProperties": 0,
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/id"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "lastUpdated": {
            "$ref": "#/components/schemas/lastUpdated"
          },
          "lastUpdatedBy": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "legendDisplayStrategy": {
            "enum": [
              "BY_DATA_ITEM",
              "FIXED"
            ],
            "example": "FIXED",
            "format": "enum",
            "type": "string"
          },
          "legendDisplayStyle": {
            "$ref": "#/components/schemas/legendDisplayStyle"
          },
          "legendSet": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "measureCriteria": {
            "$ref": "#/components/schemas/measureCriteria"
          },
          "name": {
            "$ref": "#/components/schemas/name"
          },
          "numberType": {
            "$ref": "#/components/schemas/numberType"
          },
          "organisationUnitGroupSetDimensions": {
            "items": {
              "maxProperties": 2,
              "minProperties": 0,
              "properties": {
                "organisationUnitGroupSet": {
                  "maxProperties": 1,
                  "minProperties": 0,
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    }
                  },
                  "required": [
                    "id"
                  ],
                  "type": "object"
                },
                "organisationUnitGroups": {
                  "items": {
                    "maxProperties": 1,
                    "minProperties": 0,
                    "properties": {
                      "id": {
                        "$ref": "#/components/schemas/id"
                      }
                    },
                    "required": [
                      "id"
                    ],
                    "type": "object"
                  },
                  "maxItems": 2147483647,
                  "minItems": 0,
                  "type": "array"
                }
              },
              "required": [
                "organisationUnitGroupSet",
                "organisationUnitGroups"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "organisationUnitLevels": {
            "items": {
              "example": 4,
              "format": "int32",
              "maximum": 2147483647,
              "minimum": 3,
              "type": "integer"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "organisationUnits": {
            "items": {
              "maxProperties": 1,
              "minProperties": 0,
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/id"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "parentGraphMap": {
            "maxProperties": 1,
            "minProperties": 1,
            "readOnly": false,
            "type": "object"
          },
          "periods": {
            "items": {
              "maxProperties": 1,
              "minProperties": 0,
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/id"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "programIndicatorDimensions": {
            "items": {
              "properties": {}
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "publicAccess": {
            "$ref": "#/components/schemas/publicAccess"
          },
          "regression": {
            "$ref": "#/components/schemas/regression"
          },
          "relativePeriods": {
            "maxProperties": 39,
            "minProperties": 1,
            "properties": {
              "biMonthsThisYear": {
                "$ref": "#/components/schemas/biMonthsThisYear"
              },
              "last12Months": {
                "$ref": "#/components/schemas/last12Months"
              },
              "last12Weeks": {
                "$ref": "#/components/schemas/last12Weeks"
              },
              "last14Days": {
                "$ref": "#/components/schemas/last14Days"
              },
              "last2SixMonths": {
                "$ref": "#/components/schemas/last2SixMonths"
              },
              "last3Days": {
                "$ref": "#/components/schemas/last3Days"
              },
              "last3Months": {
                "$ref": "#/components/schemas/last3Months"
              },
              "last4BiWeeks": {
                "$ref": "#/components/schemas/last4BiWeeks"
              },
              "last4Quarters": {
                "$ref": "#/components/schemas/last4Quarters"
              },
              "last4Weeks": {
                "$ref": "#/components/schemas/last4Weeks"
              },
              "last52Weeks": {
                "$ref": "#/components/schemas/last52Weeks"
              },
              "last5FinancialYears": {
                "$ref": "#/components/schemas/last5FinancialYears"
              },
              "last5Years": {
                "$ref": "#/components/schemas/last5Years"
              },
              "last6BiMonths": {
                "$ref": "#/components/schemas/last6BiMonths"
              },
              "last6Months": {
                "$ref": "#/components/schemas/last6Months"
              },
              "last7Days": {
                "$ref": "#/components/schemas/last7Days"
              },
              "lastBiWeek": {
                "$ref": "#/components/schemas/lastBiWeek"
              },
              "lastBimonth": {
                "$ref": "#/components/schemas/lastBimonth"
              },
              "lastFinancialYear": {
                "$ref": "#/components/schemas/lastFinancialYear"
              },
              "lastMonth": {
                "$ref": "#/components/schemas/lastMonth"
              },
              "lastQuarter": {
                "$ref": "#/components/schemas/lastQuarter"
              },
              "lastSixMonth": {
                "$ref": "#/components/schemas/lastSixMonth"
              },
              "lastWeek": {
                "$ref": "#/components/schemas/lastWeek"
              },
              "lastYear": {
                "$ref": "#/components/schemas/lastYear"
              },
              "monthsLastYear": {
                "$ref": "#/components/schemas/monthsLastYear"
              },
              "monthsThisYear": {
                "$ref": "#/components/schemas/monthsThisYear"
              },
              "quartersLastYear": {
                "$ref": "#/components/schemas/quartersLastYear"
              },
              "quartersThisYear": {
                "$ref": "#/components/schemas/quartersThisYear"
              },
              "thisBiWeek": {
                "$ref": "#/components/schemas/thisBiWeek"
              },
              "thisBimonth": {
                "$ref": "#/components/schemas/thisBimonth"
              },
              "thisDay": {
                "$ref": "#/components/schemas/thisDay"
              },
              "thisFinancialYear": {
                "$ref": "#/components/schemas/thisFinancialYear"
              },
              "thisMonth": {
                "$ref": "#/components/schemas/thisMonth"
              },
              "thisQuarter": {
                "$ref": "#/components/schemas/thisQuarter"
              },
              "thisSixMonth": {
                "$ref": "#/components/schemas/thisSixMonth"
              },
              "thisWeek": {
                "$ref": "#/components/schemas/thisWeek"
              },
              "thisYear": {
                "$ref": "#/components/schemas/thisYear"
              },
              "weeksThisYear": {
                "$ref": "#/components/schemas/weeksThisYear"
              },
              "yesterday": {
                "$ref": "#/components/schemas/yesterday"
              }
            },
            "readOnly": false,
            "required": [
              "biMonthsThisYear",
              "last12Months",
              "last12Weeks",
              "last14Days",
              "last2SixMonths",
              "last3Days",
              "last3Months",
              "last4BiWeeks",
              "last4Quarters",
              "last4Weeks",
              "last52Weeks",
              "last5FinancialYears",
              "last5Years",
              "last6BiMonths",
              "last6Months",
              "last7Days",
              "lastBiWeek",
              "lastBimonth",
              "lastFinancialYear",
              "lastMonth",
              "lastQuarter",
              "lastSixMonth",
              "lastWeek",
              "lastYear",
              "monthsLastYear",
              "monthsThisYear",
              "quartersLastYear",
              "quartersThisYear",
              "thisBiWeek",
              "thisBimonth",
              "thisDay",
              "thisFinancialYear",
              "thisMonth",
              "thisQuarter",
              "thisSixMonth",
              "thisWeek",
              "thisYear",
              "weeksThisYear",
              "yesterday"
            ],
            "type": "object"
          },
          "reportParams": {
            "maxProperties": 4,
            "minProperties": 1,
            "properties": {
              "paramGrandParentOrganisationUnit": {
                "$ref": "#/components/schemas/paramGrandParentOrganisationUnit"
              },
              "paramOrganisationUnit": {
                "$ref": "#/components/schemas/paramOrganisationUnit"
              },
              "paramParentOrganisationUnit": {
                "$ref": "#/components/schemas/paramParentOrganisationUnit"
              },
              "paramReportingPeriod": {
                "$ref": "#/components/schemas/paramReportingPeriod"
              }
            },
            "readOnly": false,
            "required": [
              "paramGrandParentOrganisationUnit",
              "paramOrganisationUnit",
              "paramParentOrganisationUnit",
              "paramReportingPeriod"
            ],
            "type": "object"
          },
          "rowDimensions": {
            "items": {
              "example": "m",
              "format": "dimension",
              "maxLength": 255,
              "minLength": 1,
              "type": "string"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "rowSubTotals": {
            "$ref": "#/components/schemas/rowSubTotals"
          },
          "rowTotals": {
            "$ref": "#/components/schemas/rowTotals"
          },
          "rows": {
            "items": {
              "properties": {}
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "shortName": {
            "$ref": "#/components/schemas/shortName"
          },
          "showDimensionLabels": {
            "$ref": "#/components/schemas/showDimensionLabels"
          },
          "showHierarchy": {
            "$ref": "#/components/schemas/showHierarchy"
          },
          "skipRounding": {
            "$ref": "#/components/schemas/skipRounding"
          },
          "sortOrder": {
            "$ref": "#/components/schemas/sortOrder"
          },
          "subscribed": {
            "$ref": "#/components/schemas/subscribed"
          },
          "subscribers": {
            "items": {
              "properties": {}
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "subtitle": {
            "$ref": "#/components/schemas/subtitle"
          },
          "timeField": {
            "$ref": "#/components/schemas/timeField"
          },
          "title": {
            "$ref": "#/components/schemas/title"
          },
          "topLimit": {
            "$ref": "#/components/schemas/topLimit"
          },
          "translations": {
            "items": {
              "properties": {
                "locale": {
                  "$ref": "#/components/schemas/locale"
                },
                "property": {
                  "$ref": "#/components/schemas/property"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "user": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "userAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userUid": {
                  "$ref": "#/components/schemas/userUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "userGroupAccesses": {
            "items": {
              "maxProperties": 4,
              "minProperties": 0,
              "properties": {
                "access": {
                  "example": "r-r-----",
                  "format": "access",
                  "maxLength": 8,
                  "minLength": 8,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userGroupUid": {
                  "$ref": "#/components/schemas/userGroupUid"
                }
              },
              "required": [
                "access",
                "displayName",
                "id",
                "userGroupUid"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "userOrganisationUnit": {
            "$ref": "#/components/schemas/userOrganisationUnit"
          },
          "userOrganisationUnitChildren": {
            "$ref": "#/components/schemas/userOrganisationUnitChildren"
          },
          "userOrganisationUnitGrandChildren": {
            "$ref": "#/components/schemas/userOrganisationUnitGrandChildren"
          }
        },
        "required": [
          "name"
        ],
        "type": "object",
        "x-status-dhis2": "template"
      },
      "resourceTableType": {
        "enum": [
          "CATEGORY_OPTION_COMBO_NAME",
          "CATEGORY_STRUCTURE",
          "DATA_APPROVAL_MIN_LEVEL",
          "DATA_ELEMENT_CATEGORY_OPTION_COMBO",
          "DATA_ELEMENT_GROUP_SET_STRUCTURE",
          "DATA_ELEMENT_STRUCTURE",
          "DATA_SET_ORG_UNIT_CATEGORY",
          "DATE_PERIOD_STRUCTURE",
          "INDICATOR_GROUP_SET_STRUCTURE",
          "ORG_UNIT_GROUP_SET_STRUCTURE",
          "ORG_UNIT_STRUCTURE",
          "PERIOD_STRUCTURE"
        ],
        "format": "enum",
        "readOnly": false,
        "type": "string"
      },
      "responseType": {
        "type": "string"
      },
      "rightSide": {
        "properties": {}
      },
      "rightsideValue": {
        "format": "double",
        "maxLength": 2147483647,
        "minLength": 0,
        "readOnly": false,
        "type": "string"
      },
      "row": {
        "properties": {}
      },
      "rowSubTotals": {
        "type": "boolean"
      },
      "rowTotals": {
        "type": "boolean"
      },
      "searchable": {
        "type": "boolean"
      },
      "secret": {
        "maxLength": 36,
        "minLength": 36,
        "readOnly": false,
        "type": "string"
      },
      "section": {
        "maxProperties": 2147483647,
        "minProperties": 0,
        "properties": {
          "access": {
            "maxProperties": 6,
            "minProperties": 1,
            "properties": {
              "delete": {
                "$ref": "#/components/schemas/delete"
              },
              "externalize": {
                "$ref": "#/components/schemas/externalize"
              },
              "manage": {
                "$ref": "#/components/schemas/manage"
              },
              "read": {
                "$ref": "#/components/schemas/read"
              },
              "update": {
                "$ref": "#/components/schemas/update"
              },
              "write": {
                "$ref": "#/components/schemas/write"
              }
            },
            "readOnly": true,
            "required": [
              "delete",
              "externalize",
              "manage",
              "read",
              "update",
              "write"
            ],
            "type": "object"
          },
          "attributeValues": {
            "items": {
              "properties": {
                "attribute": {
                  "format": "uid",
                  "maxLength": 255,
                  "readOnly": false,
                  "type": "string"
                },
                "created": {
                  "$ref": "#/components/schemas/created"
                },
                "lastUpdated": {
                  "$ref": "#/components/schemas/lastUpdated"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              },
              "required": [
                "attribute"
              ]
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "categoryCombos": {
            "items": {
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/id"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "readOnly": true,
            "type": "array"
          },
          "code": {
            "$ref": "#/components/schemas/code"
          },
          "created": {
            "$ref": "#/components/schemas/created"
          },
          "dataElements": {
            "items": {
              "maxProperties": 1,
              "minProperties": 0,
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/id"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "dataSet": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "description": {
            "$ref": "#/components/schemas/description"
          },
          "displayName": {
            "$ref": "#/components/schemas/displayName"
          },
          "externalAccess": {
            "$ref": "#/components/schemas/externalAccess"
          },
          "favorite": {
            "type": "boolean"
          },
          "favorites": {
            "items": {
              "$ref": "#/components/schemas/favorite"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "greyedFields": {
            "items": {
              "maxProperties": 20,
              "minProperties": 0,
              "properties": {
                "access": {
                  "maxProperties": 6,
                  "minProperties": 0,
                  "properties": {
                    "delete": {
                      "$ref": "#/components/schemas/delete"
                    },
                    "externalize": {
                      "$ref": "#/components/schemas/externalize"
                    },
                    "manage": {
                      "$ref": "#/components/schemas/manage"
                    },
                    "read": {
                      "$ref": "#/components/schemas/read"
                    },
                    "update": {
                      "$ref": "#/components/schemas/update"
                    },
                    "write": {
                      "$ref": "#/components/schemas/write"
                    }
                  },
                  "required": [
                    "delete",
                    "externalize",
                    "manage",
                    "read",
                    "update",
                    "write"
                  ],
                  "type": "object"
                },
                "attributeValues": {
                  "items": {
                    "properties": {
                      "attribute": {
                        "format": "uid",
                        "maxLength": 255,
                        "readOnly": false,
                        "type": "string"
                      },
                      "created": {
                        "$ref": "#/components/schemas/created"
                      },
                      "lastUpdated": {
                        "$ref": "#/components/schemas/lastUpdated"
                      },
                      "value": {
                        "$ref": "#/components/schemas/value"
                      }
                    },
                    "required": [
                      "attribute"
                    ]
                  },
                  "maxItems": 2147483647,
                  "minItems": 0,
                  "type": "array"
                },
                "categoryOptionCombo": {
                  "maxProperties": 1,
                  "minProperties": 0,
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    }
                  },
                  "required": [
                    "id"
                  ],
                  "type": "object"
                },
                "created": {
                  "$ref": "#/components/schemas/created"
                },
                "dataElement": {
                  "maxProperties": 1,
                  "minProperties": 0,
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    }
                  },
                  "required": [
                    "id"
                  ],
                  "type": "object"
                },
                "dimensionItem": {
                  "$ref": "#/components/schemas/dimensionItem"
                },
                "dimensionItemType": {
                  "enum": [
                    "DATA_ELEMENT_OPERAND"
                  ],
                  "example": "DATA_ELEMENT_OPERAND",
                  "format": "enum",
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "displayShortName": {
                  "$ref": "#/components/schemas/displayShortName"
                },
                "externalAccess": {
                  "$ref": "#/components/schemas/externalAccess"
                },
                "favorite": {
                  "type": "boolean"
                },
                "favorites": {
                  "items": {
                    "$ref": "#/components/schemas/favorite"
                  },
                  "maxItems": 2147483647,
                  "minItems": 0,
                  "type": "array"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "lastUpdated": {
                  "$ref": "#/components/schemas/lastUpdated"
                },
                "legendSets": {
                  "items": {
                    "maxProperties": 20,
                    "minProperties": 0,
                    "properties": {
                      "access": {
                        "maxProperties": 6,
                        "minProperties": 1,
                        "properties": {
                          "delete": {
                            "$ref": "#/components/schemas/delete"
                          },
                          "externalize": {
                            "$ref": "#/components/schemas/externalize"
                          },
                          "manage": {
                            "$ref": "#/components/schemas/manage"
                          },
                          "read": {
                            "$ref": "#/components/schemas/read"
                          },
                          "update": {
                            "$ref": "#/components/schemas/update"
                          },
                          "write": {
                            "$ref": "#/components/schemas/write"
                          }
                        },
                        "readOnly": true,
                        "required": [
                          "delete",
                          "externalize",
                          "manage",
                          "read",
                          "update",
                          "write"
                        ],
                        "type": "object"
                      },
                      "attributeValues": {
                        "items": {
                          "properties": {
                            "attribute": {
                              "format": "uid",
                              "maxLength": 255,
                              "readOnly": false,
                              "type": "string"
                            },
                            "created": {
                              "$ref": "#/components/schemas/created"
                            },
                            "lastUpdated": {
                              "$ref": "#/components/schemas/lastUpdated"
                            },
                            "value": {
                              "$ref": "#/components/schemas/value"
                            }
                          },
                          "required": [
                            "attribute"
                          ]
                        },
                        "maxItems": 2147483647,
                        "minItems": 0,
                        "type": "array"
                      },
                      "code": {
                        "$ref": "#/components/schemas/code"
                      },
                      "created": {
                        "$ref": "#/components/schemas/created"
                      },
                      "displayName": {
                        "$ref": "#/components/schemas/displayName"
                      },
                      "externalAccess": {
                        "$ref": "#/components/schemas/externalAccess"
                      },
                      "favorite": {
                        "type": "boolean"
                      },
                      "favorites": {
                        "items": {
                          "$ref": "#/components/schemas/favorite"
                        },
                        "maxItems": 2147483647,
                        "minItems": 0,
                        "type": "array"
                      },
                      "href": {
                        "$ref": "#/components/schemas/href"
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "lastUpdated": {
                        "$ref": "#/components/schemas/lastUpdated"
                      },
                      "lastUpdatedBy": {
                        "properties": {
                          "id": {
                            "$ref": "#/components/schemas/id"
                          }
                        },
                        "required": [
                          "id"
                        ],
                        "type": "object"
                      },
                      "legends": {
                        "items": {
                          "maxProperties": 16,
                          "minProperties": 0,
                          "properties": {
                            "access": {
                              "maxProperties": 6,
                              "minProperties": 0,
                              "properties": {
                                "delete": {
                                  "$ref": "#/components/schemas/delete"
                                },
                                "externalize": {
                                  "$ref": "#/components/schemas/externalize"
                                },
                                "manage": {
                                  "$ref": "#/components/schemas/manage"
                                },
                                "read": {
                                  "$ref": "#/components/schemas/read"
                                },
                                "update": {
                                  "$ref": "#/components/schemas/update"
                                },
                                "write": {
                                  "$ref": "#/components/schemas/write"
                                }
                              },
                              "required": [
                                "delete",
                                "externalize",
                                "manage",
                                "read",
                                "update",
                                "write"
                              ],
                              "type": "object"
                            },
                            "attributeValues": {
                              "items": {
                                "properties": {
                                  "attribute": {
                                    "format": "uid",
                                    "maxLength": 255,
                                    "readOnly": false,
                                    "type": "string"
                                  },
                                  "created": {
                                    "$ref": "#/components/schemas/created"
                                  },
                                  "lastUpdated": {
                                    "$ref": "#/components/schemas/lastUpdated"
                                  },
                                  "value": {
                                    "$ref": "#/components/schemas/value"
                                  }
                                },
                                "required": [
                                  "attribute"
                                ]
                              },
                              "maxItems": 2147483647,
                              "minItems": 0,
                              "type": "array"
                            },
                            "color": {
                              "$ref": "#/components/schemas/color"
                            },
                            "created": {
                              "$ref": "#/components/schemas/created"
                            },
                            "displayName": {
                              "$ref": "#/components/schemas/displayName"
                            },
                            "endValue": {
                              "$ref": "#/components/schemas/endValue"
                            },
                            "externalAccess": {
                              "$ref": "#/components/schemas/externalAccess"
                            },
                            "favorite": {
                              "type": "boolean"
                            },
                            "favorites": {
                              "items": {
                                "$ref": "#/components/schemas/favorite"
                              },
                              "maxItems": 2147483647,
                              "minItems": 0,
                              "type": "array"
                            },
                            "id": {
                              "$ref": "#/components/schemas/id"
                            },
                            "lastUpdated": {
                              "$ref": "#/components/schemas/lastUpdated"
                            },
                            "name": {
                              "$ref": "#/components/schemas/name"
                            },
                            "startValue": {
                              "$ref": "#/components/schemas/startValue"
                            },
                            "translations": {
                              "items": {
                                "properties": {
                                  "locale": {
                                    "$ref": "#/components/schemas/locale"
                                  },
                                  "property": {
                                    "$ref": "#/components/schemas/property"
                                  },
                                  "value": {
                                    "$ref": "#/components/schemas/value"
                                  }
                                }
                              },
                              "maxItems": 2147483647,
                              "minItems": 0,
                              "type": "array"
                            },
                            "userAccesses": {
                              "items": {
                                "properties": {
                                  "access": {
                                    "format": "access",
                                    "maxLength": 255,
                                    "minLength": 0,
                                    "readOnly": false,
                                    "type": "string"
                                  },
                                  "displayName": {
                                    "$ref": "#/components/schemas/displayName"
                                  },
                                  "id": {
                                    "$ref": "#/components/schemas/id"
                                  },
                                  "userUid": {
                                    "$ref": "#/components/schemas/userUid"
                                  }
                                }
                              },
                              "maxItems": 2147483647,
                              "minItems": 0,
                              "type": "array"
                            },
                            "userGroupAccesses": {
                              "items": {
                                "properties": {
                                  "access": {
                                    "format": "access",
                                    "maxLength": 255,
                                    "minLength": 0,
                                    "readOnly": false,
                                    "type": "string"
                                  },
                                  "displayName": {
                                    "$ref": "#/components/schemas/displayName"
                                  },
                                  "id": {
                                    "$ref": "#/components/schemas/id"
                                  },
                                  "userGroupUid": {
                                    "$ref": "#/components/schemas/userGroupUid"
                                  }
                                }
                              },
                              "maxItems": 2147483647,
                              "minItems": 0,
                              "type": "array"
                            }
                          },
                          "required": [
                            "access",
                            "attributeValues",
                            "color",
                            "created",
                            "displayName",
                            "endValue",
                            "externalAccess",
                            "favorite",
                            "favorites",
                            "id",
                            "lastUpdated",
                            "name",
                            "startValue",
                            "translations",
                            "userAccesses",
                            "userGroupAccesses"
                          ],
                          "type": "object"
                        },
                        "maxItems": 2147483647,
                        "minItems": 0,
                        "type": "array"
                      },
                      "name": {
                        "$ref": "#/components/schemas/name"
                      },
                      "publicAccess": {
                        "$ref": "#/components/schemas/publicAccess"
                      },
                      "symbolizer": {
                        "$ref": "#/components/schemas/symbolizer"
                      },
                      "translations": {
                        "items": {
                          "properties": {
                            "locale": {
                              "$ref": "#/components/schemas/locale"
                            },
                            "property": {
                              "$ref": "#/components/schemas/property"
                            },
                            "value": {
                              "$ref": "#/components/schemas/value"
                            }
                          }
                        },
                        "maxItems": 2147483647,
                        "minItems": 0,
                        "type": "array"
                      },
                      "user": {
                        "properties": {
                          "id": {
                            "$ref": "#/components/schemas/id"
                          }
                        },
                        "required": [
                          "id"
                        ],
                        "type": "object"
                      },
                      "userAccesses": {
                        "items": {
                          "properties": {
                            "access": {
                              "format": "access",
                              "maxLength": 255,
                              "minLength": 0,
                              "readOnly": false,
                              "type": "string"
                            },
                            "displayName": {
                              "$ref": "#/components/schemas/displayName"
                            },
                            "id": {
                              "$ref": "#/components/schemas/id"
                            },
                            "userUid": {
                              "$ref": "#/components/schemas/userUid"
                            }
                          }
                        },
                        "maxItems": 2147483647,
                        "minItems": 0,
                        "type": "array"
                      },
                      "userGroupAccesses": {
                        "items": {
                          "properties": {
                            "access": {
                              "format": "access",
                              "maxLength": 255,
                              "minLength": 0,
                              "readOnly": false,
                              "type": "string"
                            },
                            "displayName": {
                              "$ref": "#/components/schemas/displayName"
                            },
                            "id": {
                              "$ref": "#/components/schemas/id"
                            },
                            "userGroupUid": {
                              "$ref": "#/components/schemas/userGroupUid"
                            }
                          }
                        },
                        "maxItems": 2147483647,
                        "minItems": 0,
                        "type": "array"
                      }
                    },
                    "required": [
                      "name"
                    ],
                    "type": "object",
                    "x-status-dhis2": "template"
                  },
                  "maxItems": 2147483647,
                  "minItems": 0,
                  "type": "array"
                },
                "name": {
                  "$ref": "#/components/schemas/name"
                },
                "shortName": {
                  "$ref": "#/components/schemas/shortName"
                },
                "translations": {
                  "items": {
                    "properties": {
                      "locale": {
                        "$ref": "#/components/schemas/locale"
                      },
                      "property": {
                        "$ref": "#/components/schemas/property"
                      },
                      "value": {
                        "$ref": "#/components/schemas/value"
                      }
                    }
                  },
                  "maxItems": 2147483647,
                  "minItems": 0,
                  "type": "array"
                },
                "userAccesses": {
                  "items": {
                    "properties": {
                      "access": {
                        "format": "access",
                        "maxLength": 255,
                        "minLength": 0,
                        "readOnly": false,
                        "type": "string"
                      },
                      "displayName": {
                        "$ref": "#/components/schemas/displayName"
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "userUid": {
                        "$ref": "#/components/schemas/userUid"
                      }
                    }
                  },
                  "maxItems": 2147483647,
                  "minItems": 0,
                  "type": "array"
                },
                "userGroupAccesses": {
                  "items": {
                    "properties": {
                      "access": {
                        "format": "access",
                        "maxLength": 255,
                        "minLength": 0,
                        "readOnly": false,
                        "type": "string"
                      },
                      "displayName": {
                        "$ref": "#/components/schemas/displayName"
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "userGroupUid": {
                        "$ref": "#/components/schemas/userGroupUid"
                      }
                    }
                  },
                  "maxItems": 2147483647,
                  "minItems": 0,
                  "type": "array"
                }
              },
              "required": [
                "access",
                "attributeValues",
                "categoryOptionCombo",
                "created",
                "dataElement",
                "dimensionItem",
                "dimensionItemType",
                "displayName",
                "displayShortName",
                "externalAccess",
                "favorite",
                "favorites",
                "id",
                "lastUpdated",
                "legendSets",
                "name",
                "shortName",
                "translations",
                "userAccesses",
                "userGroupAccesses"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "href": {
            "$ref": "#/components/schemas/href"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "indicators": {
            "items": {
              "maxProperties": 1,
              "minProperties": 0,
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/id"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "lastUpdated": {
            "$ref": "#/components/schemas/lastUpdated"
          },
          "lastUpdatedBy": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "name": {
            "$ref": "#/components/schemas/name"
          },
          "publicAccess": {
            "$ref": "#/components/schemas/publicAccess"
          },
          "showColumnTotals": {
            "$ref": "#/components/schemas/showColumnTotals"
          },
          "showRowTotals": {
            "$ref": "#/components/schemas/showRowTotals"
          },
          "sortOrder": {
            "$ref": "#/components/schemas/sortOrder"
          },
          "translations": {
            "items": {
              "maxProperties": 3,
              "minProperties": 0,
              "properties": {
                "locale": {
                  "$ref": "#/components/schemas/locale"
                },
                "property": {
                  "enum": [
                    "NAME"
                  ],
                  "example": "NAME",
                  "format": "enum",
                  "type": "string"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              },
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "user": {
            "format": "uid",
            "maxLength": 11,
            "minLength": 11,
            "type": "string"
          },
          "userAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userUid": {
                  "$ref": "#/components/schemas/userUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "userGroupAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userGroupUid": {
                  "$ref": "#/components/schemas/userGroupUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          }
        },
        "required": [
          "dataSet",
          "name"
        ],
        "type": "object",
        "x-status-dhis2": "template"
      },
      "sectionAttribute": {
        "type": "boolean"
      },
      "selectEnrollmentDatesInFuture": {
        "type": "boolean"
      },
      "selectIncidentDatesInFuture": {
        "type": "boolean"
      },
      "selfRegistered": {
        "type": "boolean"
      },
      "sendStrategy": {
        "enum": [
          "COLLECTIVE_SUMMARY",
          "SINGLE_NOTIFICATION"
        ],
        "format": "enum",
        "readOnly": false,
        "type": "string"
      },
      "separator": {
        "example": "myseparato",
        "format": "general",
        "maxLength": 2147483647,
        "type": "string"
      },
      "sequentialSampleCount": {
        "example": 6,
        "format": "int32",
        "maximum": 2147483647,
        "minimum": 0,
        "type": "integer"
      },
      "series": {
        "example": "m",
        "format": "dimension",
        "maxLength": 255,
        "minLength": 0,
        "type": "string"
      },
      "shape": {
        "enum": [
          "DOUBLE_WIDTH",
          "FULL_WIDTH",
          "NORMAL"
        ],
        "example": "NORMAL",
        "format": "enum",
        "type": "string"
      },
      "shortName": {
        "format": "general",
        "maxLength": 100,
        "minLength": 1,
        "type": "string"
      },
      "showColumnTotals": {
        "type": "boolean"
      },
      "showData": {
        "type": "boolean"
      },
      "showDimensionLabels": {
        "type": "boolean"
      },
      "showHierarchy": {
        "type": "boolean"
      },
      "showRowTotals": {
        "type": "boolean"
      },
      "skipFormValidation": {
        "type": "boolean"
      },
      "skipOffline": {
        "type": "boolean"
      },
      "skipRounding": {
        "type": "boolean"
      },
      "skipSynchronization": {
        "type": "boolean"
      },
      "skipTotal": {
        "type": "boolean"
      },
      "skype": {
        "example": "myskype",
        "format": "general",
        "maxLength": 255,
        "minLength": 0,
        "type": "string"
      },
      "slidingWindow": {
        "type": "boolean"
      },
      "smsCommand": {
        "maxProperties": 26,
        "minProperties": 0,
        "properties": {
          "access": {
            "maxProperties": 6,
            "minProperties": 0,
            "properties": {
              "delete": {
                "$ref": "#/components/schemas/delete"
              },
              "externalize": {
                "$ref": "#/components/schemas/externalize"
              },
              "manage": {
                "$ref": "#/components/schemas/manage"
              },
              "read": {
                "$ref": "#/components/schemas/read"
              },
              "update": {
                "$ref": "#/components/schemas/update"
              },
              "write": {
                "$ref": "#/components/schemas/write"
              }
            },
            "required": [
              "delete",
              "externalize",
              "manage",
              "read",
              "update",
              "write"
            ],
            "type": "object"
          },
          "attributeValues": {
            "items": {
              "properties": {
                "attribute": {
                  "format": "uid",
                  "maxLength": 255,
                  "readOnly": false,
                  "type": "string"
                },
                "created": {
                  "$ref": "#/components/schemas/created"
                },
                "lastUpdated": {
                  "$ref": "#/components/schemas/lastUpdated"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              },
              "required": [
                "attribute"
              ]
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "created": {
            "$ref": "#/components/schemas/created"
          },
          "currentPeriodUsedForReporting": {
            "$ref": "#/components/schemas/currentPeriodUsedForReporting"
          },
          "dataset": {
            "maxProperties": 1,
            "minProperties": 0,
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "defaultMessage": {
            "$ref": "#/components/schemas/defaultMessage"
          },
          "displayName": {
            "$ref": "#/components/schemas/displayName"
          },
          "externalAccess": {
            "$ref": "#/components/schemas/externalAccess"
          },
          "favorite": {
            "type": "boolean"
          },
          "favorites": {
            "items": {
              "$ref": "#/components/schemas/favorite"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "href": {
            "$ref": "#/components/schemas/href"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "lastUpdated": {
            "$ref": "#/components/schemas/lastUpdated"
          },
          "moreThanOneOrgUnitMessage": {
            "$ref": "#/components/schemas/moreThanOneOrgUnitMessage"
          },
          "name": {
            "$ref": "#/components/schemas/name"
          },
          "noUserMessage": {
            "$ref": "#/components/schemas/noUserMessage"
          },
          "parserType": {
            "$ref": "#/components/schemas/parserType"
          },
          "receivedMessage": {
            "$ref": "#/components/schemas/receivedMessage"
          },
          "separator": {
            "$ref": "#/components/schemas/separator"
          },
          "smsCodes": {
            "items": {
              "maxProperties": 4,
              "minProperties": 0,
              "properties": {
                "code": {
                  "$ref": "#/components/schemas/code"
                },
                "compulsory": {
                  "$ref": "#/components/schemas/compulsory"
                },
                "dataElement": {
                  "maxProperties": 1,
                  "minProperties": 0,
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    }
                  },
                  "readOnly": true,
                  "required": [
                    "id"
                  ],
                  "type": "object"
                },
                "optionId": {
                  "example": 4,
                  "format": "int32",
                  "maximum": 2147483647,
                  "minimum": 4,
                  "type": "integer"
                }
              },
              "required": [
                "code",
                "compulsory",
                "dataElement",
                "optionId"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "specialCharacters": {
            "items": {
              "properties": {}
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "successMessage": {
            "$ref": "#/components/schemas/successMessage"
          },
          "translations": {
            "items": {
              "properties": {
                "locale": {
                  "$ref": "#/components/schemas/locale"
                },
                "property": {
                  "$ref": "#/components/schemas/property"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "userAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userUid": {
                  "$ref": "#/components/schemas/userUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "userGroupAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userGroupUid": {
                  "$ref": "#/components/schemas/userGroupUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "wrongFormatMessage": {
            "$ref": "#/components/schemas/wrongFormatMessage"
          }
        },
        "required": [
          "access",
          "attributeValues",
          "created",
          "currentPeriodUsedForReporting",
          "dataset",
          "defaultMessage",
          "displayName",
          "externalAccess",
          "favorite",
          "favorites",
          "href",
          "id",
          "lastUpdated",
          "moreThanOneOrgUnitMessage",
          "name",
          "noUserMessage",
          "parserType",
          "receivedMessage",
          "separator",
          "smsCodes",
          "specialCharacters",
          "successMessage",
          "translations",
          "userAccesses",
          "userGroupAccesses",
          "wrongFormatMessage"
        ],
        "type": "object",
        "x-unique": "true"
      },
      "sortOrder": {
        "maxLength": 2147483647,
        "minLength": 0,
        "type": "integer",
        "x-association": "true"
      },
      "sortOrderInListNoProgram": {
        "example": 0,
        "format": "int32",
        "maximum": 2147483647,
        "minimum": 0,
        "type": "integer"
      },
      "sortOrderInVisitSchedule": {
        "example": 0,
        "format": "int32",
        "maximum": 2147483647,
        "minimum": 0,
        "type": "integer"
      },
      "source": {
        "example": null,
        "format": "uid",
        "maxLength": 11,
        "minLength": 11,
        "readOnly": false,
        "type": "string"
      },
      "specialCharacter": {
        "properties": {}
      },
      "sql": {
        "maxLength": 2147483647,
        "minLength": 0,
        "readOnly": false,
        "type": "string"
      },
      "sqlQuery": {
        "example": "mysqlQuery",
        "format": "general",
        "maxLength": 2147483647,
        "minLength": 0,
        "type": "string"
      },
      "sqlView": {
        "maxProperties": 22,
        "minProperties": 0,
        "properties": {
          "access": {
            "maxProperties": 6,
            "minProperties": 1,
            "properties": {
              "delete": {
                "$ref": "#/components/schemas/delete"
              },
              "externalize": {
                "$ref": "#/components/schemas/externalize"
              },
              "manage": {
                "$ref": "#/components/schemas/manage"
              },
              "read": {
                "$ref": "#/components/schemas/read"
              },
              "update": {
                "$ref": "#/components/schemas/update"
              },
              "write": {
                "$ref": "#/components/schemas/write"
              }
            },
            "readOnly": true,
            "required": [
              "delete",
              "externalize",
              "manage",
              "read",
              "update",
              "write"
            ],
            "type": "object"
          },
          "attributeValues": {
            "items": {
              "properties": {
                "attribute": {
                  "format": "uid",
                  "maxLength": 255,
                  "readOnly": false,
                  "type": "string"
                },
                "created": {
                  "$ref": "#/components/schemas/created"
                },
                "lastUpdated": {
                  "$ref": "#/components/schemas/lastUpdated"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              },
              "required": [
                "attribute"
              ]
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "cacheStrategy": {
            "$ref": "#/components/schemas/cacheStrategy"
          },
          "code": {
            "$ref": "#/components/schemas/code"
          },
          "created": {
            "$ref": "#/components/schemas/created"
          },
          "description": {
            "$ref": "#/components/schemas/description"
          },
          "displayName": {
            "$ref": "#/components/schemas/displayName"
          },
          "externalAccess": {
            "$ref": "#/components/schemas/externalAccess"
          },
          "favorite": {
            "type": "boolean"
          },
          "favorites": {
            "items": {
              "$ref": "#/components/schemas/favorite"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "href": {
            "$ref": "#/components/schemas/href"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "lastUpdated": {
            "$ref": "#/components/schemas/lastUpdated"
          },
          "lastUpdatedBy": {
            "$ref": "#/components/schemas/lastUpdatedBy"
          },
          "name": {
            "$ref": "#/components/schemas/name"
          },
          "publicAccess": {
            "$ref": "#/components/schemas/publicAccess"
          },
          "sqlQuery": {
            "$ref": "#/components/schemas/sqlQuery"
          },
          "translations": {
            "items": {
              "properties": {
                "locale": {
                  "$ref": "#/components/schemas/locale"
                },
                "property": {
                  "$ref": "#/components/schemas/property"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "type": {
            "enum": [
              "MATERIALIZED_VIEW",
              "QUERY",
              "VIEW"
            ],
            "example": "MATERIALIZED_VIEW",
            "format": "enum",
            "type": "string"
          },
          "user": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "userAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userUid": {
                  "$ref": "#/components/schemas/userUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "userGroupAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userGroupUid": {
                  "$ref": "#/components/schemas/userGroupUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          }
        },
        "required": [
          "name",
          "sqlQuery"
        ],
        "type": "object",
        "x-status-dhis2": "template"
      },
      "sqlViewAttribute": {
        "type": "boolean"
      },
      "standardInterval": {
        "example": 30,
        "format": "int32",
        "maximum": 2147483647,
        "minimum": 0,
        "type": "integer"
      },
      "startDate": {
        "example": "2016-04-01T00:00:00.000",
        "format": "date-time",
        "maxLength": 23,
        "minLength": 23,
        "type": "string"
      },
      "startValue": {
        "example": 30.0,
        "format": "double",
        "maximum": 2147483647,
        "minimum": -2147483648,
        "type": "number"
      },
      "status": {
        "enum": [
          "ACTIVE",
          "CANCELLED",
          "COMPLETED"
        ],
        "maxLength": 50,
        "readOnly": false,
        "type": "string"
      },
      "style": {
        "properties": {}
      },
      "styleDataItem": {
        "properties": {}
      },
      "subject": {
        "example": "mysubject",
        "format": "general",
        "maxLength": 255,
        "minLength": 2,
        "type": "string"
      },
      "subjectTemplate": {
        "maxLength": 100,
        "minLength": 0,
        "readOnly": false,
        "type": "string"
      },
      "subscribed": {
        "readOnly": true,
        "type": "boolean"
      },
      "subscriber": {
        "properties": {}
      },
      "subtitle": {
        "example": "mysubtitle",
        "format": "general",
        "maxLength": 255,
        "minLength": 0,
        "type": "string"
      },
      "successMessage": {
        "example": "mysuccessMessage",
        "format": "general",
        "maxLength": 2147483647,
        "minLength": 0,
        "type": "string"
      },
      "surname": {
        "example": "mysur",
        "format": "general",
        "maxLength": 160,
        "minLength": 2,
        "type": "string"
      },
      "symbol": {
        "example": "mysym",
        "format": "general",
        "maxLength": 255,
        "type": "string"
      },
      "symbolizer": {
        "example": "mysy",
        "format": "general",
        "maxLength": 255,
        "minLength": 0,
        "type": "string"
      },
      "targetLineLabel": {
        "example": "mytar",
        "format": "general",
        "maxLength": 255,
        "type": "string"
      },
      "targetLineValue": {
        "example": 25.0,
        "format": "double",
        "maximum": 2147483647,
        "minimum": 0,
        "type": "number"
      },
      "teiSearchOrganisationUnit": {
        "properties": {}
      },
      "telegram": {
        "example": "mytelegram",
        "format": "general",
        "maxLength": 255,
        "minLength": 0,
        "type": "string"
      },
      "text": {
        "format": "general",
        "maxLength": 2147483647,
        "minLength": 0,
        "type": "string"
      },
      "thisBiWeek": {
        "type": "boolean"
      },
      "thisBimonth": {
        "type": "boolean"
      },
      "thisDay": {
        "type": "boolean"
      },
      "thisFinancialYear": {
        "type": "boolean"
      },
      "thisMonth": {
        "type": "boolean"
      },
      "thisQuarter": {
        "type": "boolean"
      },
      "thisSixMonth": {
        "type": "boolean"
      },
      "thisWeek": {
        "type": "boolean"
      },
      "thisYear": {
        "type": "boolean"
      },
      "timeField": {
        "format": "general",
        "maxLength": 255,
        "minLength": 0,
        "type": "string"
      },
      "timelyDays": {
        "example": 0,
        "format": "int32",
        "maximum": 2147483647,
        "minimum": 0,
        "type": "integer"
      },
      "title": {
        "example": "mytitle",
        "format": "general",
        "maxLength": 255,
        "minLength": 0,
        "type": "string"
      },
      "toConstraint": {
        "properties": {}
      },
      "topLimit": {
        "example": 0,
        "format": "int32",
        "maximum": 2147483647,
        "minimum": 0,
        "type": "integer"
      },
      "total": {
        "description": "total number of items found by the request",
        "format": "int32",
        "maximum": 255,
        "minimum": 0,
        "readOnly": true,
        "type": "integer"
      },
      "trackedEntityAttribute": {
        "maxProperties": 45,
        "minProperties": 0,
        "properties": {
          "access": {
            "maxProperties": 6,
            "minProperties": 1,
            "properties": {
              "delete": {
                "$ref": "#/components/schemas/delete"
              },
              "externalize": {
                "$ref": "#/components/schemas/externalize"
              },
              "manage": {
                "$ref": "#/components/schemas/manage"
              },
              "read": {
                "$ref": "#/components/schemas/read"
              },
              "update": {
                "$ref": "#/components/schemas/update"
              },
              "write": {
                "$ref": "#/components/schemas/write"
              }
            },
            "readOnly": true,
            "required": [
              "delete",
              "externalize",
              "manage",
              "read",
              "update",
              "write"
            ],
            "type": "object"
          },
          "aggregationType": {
            "enum": [
              "AVERAGE",
              "AVERAGE_SUM_ORG_UNIT",
              "COUNT",
              "CUSTOM",
              "DEFAULT",
              "LAST",
              "LAST_AVERAGE_ORG_UNIT",
              "MAX",
              "MIN",
              "NONE",
              "STDDEV",
              "SUM",
              "VARIANCE"
            ],
            "example": "AVERAGE",
            "format": "enum",
            "type": "string"
          },
          "attributeValues": {
            "items": {
              "properties": {
                "attribute": {
                  "format": "uid",
                  "maxLength": 255,
                  "readOnly": false,
                  "type": "string"
                },
                "created": {
                  "$ref": "#/components/schemas/created"
                },
                "lastUpdated": {
                  "$ref": "#/components/schemas/lastUpdated"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              },
              "required": [
                "attribute"
              ]
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "code": {
            "$ref": "#/components/schemas/code"
          },
          "confidential": {
            "$ref": "#/components/schemas/confidential"
          },
          "created": {
            "$ref": "#/components/schemas/created"
          },
          "description": {
            "$ref": "#/components/schemas/description"
          },
          "dimensionItem": {
            "$ref": "#/components/schemas/dimensionItem"
          },
          "dimensionItemType": {
            "enum": [
              "CATEGORY_OPTION",
              "CATEGORY_OPTION_GROUP",
              "DATA_ELEMENT",
              "DATA_ELEMENT_GROUP",
              "DATA_ELEMENT_OPERAND",
              "INDICATOR",
              "OPTION_GROUP",
              "ORGANISATION_UNIT",
              "ORGANISATION_UNIT_GROUP",
              "PERIOD",
              "PROGRAM_ATTRIBUTE",
              "PROGRAM_DATA_ELEMENT",
              "PROGRAM_INDICATOR",
              "REPORTING_RATE"
            ],
            "example": "PROGRAM_ATTRIBUTE",
            "format": "enum",
            "type": "string"
          },
          "displayDescription": {
            "$ref": "#/components/schemas/displayDescription"
          },
          "displayInListNoProgram": {
            "$ref": "#/components/schemas/displayInListNoProgram"
          },
          "displayName": {
            "$ref": "#/components/schemas/displayName"
          },
          "displayOnVisitSchedule": {
            "$ref": "#/components/schemas/displayOnVisitSchedule"
          },
          "displayShortName": {
            "$ref": "#/components/schemas/displayShortName"
          },
          "expression": {
            "$ref": "#/components/schemas/expression"
          },
          "externalAccess": {
            "$ref": "#/components/schemas/externalAccess"
          },
          "favorite": {
            "type": "boolean"
          },
          "favorites": {
            "items": {
              "$ref": "#/components/schemas/favorite"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "formName": {
            "$ref": "#/components/schemas/formName"
          },
          "generated": {
            "type": "boolean"
          },
          "href": {
            "$ref": "#/components/schemas/href"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "inherit": {
            "$ref": "#/components/schemas/inherit"
          },
          "lastUpdated": {
            "$ref": "#/components/schemas/lastUpdated"
          },
          "lastUpdatedBy": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "legendSets": {
            "items": {
              "format": "uid",
              "maxLength": 11,
              "minLength": 11,
              "type": "string",
              "x-association": "true"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": false,
            "type": "array",
            "x-association": "true"
          },
          "name": {
            "$ref": "#/components/schemas/name"
          },
          "optionSet": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "optionSetValue": {
            "$ref": "#/components/schemas/optionSetValue"
          },
          "orgunitScope": {
            "$ref": "#/components/schemas/orgunitScope"
          },
          "pattern": {
            "$ref": "#/components/schemas/pattern"
          },
          "programScope": {
            "$ref": "#/components/schemas/programScope"
          },
          "publicAccess": {
            "$ref": "#/components/schemas/publicAccess"
          },
          "shortName": {
            "$ref": "#/components/schemas/shortName"
          },
          "skipSynchronization": {
            "$ref": "#/components/schemas/skipSynchronization"
          },
          "sortOrderInListNoProgram": {
            "$ref": "#/components/schemas/sortOrderInListNoProgram"
          },
          "sortOrderInVisitSchedule": {
            "$ref": "#/components/schemas/sortOrderInVisitSchedule"
          },
          "style": {
            "maxProperties": 1,
            "minProperties": 1,
            "readOnly": false,
            "type": "object"
          },
          "translations": {
            "items": {
              "properties": {
                "locale": {
                  "$ref": "#/components/schemas/locale"
                },
                "property": {
                  "$ref": "#/components/schemas/property"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "unique": {
            "$ref": "#/components/schemas/unique"
          },
          "user": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "userAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userUid": {
                  "$ref": "#/components/schemas/userUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "userGroupAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userGroupUid": {
                  "$ref": "#/components/schemas/userGroupUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "valueType": {
            "$ref": "#/components/schemas/valueType"
          },
          "x-unique": {
            "$ref": "#/components/schemas/x-unique"
          }
        },
        "required": [
          "aggregationType",
          "name",
          "valueType"
        ],
        "type": "object",
        "x-status-dhis2": "template"
      },
      "trackedEntityAttributeAttribute": {
        "type": "boolean"
      },
      "trackedEntityInstance": {
        "maxProperties": 16,
        "minProperties": 0,
        "properties": {
          "attributes": {
            "items": {
              "maxProperties": 7,
              "minProperties": 0,
              "properties": {
                "attribute": {
                  "example": "w75KJ2mc4zz",
                  "format": "uid",
                  "maxLength": 11,
                  "minLength": 11,
                  "type": "string"
                },
                "code": {
                  "$ref": "#/components/schemas/code"
                },
                "created": {
                  "$ref": "#/components/schemas/created"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "lastUpdated": {
                  "$ref": "#/components/schemas/lastUpdated"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                },
                "valueType": {
                  "enum": [
                    "TEXT"
                  ],
                  "example": "TEXT",
                  "format": "enum",
                  "type": "string"
                }
              },
              "required": [
                "attribute",
                "created",
                "displayName",
                "lastUpdated",
                "value",
                "valueType"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "coordinates": {
            "example": null,
            "format": "geolocation",
            "maxLength": 255,
            "minLength": 1,
            "readOnly": false,
            "type": "string"
          },
          "created": {
            "$ref": "#/components/schemas/created"
          },
          "createdAtClient": {
            "example": null,
            "format": "date-time",
            "maxLength": 23,
            "minLength": 0,
            "readOnly": false,
            "type": "string"
          },
          "deleted": {
            "example": null,
            "format": "boolean",
            "maxLength": 255,
            "readOnly": false,
            "type": "boolean"
          },
          "enrollments": {
            "items": {
              "$ref": "#/components/schemas/enrollment"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "favorite": {
            "type": "boolean"
          },
          "featureType": {
            "enum": [
              "MULTI_POLYGON",
              "NONE",
              "POINT",
              "POLYGON",
              "SYMBOL"
            ],
            "example": "NONE",
            "format": "enum",
            "readOnly": false,
            "type": "string"
          },
          "inactive": {
            "$ref": "#/components/schemas/inactive"
          },
          "lastUpdated": {
            "$ref": "#/components/schemas/lastUpdated"
          },
          "lastUpdatedAtClient": {
            "$ref": "#/components/schemas/lastUpdatedAtClient"
          },
          "orgUnit": {
            "$ref": "#/components/schemas/orgUnit"
          },
          "programOwners": {
            "items": {
              "maxProperties": 0,
              "minProperties": 0,
              "properties": {}
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": false,
            "type": "array"
          },
          "relationships": {
            "items": {
              "$ref": "#/components/schemas/relationship"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "trackedEntityInstance": {
            "example": "txB1esbjJwb",
            "format": "uid",
            "maxLength": 11,
            "minLength": 11,
            "type": "string"
          },
          "trackedEntityType": {
            "example": "nEenWmSyUEp",
            "format": "uid",
            "maxLength": 11,
            "minLength": 11,
            "readOnly": false,
            "type": "string"
          }
        },
        "type": "object",
        "x-association": "true"
      },
      "trackedEntityType": {
        "maxProperties": 29,
        "minProperties": 0,
        "properties": {
          "access": {
            "maxProperties": 7,
            "minProperties": 1,
            "properties": {
              "data": {
                "properties": {
                  "read": {
                    "$ref": "#/components/schemas/read"
                  },
                  "write": {
                    "$ref": "#/components/schemas/write"
                  }
                },
                "required": [
                  "read",
                  "write"
                ],
                "type": "object"
              },
              "delete": {
                "$ref": "#/components/schemas/delete"
              },
              "externalize": {
                "$ref": "#/components/schemas/externalize"
              },
              "manage": {
                "$ref": "#/components/schemas/manage"
              },
              "read": {
                "$ref": "#/components/schemas/read"
              },
              "update": {
                "$ref": "#/components/schemas/update"
              },
              "write": {
                "$ref": "#/components/schemas/write"
              }
            },
            "readOnly": true,
            "required": [
              "data",
              "delete",
              "externalize",
              "manage",
              "read",
              "update",
              "write"
            ],
            "type": "object"
          },
          "allowAuditLog": {
            "$ref": "#/components/schemas/allowAuditLog"
          },
          "attributeValues": {
            "items": {
              "properties": {
                "attribute": {
                  "format": "uid",
                  "maxLength": 255,
                  "readOnly": false,
                  "type": "string"
                },
                "created": {
                  "$ref": "#/components/schemas/created"
                },
                "lastUpdated": {
                  "$ref": "#/components/schemas/lastUpdated"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              },
              "required": [
                "attribute"
              ]
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "code": {
            "$ref": "#/components/schemas/code"
          },
          "created": {
            "$ref": "#/components/schemas/created"
          },
          "description": {
            "$ref": "#/components/schemas/description"
          },
          "displayDescription": {
            "$ref": "#/components/schemas/displayDescription"
          },
          "displayName": {
            "$ref": "#/components/schemas/displayName"
          },
          "displayShortName": {
            "$ref": "#/components/schemas/displayShortName"
          },
          "externalAccess": {
            "$ref": "#/components/schemas/externalAccess"
          },
          "favorite": {
            "type": "boolean"
          },
          "favorites": {
            "items": {
              "$ref": "#/components/schemas/favorite"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "featureType": {
            "enum": [
              "NONE",
              "POLYGON"
            ],
            "example": "NONE",
            "format": "enum",
            "type": "string"
          },
          "formName": {
            "$ref": "#/components/schemas/formName"
          },
          "href": {
            "$ref": "#/components/schemas/href"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "lastUpdated": {
            "$ref": "#/components/schemas/lastUpdated"
          },
          "lastUpdatedBy": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "maxTeiCountToReturn": {
            "$ref": "#/components/schemas/maxTeiCountToReturn"
          },
          "minAttributesRequiredToSearch": {
            "$ref": "#/components/schemas/minAttributesRequiredToSearch"
          },
          "name": {
            "$ref": "#/components/schemas/name"
          },
          "publicAccess": {
            "$ref": "#/components/schemas/publicAccess"
          },
          "shortName": {
            "$ref": "#/components/schemas/shortName"
          },
          "style": {
            "maxProperties": 1,
            "minProperties": 1,
            "readOnly": false,
            "type": "object"
          },
          "trackedEntityTypeAttributes": {
            "items": {
              "properties": {
                "access": {
                  "properties": {
                    "delete": {
                      "$ref": "#/components/schemas/delete"
                    },
                    "externalize": {
                      "$ref": "#/components/schemas/externalize"
                    },
                    "manage": {
                      "$ref": "#/components/schemas/manage"
                    },
                    "read": {
                      "$ref": "#/components/schemas/read"
                    },
                    "update": {
                      "$ref": "#/components/schemas/update"
                    },
                    "write": {
                      "$ref": "#/components/schemas/write"
                    }
                  },
                  "required": [
                    "delete",
                    "externalize",
                    "manage",
                    "read",
                    "update",
                    "write"
                  ],
                  "type": "object"
                },
                "attributeValues": {
                  "items": {
                    "properties": {
                      "attribute": {
                        "format": "uid",
                        "maxLength": 255,
                        "readOnly": false,
                        "type": "string"
                      },
                      "created": {
                        "$ref": "#/components/schemas/created"
                      },
                      "lastUpdated": {
                        "$ref": "#/components/schemas/lastUpdated"
                      },
                      "value": {
                        "$ref": "#/components/schemas/value"
                      }
                    },
                    "required": [
                      "attribute"
                    ]
                  },
                  "type": "array"
                },
                "created": {
                  "$ref": "#/components/schemas/created"
                },
                "displayInList": {
                  "$ref": "#/components/schemas/displayInList"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "displayShortName": {
                  "$ref": "#/components/schemas/displayShortName"
                },
                "externalAccess": {
                  "$ref": "#/components/schemas/externalAccess"
                },
                "favorite": {
                  "type": "boolean"
                },
                "favorites": {
                  "items": {
                    "$ref": "#/components/schemas/favorite"
                  },
                  "type": "array"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "lastUpdated": {
                  "$ref": "#/components/schemas/lastUpdated"
                },
                "name": {
                  "$ref": "#/components/schemas/name"
                },
                "searchable": {
                  "$ref": "#/components/schemas/searchable"
                },
                "trackedEntityAttribute": {
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    }
                  },
                  "required": [
                    "id"
                  ],
                  "type": "object"
                },
                "trackedEntityType": {
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    }
                  },
                  "required": [
                    "id"
                  ],
                  "type": "object"
                },
                "translations": {
                  "items": {
                    "properties": {
                      "locale": {
                        "$ref": "#/components/schemas/locale"
                      },
                      "property": {
                        "$ref": "#/components/schemas/property"
                      },
                      "value": {
                        "$ref": "#/components/schemas/value"
                      }
                    }
                  },
                  "type": "array"
                },
                "userAccesses": {
                  "items": {
                    "properties": {
                      "access": {
                        "format": "access",
                        "maxLength": 255,
                        "minLength": 0,
                        "readOnly": false,
                        "type": "string"
                      },
                      "displayName": {
                        "$ref": "#/components/schemas/displayName"
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "userUid": {
                        "$ref": "#/components/schemas/userUid"
                      }
                    }
                  },
                  "type": "array"
                },
                "userGroupAccesses": {
                  "items": {
                    "properties": {
                      "access": {
                        "format": "access",
                        "maxLength": 255,
                        "minLength": 0,
                        "readOnly": false,
                        "type": "string"
                      },
                      "displayName": {
                        "$ref": "#/components/schemas/displayName"
                      },
                      "id": {
                        "$ref": "#/components/schemas/id"
                      },
                      "userGroupUid": {
                        "$ref": "#/components/schemas/userGroupUid"
                      }
                    }
                  },
                  "type": "array"
                },
                "valueType": {
                  "enum": [
                    "NUMBER",
                    "TEXT"
                  ],
                  "example": "NUMBER",
                  "format": "enum",
                  "type": "string"
                }
              },
              "required": [
                "access",
                "attributeValues",
                "created",
                "displayInList",
                "displayName",
                "displayShortName",
                "externalAccess",
                "favorite",
                "favorites",
                "id",
                "lastUpdated",
                "name",
                "searchable",
                "trackedEntityAttribute",
                "trackedEntityType",
                "translations",
                "userAccesses",
                "userGroupAccesses",
                "valueType"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": false,
            "type": "array"
          },
          "translations": {
            "items": {
              "properties": {
                "locale": {
                  "$ref": "#/components/schemas/locale"
                },
                "property": {
                  "$ref": "#/components/schemas/property"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "user": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "userAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userUid": {
                  "$ref": "#/components/schemas/userUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "userGroupAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userGroupUid": {
                  "$ref": "#/components/schemas/userGroupUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          }
        },
        "required": [
          "name"
        ],
        "type": "object",
        "x-status-dhis2": "template"
      },
      "trackedEntityTypeAttribute": {
        "type": "boolean"
      },
      "translation": {
        "properties": {
          "locale": {
            "$ref": "#/components/schemas/locale"
          },
          "property": {
            "$ref": "#/components/schemas/property"
          },
          "value": {
            "$ref": "#/components/schemas/value"
          }
        }
      },
      "twitter": {
        "example": "mytwitter",
        "format": "general",
        "maxLength": 255,
        "minLength": 0,
        "type": "string"
      },
      "twoFA": {
        "type": "boolean"
      },
      "type": {
        "enum": [
          "AREA",
          "BAR",
          "COLUMN",
          "GAUGE",
          "LINE",
          "PIE",
          "RADAR",
          "STACKED_BAR",
          "STACKED_COLUMN",
          "YEAR_OVER_YEAR_LINE"
        ],
        "example": "COLUMN",
        "format": "enum",
        "type": "string"
      },
      "uid": {
        "type": "string"
      },
      "unique": {
        "type": "boolean"
      },
      "uniqunessType": {
        "enum": [
          "NONE",
          "STRICT",
          "VALIDATION"
        ],
        "format": "enum",
        "readOnly": false,
        "type": "string"
      },
      "update": {
        "default": false,
        "type": "boolean"
      },
      "url": {
        "example": "myur",
        "format": "general",
        "maxLength": 255,
        "type": "string"
      },
      "useCodeForOptionSet": {
        "type": "boolean"
      },
      "useFirstStageDuringRegistration": {
        "type": "boolean"
      },
      "user": {
        "maxProperties": 43,
        "minProperties": 0,
        "properties": {
          "access": {
            "maxProperties": 6,
            "minProperties": 1,
            "properties": {
              "delete": {
                "$ref": "#/components/schemas/delete"
              },
              "externalize": {
                "$ref": "#/components/schemas/externalize"
              },
              "manage": {
                "$ref": "#/components/schemas/manage"
              },
              "read": {
                "$ref": "#/components/schemas/read"
              },
              "update": {
                "$ref": "#/components/schemas/update"
              },
              "write": {
                "$ref": "#/components/schemas/write"
              }
            },
            "readOnly": true,
            "required": [
              "delete",
              "externalize",
              "manage",
              "read",
              "update",
              "write"
            ],
            "type": "object"
          },
          "attributeValues": {
            "items": {
              "properties": {
                "attribute": {
                  "format": "uid",
                  "maxLength": 255,
                  "readOnly": false,
                  "type": "string"
                },
                "created": {
                  "$ref": "#/components/schemas/created"
                },
                "lastUpdated": {
                  "$ref": "#/components/schemas/lastUpdated"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              },
              "required": [
                "attribute"
              ]
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "birthday": {
            "$ref": "#/components/schemas/birthday"
          },
          "code": {
            "$ref": "#/components/schemas/code"
          },
          "created": {
            "$ref": "#/components/schemas/created"
          },
          "dataViewOrganisationUnits": {
            "items": {
              "maxProperties": 1,
              "minProperties": 0,
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/id"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "displayName": {
            "$ref": "#/components/schemas/displayName"
          },
          "education": {
            "$ref": "#/components/schemas/education"
          },
          "email": {
            "$ref": "#/components/schemas/email"
          },
          "employer": {
            "$ref": "#/components/schemas/employer"
          },
          "externalAccess": {
            "$ref": "#/components/schemas/externalAccess"
          },
          "facebookMessenger": {
            "$ref": "#/components/schemas/facebookMessenger"
          },
          "favorite": {
            "type": "boolean"
          },
          "favorites": {
            "items": {
              "$ref": "#/components/schemas/favorite"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "firstName": {
            "$ref": "#/components/schemas/firstName"
          },
          "gender": {
            "$ref": "#/components/schemas/gender"
          },
          "href": {
            "$ref": "#/components/schemas/href"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "interests": {
            "$ref": "#/components/schemas/interests"
          },
          "introduction": {
            "$ref": "#/components/schemas/introduction"
          },
          "jobTitle": {
            "$ref": "#/components/schemas/jobTitle"
          },
          "languages": {
            "$ref": "#/components/schemas/languages"
          },
          "lastCheckedInterpretations": {
            "$ref": "#/components/schemas/lastCheckedInterpretations"
          },
          "lastUpdated": {
            "$ref": "#/components/schemas/lastUpdated"
          },
          "lastUpdatedBy": {
            "$ref": "#/components/schemas/lastUpdatedBy"
          },
          "name": {
            "$ref": "#/components/schemas/name"
          },
          "nationality": {
            "$ref": "#/components/schemas/nationality"
          },
          "organisationUnits": {
            "items": {
              "maxProperties": 1,
              "minProperties": 0,
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/id"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "phoneNumber": {
            "$ref": "#/components/schemas/phoneNumber"
          },
          "publicAccess": {
            "$ref": "#/components/schemas/publicAccess"
          },
          "skype": {
            "$ref": "#/components/schemas/skype"
          },
          "surname": {
            "$ref": "#/components/schemas/surname"
          },
          "teiSearchOrganisationUnits": {
            "items": {
              "properties": {}
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "telegram": {
            "$ref": "#/components/schemas/telegram"
          },
          "translations": {
            "items": {
              "properties": {
                "locale": {
                  "$ref": "#/components/schemas/locale"
                },
                "property": {
                  "$ref": "#/components/schemas/property"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "twitter": {
            "$ref": "#/components/schemas/twitter"
          },
          "user": {
            "format": "uid",
            "maxLength": 11,
            "minLength": 11,
            "type": "string",
            "x-association": "true"
          },
          "userAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userUid": {
                  "$ref": "#/components/schemas/userUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "userCredentials": {
            "properties": {
              "access": {
                "properties": {
                  "delete": {
                    "$ref": "#/components/schemas/delete"
                  },
                  "externalize": {
                    "$ref": "#/components/schemas/externalize"
                  },
                  "manage": {
                    "$ref": "#/components/schemas/manage"
                  },
                  "read": {
                    "$ref": "#/components/schemas/read"
                  },
                  "update": {
                    "$ref": "#/components/schemas/update"
                  },
                  "write": {
                    "$ref": "#/components/schemas/write"
                  }
                },
                "required": [
                  "delete",
                  "externalize",
                  "manage",
                  "read",
                  "update",
                  "write"
                ],
                "type": "object"
              },
              "attributeValues": {
                "items": {
                  "$ref": "#/components/schemas/attributeValue"
                },
                "type": "array"
              },
              "catDimensionConstraints": {
                "items": {
                  "$ref": "#/components/schemas/catDimensionConstraint"
                },
                "type": "array"
              },
              "code": {
                "$ref": "#/components/schemas/code"
              },
              "cogsDimensionConstraints": {
                "items": {
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    }
                  },
                  "required": [
                    "id"
                  ],
                  "type": "object"
                },
                "type": "array"
              },
              "created": {
                "$ref": "#/components/schemas/created"
              },
              "disabled": {
                "type": "boolean"
              },
              "displayName": {
                "$ref": "#/components/schemas/displayName"
              },
              "externalAccess": {
                "$ref": "#/components/schemas/externalAccess"
              },
              "externalAuth": {
                "type": "boolean"
              },
              "favorite": {
                "type": "boolean"
              },
              "favorites": {
                "items": {
                  "$ref": "#/components/schemas/favorite"
                },
                "type": "array"
              },
              "id": {
                "$ref": "#/components/schemas/id"
              },
              "invitation": {
                "type": "boolean"
              },
              "lastLogin": {
                "example": "2015-03-31T13:39:21.777",
                "format": "date-time",
                "maxLength": 23,
                "minLength": 23,
                "type": "string"
              },
              "lastUpdated": {
                "$ref": "#/components/schemas/lastUpdated"
              },
              "lastUpdatedBy": {
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/id"
                  }
                },
                "required": [
                  "id"
                ],
                "type": "object"
              },
              "name": {
                "$ref": "#/components/schemas/name"
              },
              "passwordLastUpdated": {
                "example": "2015-03-31T13:31:09.206",
                "format": "date-time",
                "maxLength": 23,
                "minLength": 23,
                "type": "string"
              },
              "selfRegistered": {
                "type": "boolean"
              },
              "translations": {
                "items": {
                  "$ref": "#/components/schemas/translation"
                },
                "type": "array"
              },
              "twoFA": {
                "type": "boolean"
              },
              "user": {
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/id"
                  }
                },
                "required": [
                  "id"
                ],
                "type": "object"
              },
              "userAccesses": {
                "items": {
                  "$ref": "#/components/schemas/userAccess"
                },
                "type": "array"
              },
              "userGroupAccesses": {
                "items": {
                  "$ref": "#/components/schemas/userGroupAccess"
                },
                "type": "array"
              },
              "userInfo": {
                "properties": {
                  "id": {
                    "$ref": "#/components/schemas/id"
                  }
                },
                "required": [
                  "id"
                ],
                "type": "object"
              },
              "userRoles": {
                "items": {
                  "properties": {
                    "id": {
                      "$ref": "#/components/schemas/id"
                    }
                  },
                  "required": [
                    "id"
                  ],
                  "type": "object"
                },
                "type": "array"
              },
              "username": {
                "example": "myuser",
                "format": "general",
                "maxLength": 8,
                "minLength": 5,
                "type": "string"
              }
            },
            "required": [
              "access",
              "attributeValues",
              "catDimensionConstraints",
              "code",
              "cogsDimensionConstraints",
              "created",
              "disabled",
              "displayName",
              "externalAccess",
              "externalAuth",
              "favorite",
              "favorites",
              "id",
              "invitation",
              "lastLogin",
              "lastUpdated",
              "name",
              "passwordLastUpdated",
              "selfRegistered",
              "translations",
              "twoFA",
              "userAccesses",
              "userGroupAccesses",
              "userInfo",
              "userRoles",
              "username"
            ],
            "type": "object"
          },
          "userGroupAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userGroupUid": {
                  "$ref": "#/components/schemas/userGroupUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "userGroups": {
            "items": {
              "maxProperties": 1,
              "minProperties": 0,
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/id"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "welcomeMessage": {
            "$ref": "#/components/schemas/welcomeMessage"
          },
          "whatsApp": {
            "$ref": "#/components/schemas/whatsApp"
          }
        },
        "required": [
          "firstName",
          "surname"
        ],
        "type": "object"
      },
      "userAccess": {
        "properties": {
          "access": {
            "example": "r-r-----",
            "format": "access",
            "maxLength": 255,
            "minLength": 0,
            "readOnly": false,
            "type": "string"
          },
          "displayName": {
            "$ref": "#/components/schemas/displayName"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "userUid": {
            "$ref": "#/components/schemas/userUid"
          }
        }
      },
      "userAttribute": {
        "type": "boolean"
      },
      "userFirstname": {
        "example": "my",
        "format": "general",
        "maxLength": 2147483647,
        "minLength": 0,
        "type": "string"
      },
      "userGroup": {
        "maxProperties": 2147483647,
        "minProperties": 0,
        "properties": {
          "access": {
            "maxProperties": 6,
            "minProperties": 1,
            "properties": {
              "delete": {
                "$ref": "#/components/schemas/delete"
              },
              "externalize": {
                "$ref": "#/components/schemas/externalize"
              },
              "manage": {
                "$ref": "#/components/schemas/manage"
              },
              "read": {
                "$ref": "#/components/schemas/read"
              },
              "update": {
                "$ref": "#/components/schemas/update"
              },
              "write": {
                "$ref": "#/components/schemas/write"
              }
            },
            "readOnly": true,
            "required": [
              "delete",
              "externalize",
              "manage",
              "read",
              "update",
              "write"
            ],
            "type": "object"
          },
          "attributeValues": {
            "items": {
              "properties": {
                "attribute": {
                  "format": "uid",
                  "maxLength": 255,
                  "readOnly": false,
                  "type": "string"
                },
                "created": {
                  "$ref": "#/components/schemas/created"
                },
                "lastUpdated": {
                  "$ref": "#/components/schemas/lastUpdated"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              },
              "required": [
                "attribute"
              ]
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "code": {
            "$ref": "#/components/schemas/code"
          },
          "created": {
            "$ref": "#/components/schemas/created"
          },
          "displayName": {
            "$ref": "#/components/schemas/displayName"
          },
          "externalAccess": {
            "$ref": "#/components/schemas/externalAccess"
          },
          "favorite": {
            "type": "boolean"
          },
          "favorites": {
            "items": {
              "$ref": "#/components/schemas/favorite"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "href": {
            "$ref": "#/components/schemas/href"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "lastUpdated": {
            "$ref": "#/components/schemas/lastUpdated"
          },
          "lastUpdatedBy": {
            "$ref": "#/components/schemas/lastUpdatedBy"
          },
          "managedByGroups": {
            "items": {
              "properties": {}
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "managedGroups": {
            "items": {
              "properties": {}
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "name": {
            "$ref": "#/components/schemas/name"
          },
          "publicAccess": {
            "$ref": "#/components/schemas/publicAccess"
          },
          "translations": {
            "items": {
              "properties": {
                "locale": {
                  "$ref": "#/components/schemas/locale"
                },
                "property": {
                  "$ref": "#/components/schemas/property"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "userAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userUid": {
                  "$ref": "#/components/schemas/userUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "userGroupAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userGroupUid": {
                  "$ref": "#/components/schemas/userGroupUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "users": {
            "items": {
              "maxProperties": 1,
              "minProperties": 0,
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/id"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          }
        },
        "required": [
          "name"
        ],
        "type": "object",
        "x-status-dhis2": "template"
      },
      "userGroupAccess": {
        "properties": {
          "access": {
            "format": "access",
            "maxLength": 255,
            "minLength": 0,
            "readOnly": false,
            "type": "string"
          },
          "displayName": {
            "$ref": "#/components/schemas/displayName"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "userGroupUid": {
            "$ref": "#/components/schemas/userGroupUid"
          }
        }
      },
      "userGroupAttribute": {
        "type": "boolean"
      },
      "userGroupUid": {
        "readOnly": true,
        "type": "string"
      },
      "userOrganisationUnit": {
        "type": "boolean"
      },
      "userOrganisationUnitChildren": {
        "type": "boolean"
      },
      "userOrganisationUnitGrandChildren": {
        "type": "boolean"
      },
      "userRole": {
        "maxProperties": 21,
        "minProperties": 0,
        "properties": {
          "access": {
            "maxProperties": 6,
            "minProperties": 1,
            "properties": {
              "delete": {
                "$ref": "#/components/schemas/delete"
              },
              "externalize": {
                "$ref": "#/components/schemas/externalize"
              },
              "manage": {
                "$ref": "#/components/schemas/manage"
              },
              "read": {
                "$ref": "#/components/schemas/read"
              },
              "update": {
                "$ref": "#/components/schemas/update"
              },
              "write": {
                "$ref": "#/components/schemas/write"
              }
            },
            "readOnly": true,
            "required": [
              "delete",
              "externalize",
              "manage",
              "read",
              "update",
              "write"
            ],
            "type": "object"
          },
          "attributeValues": {
            "items": {
              "properties": {
                "attribute": {
                  "format": "uid",
                  "maxLength": 255,
                  "readOnly": false,
                  "type": "string"
                },
                "created": {
                  "$ref": "#/components/schemas/created"
                },
                "lastUpdated": {
                  "$ref": "#/components/schemas/lastUpdated"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              },
              "required": [
                "attribute"
              ]
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "authorities": {
            "items": {
              "enum": [
                "ALL",
                "F_ACCEPT_DATA_LOWER_LEVELS",
                "F_ANALYTICSTABLEHOOK_ADD",
                "F_ANALYTICSTABLEHOOK_DELETE",
                "F_APPROVE_DATA",
                "F_APPROVE_DATA_LOWER_LEVELS",
                "F_ATTRIBUTE_DELETE",
                "F_ATTRIBUTE_PRIVATE_ADD",
                "F_CATEGORY_DELETE",
                "F_CATEGORY_OPTION_GROUP_DELETE",
                "F_CATEGORY_OPTION_GROUP_SET_PUBLIC_ADD",
                "F_CHART_EXTERNAL",
                "F_CHART_PUBLIC_ADD",
                "F_COLOR_SET_DELETE",
                "F_CONSTANT_DELETE",
                "F_CONSTANT_MANAGEMENT",
                "F_DASHBOARD_PUBLIC_ADD",
                "F_DATAELEMENTGROUPSET_DELETE",
                "F_DATAELEMENT_MINMAX_ADD",
                "F_DATAELEMENT_MINMAX_DELETE",
                "F_DATAELEMENT_PUBLIC_ADD",
                "F_DATASET_PRIVATE_ADD",
                "F_DATAVALUE_ADD",
                "F_DOCUMENT_PUBLIC_ADD",
                "F_ENROLLMENT_CASCADE_DELETE",
                "F_EVENTCHART_EXTERNAL",
                "F_EVENTCHART_PUBLIC_ADD",
                "F_EVENTREPORT_EXTERNAL",
                "F_EVENTREPORT_PUBLIC_ADD",
                "F_EXTERNAL_MAP_LAYER_DELETE",
                "F_FRED_CREATE",
                "F_FRED_DELETE",
                "F_IMPORT_DATA",
                "F_IMPORT_EVENTS",
                "F_INDICATORGROUP_PRIVATE_ADD",
                "F_INDICATORTYPE_ADD",
                "F_INDICATORTYPE_DELETE",
                "F_INDICATOR_PRIVATE_ADD",
                "F_INSERT_CUSTOM_JS_CSS",
                "F_LEGEND_DELETE",
                "F_LEGEND_SET_DELETE",
                "F_MANAGE_TICKETS",
                "F_MAP_PUBLIC_ADD",
                "F_METADATA_MANAGE",
                "F_MINMAX_DATAELEMENT_DELETE",
                "F_MOBILE_DELETE_SMS",
                "F_MOBILE_SETTINGS",
                "F_OPTIONGROUPSET_PUBLIC_ADD",
                "F_OPTIONGROUP_PRIVATE_ADD",
                "F_OPTIONSET_DELETE",
                "F_OPTIONSET_MANAGEMENT",
                "F_OPTIONSET_PUBLIC_ADD",
                "F_ORGUNITGROUPSET_PUBLIC_ADD",
                "F_PREDICTORGROUP_ADD",
                "F_PREDICTOR_DELETE",
                "F_PROGRAMDATAELEMENT_DELETE",
                "F_PROGRAMSTAGE_ADD",
                "F_PROGRAMSTAGE_SECTION_DELETE",
                "F_PROGRAMSTAGE_SECTION_MANAGEMENT",
                "F_PROGRAM_INDICATOR_GROUP_PUBLIC_ADD",
                "F_PROGRAM_INDICATOR_MANAGEMENT",
                "F_PROGRAM_RULE_UPDATE",
                "F_PROGRAM_TRACKED_ENTITY_ATTRIBUTE_GROUP_DELETE",
                "F_PROGRAM_VALIDATION",
                "F_PUSH_ANALYSIS_ADD",
                "F_PUSH_ANALYSIS_DELETE",
                "F_REPLICATE_USER",
                "F_REPORT_DELETE",
                "F_REPORT_PRIVATE_ADD",
                "F_RUN_VALIDATION",
                "F_SCHEDULING_ADMIN",
                "F_SQLVIEW_DELETE",
                "F_SQLVIEW_EXTERNAL",
                "F_SYSTEM_SETTING",
                "F_TRACKED_ENTITY_ATTRIBUTE_DELETE",
                "F_TRACKED_ENTITY_UPDATE",
                "F_UNCOMPLETE_EVENT",
                "F_USERROLE_LIST",
                "F_USERROLE_PUBLIC_ADD",
                "F_USER_ADD",
                "F_USER_DELETE",
                "F_USER_VIEW",
                "F_VALIDATIONCRITERIA_DELETE",
                "F_VALIDATIONRULEGROUP_PRIVATE_ADD",
                "F_VIEW_DATABROWSER",
                "F_VIEW_EVENT_ANALYTICS",
                "F_VIEW_UNAPPROVED_DATA",
                "M_Custom_Js_Css",
                "M_Easy_Visualization",
                "M_InterpretationsTest",
                "M_Social_Media_Video",
                "M_User_Administration",
                "M_dhis-web-app-management",
                "M_dhis-web-capture",
                "M_dhis-web-dashboard",
                "M_dhis-web-data-administration",
                "M_dhis-web-data-quality",
                "M_dhis-web-data-visualizer",
                "M_dhis-web-dataentry",
                "M_dhis-web-event-visualizer",
                "M_dhis-web-importexport",
                "M_dhis-web-interpretation",
                "M_dhis-web-maintenance-dataset",
                "M_dhis-web-maintenance-organisationunit",
                "M_dhis-web-maintenance-user",
                "M_dhis-web-mapping",
                "M_dhis-web-maps",
                "M_dhis-web-pivot",
                "M_dhis-web-settings",
                "M_dhis-web-validationrule",
                "M_dhis-web-visualizer"
              ],
              "example": "F_DATAVALUE_DELETE",
              "format": "enum",
              "type": "string"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "code": {
            "$ref": "#/components/schemas/code"
          },
          "created": {
            "$ref": "#/components/schemas/created"
          },
          "description": {
            "$ref": "#/components/schemas/description"
          },
          "displayName": {
            "$ref": "#/components/schemas/displayName"
          },
          "externalAccess": {
            "$ref": "#/components/schemas/externalAccess"
          },
          "favorite": {
            "type": "boolean"
          },
          "favorites": {
            "items": {
              "$ref": "#/components/schemas/favorite"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "href": {
            "$ref": "#/components/schemas/href"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "lastUpdated": {
            "$ref": "#/components/schemas/lastUpdated"
          },
          "lastUpdatedBy": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "name": {
            "$ref": "#/components/schemas/name"
          },
          "publicAccess": {
            "$ref": "#/components/schemas/publicAccess"
          },
          "translations": {
            "items": {
              "properties": {
                "locale": {
                  "$ref": "#/components/schemas/locale"
                },
                "property": {
                  "$ref": "#/components/schemas/property"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "userAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userUid": {
                  "$ref": "#/components/schemas/userUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "userGroupAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userGroupUid": {
                  "$ref": "#/components/schemas/userGroupUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "userObject": {
            "items": {
              "format": "uid",
              "type": "string"
            },
            "readOnly": true,
            "type": "array"
          },
          "users": {
            "items": {
              "maxProperties": 1,
              "minProperties": 0,
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/id"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          }
        },
        "required": [
          "name"
        ],
        "type": "object",
        "x-status-dhis2": "template"
      },
      "userSurname": {
        "example": "myuse",
        "format": "general",
        "maxLength": 2147483647,
        "minLength": 0,
        "type": "string"
      },
      "userUid": {
        "readOnly": true,
        "type": "string"
      },
      "username": {
        "example": "myuser",
        "format": "general",
        "maxLength": 255,
        "minLength": 0,
        "type": "string"
      },
      "validCompleteOnly": {
        "type": "boolean"
      },
      "validationNotificationTemplate": {
        "maxProperties": 22,
        "minProperties": 0,
        "properties": {
          "access": {
            "maxProperties": 6,
            "minProperties": 0,
            "properties": {
              "delete": {
                "$ref": "#/components/schemas/delete"
              },
              "externalize": {
                "$ref": "#/components/schemas/externalize"
              },
              "manage": {
                "$ref": "#/components/schemas/manage"
              },
              "read": {
                "$ref": "#/components/schemas/read"
              },
              "update": {
                "$ref": "#/components/schemas/update"
              },
              "write": {
                "$ref": "#/components/schemas/write"
              }
            },
            "required": [
              "delete",
              "externalize",
              "manage",
              "read",
              "update",
              "write"
            ],
            "type": "object"
          },
          "attributeValues": {
            "items": {
              "properties": {
                "attribute": {
                  "format": "uid",
                  "maxLength": 255,
                  "readOnly": false,
                  "type": "string"
                },
                "created": {
                  "$ref": "#/components/schemas/created"
                },
                "lastUpdated": {
                  "$ref": "#/components/schemas/lastUpdated"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              },
              "required": [
                "attribute"
              ]
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "code": {
            "$ref": "#/components/schemas/code"
          },
          "created": {
            "$ref": "#/components/schemas/created"
          },
          "displayName": {
            "$ref": "#/components/schemas/displayName"
          },
          "externalAccess": {
            "$ref": "#/components/schemas/externalAccess"
          },
          "favorite": {
            "type": "boolean"
          },
          "favorites": {
            "items": {
              "$ref": "#/components/schemas/favorite"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "href": {
            "$ref": "#/components/schemas/href"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "lastUpdated": {
            "$ref": "#/components/schemas/lastUpdated"
          },
          "lastUpdatedBy": {
            "maxProperties": 1,
            "minProperties": 0,
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "messageTemplate": {
            "$ref": "#/components/schemas/messageTemplate"
          },
          "name": {
            "$ref": "#/components/schemas/name"
          },
          "notifyUsersInHierarchyOnly": {
            "$ref": "#/components/schemas/notifyUsersInHierarchyOnly"
          },
          "recipientUserGroups": {
            "items": {
              "maxProperties": 1,
              "minProperties": 0,
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/id"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "sendStrategy": {
            "enum": [
              "COLLECTIVE_SUMMARY",
              "SINGLE_NOTIFICATION"
            ],
            "example": "SINGLE_NOTIFICATION",
            "format": "enum",
            "type": "string"
          },
          "subjectTemplate": {
            "$ref": "#/components/schemas/subjectTemplate"
          },
          "translations": {
            "items": {
              "properties": {
                "locale": {
                  "$ref": "#/components/schemas/locale"
                },
                "property": {
                  "$ref": "#/components/schemas/property"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "userAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userUid": {
                  "$ref": "#/components/schemas/userUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "userGroupAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userGroupUid": {
                  "$ref": "#/components/schemas/userGroupUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "validationRules": {
            "items": {
              "maxProperties": 1,
              "minProperties": 0,
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/id"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          }
        },
        "required": [
          "access",
          "attributeValues",
          "code",
          "created",
          "displayName",
          "externalAccess",
          "favorite",
          "favorites",
          "href",
          "id",
          "lastUpdated",
          "messageTemplate",
          "name",
          "notifyUsersInHierarchyOnly",
          "recipientUserGroups",
          "sendStrategy",
          "subjectTemplate",
          "translations",
          "userAccesses",
          "userGroupAccesses",
          "validationRules"
        ],
        "type": "object"
      },
      "validationResult": {
        "properties": {
          "attributeOptionCombo": {
            "$ref": "#/components/schemas/attributeOptionCombo"
          },
          "created": {
            "$ref": "#/components/schemas/created"
          },
          "dayInPeriod": {
            "$ref": "#/components/schemas/dayInPeriod"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "leftsideValue": {
            "$ref": "#/components/schemas/leftsideValue"
          },
          "notificationSent": {
            "$ref": "#/components/schemas/notificationSent"
          },
          "organisationUnit": {
            "format": "uid",
            "maxLength": 11,
            "minLength": 11,
            "readOnly": false,
            "type": "string"
          },
          "period": {
            "format": "uid",
            "maxLength": 11,
            "minLength": 11,
            "readOnly": false,
            "type": "string"
          },
          "rightsideValue": {
            "$ref": "#/components/schemas/rightsideValue"
          },
          "validationRule": {
            "format": "uid",
            "maxLength": 11,
            "minLength": 11,
            "readOnly": false,
            "type": "string"
          }
        },
        "required": [
          "created"
        ],
        "x-status-dhis2": "template"
      },
      "validationRule": {
        "maxProperties": 38,
        "minProperties": 0,
        "properties": {
          "access": {
            "maxProperties": 6,
            "minProperties": 1,
            "properties": {
              "delete": {
                "$ref": "#/components/schemas/delete"
              },
              "externalize": {
                "$ref": "#/components/schemas/externalize"
              },
              "manage": {
                "$ref": "#/components/schemas/manage"
              },
              "read": {
                "$ref": "#/components/schemas/read"
              },
              "update": {
                "$ref": "#/components/schemas/update"
              },
              "write": {
                "$ref": "#/components/schemas/write"
              }
            },
            "readOnly": true,
            "required": [
              "delete",
              "externalize",
              "manage",
              "read",
              "update",
              "write"
            ],
            "type": "object"
          },
          "aggregateExportAttributeOptionCombo": {
            "$ref": "#/components/schemas/aggregateExportAttributeOptionCombo"
          },
          "aggregateExportCategoryOptionCombo": {
            "$ref": "#/components/schemas/aggregateExportCategoryOptionCombo"
          },
          "aggregationType": {
            "$ref": "#/components/schemas/aggregationType"
          },
          "attributeValues": {
            "items": {
              "properties": {
                "attribute": {
                  "format": "uid",
                  "maxLength": 255,
                  "readOnly": false,
                  "type": "string"
                },
                "created": {
                  "$ref": "#/components/schemas/created"
                },
                "lastUpdated": {
                  "$ref": "#/components/schemas/lastUpdated"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              },
              "required": [
                "attribute"
              ]
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "code": {
            "$ref": "#/components/schemas/code"
          },
          "created": {
            "$ref": "#/components/schemas/created"
          },
          "description": {
            "$ref": "#/components/schemas/description"
          },
          "dimensionItem": {
            "$ref": "#/components/schemas/dimensionItem"
          },
          "dimensionItemType": {
            "enum": [
              "CATEGORY_OPTION",
              "CATEGORY_OPTION_GROUP",
              "DATA_ELEMENT",
              "DATA_ELEMENT_GROUP",
              "DATA_ELEMENT_OPERAND",
              "INDICATOR",
              "OPTION_GROUP",
              "ORGANISATION_UNIT",
              "ORGANISATION_UNIT_GROUP",
              "PERIOD",
              "PROGRAM_ATTRIBUTE",
              "PROGRAM_DATA_ELEMENT",
              "PROGRAM_INDICATOR",
              "REPORTING_RATE"
            ],
            "format": "enum",
            "type": "string"
          },
          "displayDescription": {
            "$ref": "#/components/schemas/displayDescription"
          },
          "displayName": {
            "$ref": "#/components/schemas/displayName"
          },
          "displayShortName": {
            "$ref": "#/components/schemas/displayShortName"
          },
          "externalAccess": {
            "$ref": "#/components/schemas/externalAccess"
          },
          "favorite": {
            "type": "boolean"
          },
          "favorites": {
            "items": {
              "$ref": "#/components/schemas/favorite"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "href": {
            "$ref": "#/components/schemas/href"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "importance": {
            "$ref": "#/components/schemas/importance"
          },
          "instruction": {
            "$ref": "#/components/schemas/instruction"
          },
          "lastUpdated": {
            "$ref": "#/components/schemas/lastUpdated"
          },
          "lastUpdatedBy": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "leftSide": {
            "maxProperties": 4,
            "minProperties": 1,
            "properties": {
              "description": {
                "$ref": "#/components/schemas/description"
              },
              "expression": {
                "$ref": "#/components/schemas/expression"
              },
              "missingValueStrategy": {
                "enum": [
                  "NEVER_SKIP",
                  "SKIP_IF_ANY_VALUE_MISSING"
                ],
                "example": "NEVER_SKIP",
                "format": "enum",
                "type": "string"
              },
              "slidingWindow": {
                "$ref": "#/components/schemas/slidingWindow"
              }
            },
            "readOnly": false,
            "required": [
              "description",
              "expression",
              "missingValueStrategy",
              "slidingWindow"
            ],
            "type": "object"
          },
          "legendSets": {
            "items": {
              "format": "uid",
              "maxLength": 11,
              "minLength": 11,
              "type": "string",
              "x-association": "true"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": false,
            "type": "array",
            "x-association": "true"
          },
          "name": {
            "$ref": "#/components/schemas/name"
          },
          "notificationTemplates": {
            "items": {
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/id"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": false,
            "type": "array"
          },
          "operator": {
            "$ref": "#/components/schemas/operator"
          },
          "organisationUnitLevels": {
            "items": {
              "format": "integer",
              "maxLength": 255,
              "minLength": 1,
              "type": "string"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "readOnly": false,
            "type": "array"
          },
          "periodType": {
            "$ref": "#/components/schemas/periodType"
          },
          "publicAccess": {
            "$ref": "#/components/schemas/publicAccess"
          },
          "rightSide": {
            "maxProperties": 4,
            "minProperties": 1,
            "properties": {
              "description": {
                "$ref": "#/components/schemas/description"
              },
              "expression": {
                "$ref": "#/components/schemas/expression"
              },
              "missingValueStrategy": {
                "enum": [
                  "NEVER_SKIP",
                  "SKIP_IF_ANY_VALUE_MISSING"
                ],
                "example": "NEVER_SKIP",
                "format": "enum",
                "type": "string"
              },
              "slidingWindow": {
                "$ref": "#/components/schemas/slidingWindow"
              }
            },
            "readOnly": false,
            "required": [
              "description",
              "expression",
              "missingValueStrategy",
              "slidingWindow"
            ],
            "type": "object"
          },
          "shortName": {
            "$ref": "#/components/schemas/shortName"
          },
          "skipFormValidation": {
            "$ref": "#/components/schemas/skipFormValidation"
          },
          "translations": {
            "items": {
              "properties": {
                "locale": {
                  "$ref": "#/components/schemas/locale"
                },
                "property": {
                  "$ref": "#/components/schemas/property"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "user": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "userAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userUid": {
                  "$ref": "#/components/schemas/userUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "userGroupAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userGroupUid": {
                  "$ref": "#/components/schemas/userGroupUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "validationRuleGroups": {
            "items": {
              "maxProperties": 1,
              "minProperties": 0,
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/id"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          }
        },
        "required": [
          "leftSide",
          "name",
          "operator",
          "periodType",
          "rightSide"
        ],
        "type": "object",
        "x-status-dhis2": "template"
      },
      "validationRuleAttribute": {
        "type": "boolean"
      },
      "validationRuleGroup": {
        "maxProperties": 2147483647,
        "minProperties": 0,
        "properties": {
          "access": {
            "maxProperties": 6,
            "minProperties": 1,
            "properties": {
              "delete": {
                "$ref": "#/components/schemas/delete"
              },
              "externalize": {
                "$ref": "#/components/schemas/externalize"
              },
              "manage": {
                "$ref": "#/components/schemas/manage"
              },
              "read": {
                "$ref": "#/components/schemas/read"
              },
              "update": {
                "$ref": "#/components/schemas/update"
              },
              "write": {
                "$ref": "#/components/schemas/write"
              }
            },
            "readOnly": true,
            "required": [
              "delete",
              "externalize",
              "manage",
              "read",
              "update",
              "write"
            ],
            "type": "object"
          },
          "attributeValues": {
            "items": {
              "properties": {
                "attribute": {
                  "format": "uid",
                  "maxLength": 255,
                  "readOnly": false,
                  "type": "string"
                },
                "created": {
                  "$ref": "#/components/schemas/created"
                },
                "lastUpdated": {
                  "$ref": "#/components/schemas/lastUpdated"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              },
              "required": [
                "attribute"
              ]
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "code": {
            "$ref": "#/components/schemas/code"
          },
          "created": {
            "$ref": "#/components/schemas/created"
          },
          "description": {
            "enum": [
              "Testing VCCT"
            ],
            "example": "ANC",
            "format": "general",
            "maxLength": 255,
            "minLength": 1,
            "type": "string"
          },
          "displayName": {
            "$ref": "#/components/schemas/displayName"
          },
          "externalAccess": {
            "$ref": "#/components/schemas/externalAccess"
          },
          "favorite": {
            "type": "boolean"
          },
          "favorites": {
            "items": {
              "$ref": "#/components/schemas/favorite"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "href": {
            "$ref": "#/components/schemas/href"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "lastUpdated": {
            "$ref": "#/components/schemas/lastUpdated"
          },
          "lastUpdatedBy": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "name": {
            "$ref": "#/components/schemas/name"
          },
          "publicAccess": {
            "$ref": "#/components/schemas/publicAccess"
          },
          "translations": {
            "items": {
              "properties": {
                "locale": {
                  "$ref": "#/components/schemas/locale"
                },
                "property": {
                  "$ref": "#/components/schemas/property"
                },
                "value": {
                  "$ref": "#/components/schemas/value"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "user": {
            "properties": {
              "id": {
                "$ref": "#/components/schemas/id"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "userAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userUid": {
                  "$ref": "#/components/schemas/userUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "userGroupAccesses": {
            "items": {
              "properties": {
                "access": {
                  "format": "access",
                  "maxLength": 255,
                  "minLength": 0,
                  "readOnly": false,
                  "type": "string"
                },
                "displayName": {
                  "$ref": "#/components/schemas/displayName"
                },
                "id": {
                  "$ref": "#/components/schemas/id"
                },
                "userGroupUid": {
                  "$ref": "#/components/schemas/userGroupUid"
                }
              }
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          },
          "validationRules": {
            "items": {
              "maxProperties": 1,
              "minProperties": 0,
              "properties": {
                "id": {
                  "$ref": "#/components/schemas/id"
                }
              },
              "required": [
                "id"
              ],
              "type": "object"
            },
            "maxItems": 2147483647,
            "minItems": 0,
            "type": "array"
          }
        },
        "required": [
          "name"
        ],
        "type": "object",
        "x-status-dhis2": "template"
      },
      "validationRuleGroupAttribute": {
        "type": "boolean"
      },
      "validationStrategy": {
        "enum": [
          "ON_COMPLETE",
          "ON_UPDATE_AND_INSERT"
        ],
        "example": "ON_COMPLETE",
        "format": "enum",
        "type": "string"
      },
      "value": {
        "maxLength": 2147483647,
        "minLength": 0,
        "readOnly": false,
        "type": "string"
      },
      "valueType": {
        "enum": [
          "AGE",
          "BOOLEAN",
          "COORDINATE",
          "DATE",
          "DATETIME",
          "EMAIL",
          "FILE_RESOURCE",
          "IMAGE",
          "INTEGER",
          "INTEGER_NEGATIVE",
          "INTEGER_POSITIVE",
          "INTEGER_ZERO_OR_POSITIVE",
          "LETTER",
          "LONG_TEXT",
          "NUMBER",
          "ORGANISATION_UNIT",
          "PERCENTAGE",
          "PHONE_NUMBER",
          "TEXT",
          "TIME",
          "TRACKER_ASSOCIATE",
          "TRUE_ONLY",
          "UNIT_INTERVAL",
          "URL",
          "USERNAME"
        ],
        "example": "TEXT",
        "format": "enum",
        "type": "string"
      },
      "version": {
        "properties": {
          "created": {
            "$ref": "#/components/schemas/created"
          },
          "displayName": {
            "$ref": "#/components/schemas/displayName"
          },
          "externalAccess": {
            "$ref": "#/components/schemas/externalAccess"
          },
          "favorite": {
            "type": "boolean"
          },
          "hashCode": {
            "$ref": "#/components/schemas/hashCode"
          },
          "id": {
            "$ref": "#/components/schemas/id"
          },
          "lastUpdated": {
            "$ref": "#/components/schemas/lastUpdated"
          },
          "name": {
            "$ref": "#/components/schemas/name"
          },
          "type": {
            "example": "BEST_EFFORT",
            "format": "enum",
            "maxLength": 11,
            "minLength": 11,
            "type": "string"
          }
        },
        "required": [
          "created",
          "displayName",
          "externalAccess",
          "favorite",
          "hashCode",
          "id",
          "lastUpdated",
          "name",
          "type"
        ],
        "type": "object"
      },
      "webmessage": {
        "properties": {
          "httpStatus": {
            "$ref": "#/components/schemas/httpStatus"
          },
          "httpStatusCode": {
            "$ref": "#/components/schemas/httpStatusCode"
          },
          "message": {
            "$ref": "#/components/schemas/message"
          },
          "response": {
            "items": {
              "$ref": "#/components/schemas/errorResponse"
            },
            "maxItems": 1,
            "minItems": 0,
            "readOnly": true,
            "type": "object"
          },
          "status": {
            "description": "DHIS2 status.",
            "enum": [
              "ERROR",
              "OK",
              "WARNING"
            ],
            "readOnly": true,
            "type": "string"
          }
        },
        "required": [
          "attribute"
        ]
      },
      "weeksThisYear": {
        "type": "boolean"
      },
      "welcomeMessage": {
        "format": "general",
        "maxLength": 2147483647,
        "minLength": 0,
        "type": "string"
      },
      "whatsApp": {
        "example": "mywhatsApp",
        "format": "general",
        "maxLength": 255,
        "minLength": 0,
        "type": "string"
      },
      "width": {
        "format": "int64",
        "maxLength": 2147483647,
        "minLength": 0,
        "type": "integer",
        "x-association": "true"
      },
      "withoutRegistration": {
        "readOnly": true,
        "type": "boolean"
      },
      "workflow": {
        "format": "uid",
        "maxLength": 11,
        "minLength": 11,
        "type": "string"
      },
      "write": {
        "default": false,
        "type": "boolean"
      },
      "wrongFormatMessage": {
        "example": "mywrongFormatMessage",
        "format": "general",
        "maxLength": 2147483647,
        "minLength": 0,
        "type": "string"
      },
      "x": {
        "format": "integer",
        "maxLength": 2147483647,
        "minLength": 0,
        "type": "string",
        "x-association": "true"
      },
      "x-unique": {
        "type": "boolean"
      },
      "y": {
        "format": "integer",
        "maxLength": 2147483647,
        "minLength": 0,
        "type": "string",
        "x-association": "true"
      },
      "yesterday": {
        "type": "boolean"
      },
      "zeroIsSignificant": {
        "type": "boolean"
      },
      "zoom": {
        "example": 8,
        "format": "int32",
        "maximum": 2147483647,
        "minimum": 0,
        "type": "integer"
      }
    },
    "securitySchemes": {
      "basicAuth": {
        "scheme": "basic",
        "type": "http"
      },
      "oAuth": {
        "openIdConnectUrl": "https://play.dhis2.org/api/oAuthClients",
        "type": "openIdConnect"
      }
    }
  },
  "externalDocs": {
    "description": "",
    "url": "https://docs.dhis2.org/master/en/developer/html/dhis2_developer_manual_full.html",
    "x-status-dhis2": "draft"
  },
  "info": {
    "contact": {
      "email": "dev@dhis2.org"
    },
    "description": "<!-- auto-inserted: do not edit here -->\n\nThe Web API is a component which makes it possible for external systems to access and manipulate data stored in an instance of DHIS2. More precisely, it provides a programmatic interface to a wide range of exposed data and service methods for applications such as third-party software clients, web portals and internal DHIS2 modules.\n\n## Introduction\n\n<!--DHIS2-SECTION-ID:webapi_introduction-->\n\nThe Web API adheres to many of the principles behind the REST architectural style. To mention some few and important ones:\n\n1.  The fundamental building blocks are referred to as *resources*. A\n    resource can be anything exposed to the Web, from a document to a\n    business process - anything a client might want to interact with.\n    The information aspects of a resource can be retrieved or exchanged\n    through resource *representations*. A representation is a view of a\n    resource's state at any given time. For instance, the *reportTable*\n    resource in DHIS2 represents a tabular report of aggregated data for\n    a certain set of parameters. This resource can be retrieved in a\n    variety of representation formats including HTML, PDF, and MS Excel.\n\n2.  All resources can be uniquely identified by a *URI* (also referred\n    to a/s *URL*). All resources have a default representation. You can\n    indicate that you are interested in a specific representation by\n    supplying an *Accept* HTTP header, a file extension or a *format*\n    query parameter. So in order to retrieve the PDF representation of a\n    report table you can supply a *Accept: application/pdf* header or\n    append *.pdf* or *?format=pdf* to your request URL.\n\n3.  Interactions with the API requires correct use of HTTP *methods* or\n    *verbs*. This implies that for a resource you must issue a *GET*\n    request when you want to retrieve it, *POST* request when you want\n    to create one, *PUT* when you want to update it and *DELETE* when\n    you want to remove it. So if you want to retrieve the default\n    representation of a report table you can send a GET request to e.g.\n    */reportTable/iu8j/hYgF6t*, where the last part is the report table\n    identifier.\n\n4.  Resource representations are *linkable*, meaning that\n    representations advertise other resources which are relevant to the\n    current one by embedding links into itself (please be aware that you\n    need to request *href* in your field filter to have this working.\n    This feature greatly improves the usability and robustness of the\n    API as we will see later. For instance, you can easily navigate to\n    the indicators which are associated with a report table from the\n    *reportTable* resource through the embedded links using your\n    preferred representation format.\n\nWhile all of this might sound complicated, the Web API is actually very simple to use. We will proceed with a few practical examples in a minute.\n\n## Authentication\n\n<!--DHIS2-SECTION-ID:webapi_authentication-->\n\nThe DHIS2 Web API supports two protocols for authentication, Basic Authentication and OAuth 2. You can verify and get information about the currently authenticated user by making a GET request to the following URL:\n\n    /api/26/me\n\nAnd more information about authorities (and if a user have a certain authority) by using the endpoints:\n\n    /api/26/me/authorities\n    /api/26/me/authorities/ALL\n\n### Basic Authentication\n\n<!--DHIS2-SECTION-ID:webapi_basic_authentication-->\n\nThe DHIS2 Web API supports *Basic authentication*. Basic authentication is a technique for clients to send login credentials over HTTP to a web server. Technically speaking, the username is appended with a colon and the password, Base64-encoded, prefixed Basic and supplied as the value of the *Authorization* HTTP header. More formally that is`\nAuthorization: Basic base64encode(username:password)` Most network-aware development frameworks provides support for authentication using Basic, such as Apache HttpClient, Spring RestTemplate and C\\# WebClient. An important note is that this authentication scheme provides no security since the username and password is sent in plain text and can be easily decoded.\nUsing it is recommended only if the server is using SSL/TLS (HTTPS) to encrypt communication between itself and the client. Consider it a hard requirement to provide secure interactions with the Web API.\n\n### Two factor authentication\n\n<!--DHIS2-SECTION-ID:webapi_2fa-->\n\nAs of 2.30 DHIS2 supports two factor authentication. This means that you can enable 2FA in your user settings which means that you will be prompted for a 2FA code at login. You can read more about 2FA here:\n\n    https://www.google.com/landing/2step/\n\n### OAuth2\n\n<!--DHIS2-SECTION-ID:webapi_oauth2-->\n\nDHIS2 supports the OAuth2 authentication protocol. OAuth2 is an open standard for authorization which it allows third-party clients to connect on behalf of a DHIS2 user and get a reusable bearer token for subsequent requests to the Web API. DHIS 2 does not support fine-grained OAuth2 roles but rather provides applications access based on user roles of the DHIS2 user.\n\nEach client for which you want to allow OAuth 2 authentication must be registered in DHIS2. To add a new OAuth2 client go to *Apps \\> Settings\n\\> OAuth2 Clients*, click add new and enter the desired client name and the grant types.\n\n#### Adding a client using the Web API\n\nAn OAuth2 client can be added through the Web API. As an example we can send a payload like this:\n\n    {\n       \"name\" : \"OAuth2 Demo Client\",\n       \"cid\" : \"demo\",\n       \"secret\" : \"1e6db50c-0fee-11e5-98d0-3c15c2c6caf6\",\n       \"grantTypes\" : [\n          \"password\",\n          \"refresh_token\",\n          \"authorization_code\"\n       ],\n       \"redirectUris\" : [\n          \"http://www.example.org\"\n       ]\n    }\n\n    SERVER=\"https://play.dhis2.org/dev\"\n    curl -X POST -H \"Content-Type: application/json\" -d @client.json\n      -u admin:district $SERVER/api/oAuth2Clients\n\nWe will use this client as the basis for our next grant type examples.\n\n#### Grant type password\n\n<!--DHIS2-SECTION-ID:webapi_oauth2_password-->\n\nThe simplest of all grant types is the **password** grant type. This grant type is similar to basic authentication in the sense that it requires the client to collect the users username and password. As an example we can use our demo server:\n\n    SERVER=\"https://play.dhis2.org/dev\"\n    SECRET=\"1e6db50c-0fee-11e5-98d0-3c15c2c6caf6\"\n\n    curl -X POST -H \"Accept: application/json\" -u demo:$SECRET $SERVER/uaa/oauth/token\n    -d grant_type=password -d username=admin -d password=district\n\nThis will give you a response similar to this:\n\n    {\n       \"expires_in\" : 43175,\n       \"scope\" : \"ALL\",\n       \"access_token\" : \"07fc551c-806c-41a4-9a8c-10658bd15435\",\n       \"refresh_token\" : \"a4e4de45-4743-481d-9345-2cfe34732fcc\",\n       \"token_type\" : \"bearer\"\n    }\n\nFor now, we will concentrate on the **access\\_token**, which is what we will use as our authentication (bearer) token. As an example we will get all data elements using our token:\n\n    SERVER=\"https://play.dhis2.org/dev\"\n    curl -H \"Authorization: Bearer 07fc551c-806c-41a4-9a8c-10658bd15435\" $SERVER/api/26/dataElements.json\n\n#### Grant type refresh\\_token\n\n<!--DHIS2-SECTION-ID:webapi_refresh_token-->\n\nIn general the access tokens have limited validity. You can have a look at the **expires\\_in** property of the response in the previous example to understand when a token expires. To get a fresh **access\\_token** you can make another round trip to the server and use **refresh\\_token**\nwhich allows you to get an updated token without needing to ask for the user credentials one more time.\n\n    SERVER=\"https://play.dhis2.org/dev\"\n    SECRET=\"1e6db50c-0fee-11e5-98d0-3c15c2c6caf6\"\n    REFRESH_TOKEN=\"a4e4de45-4743-481d-9345-2cfe34732fcc\"\n\n    curl -X POST -H \"Accept: application/json\" -u demo:$SECRET $SERVER/uaa/oauth/token\n    -d grant_type=refresh_token -d refresh_token=$REFRESH_TOKEN\n\nThe response will be exactly the same as when you get an token to start with.\n\n#### Grant type authorization\\_code\n\n<!--DHIS2-SECTION-ID:webapi_authorization_code-->\n\nAuthorized code grant type is the recommended approach if you don't want to store the user credentials externally. It allows DHIS2 to collect the username/password directly from the user instead of the client collecting them and then authenticating on behalf of the user. Please be aware that this approach uses the **redirect\\_uris** part of the client payload.\n\nStep 1: Using a browser visit this URL (if you have more than one redirect URIs, you might want to add\n\\&redirect\\_uri=http://www.example.org) :\n\n    SERVER=\"https://play.dhis2.org/dev\"\n\n    $SERVER/uaa/oauth/authorize?client_id=demo&response_type=code\n\nStep 2: After the user have successfully logged in and accepted your client access, it will redirect back to your redirect uri like this:\n\n    http://www.example.org/?code=XYZ\n\nStep 3: This step is similar to what we did in the password grant type,\nusing the given code, we will now ask for a access token:\n\n    SERVER=\"https://play.dhis2.org/dev\"\n    SECRET=\"1e6db50c-0fee-11e5-98d0-3c15c2c6caf6\"\n\n    curl -X POST -u demo:$SECRET -H \"Accept: application/json\" $SERVER/uaa/oauth/token\n      -d grant_type=authorization_code -d code=XYZ\n\n## Error and info messages\n\n<!--DHIS2-SECTION-ID:webapi_error_info_messages-->\n\nThe Web API uses a consistent format for all error/warning and informational messages:\n\n    {\n       \"httpStatus\" : \"Forbidden\",\n       \"message\" : \"You don't have the proper permissions to read objects of this type.\",\n       \"httpStatusCode\" : 403,\n       \"status\" : \"ERROR\"\n    }\n\nHere we can see from the message that the user tried to access a resource I did not have access to. It uses the http status code 403, the http status message **forbidden** and a descriptive message.\n\n<table>\n<caption>WebMessage properties</caption>\n<colgroup>\n<col style=\"width: 13%\" />\n<col style=\"width: 86%\" />\n</colgroup>\n<thead>\n<tr class=\"header\">\n<th>Name</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"odd\">\n<td>httpStatus</td>\n<td>HTTP Status message for this response, see RFC 2616 (Section 10) for more information.</td>\n</tr>\n<tr class=\"even\">\n<td>httpStatusCode</td>\n<td>HTTP Status code for this response, see RFC 2616 (Section 10) for more information.</td>\n</tr>\n<tr class=\"odd\">\n<td>status</td>\n<td>DHIS2 status, possible values are <em>OK</em> | <em>WARNING</em> | <em>ERROR</em>, where <strong>OK</strong> is means everything was successful, <strong>ERROR</strong> means that operation did not complete and <strong>WARNING</strong> means operation was partially successful, if there message contains a <strong>response</strong> property, please look there for more information.</td>\n</tr>\n<tr class=\"even\">\n<td>message</td>\n<td>A user friendly message telling whether the operation was a success or not.</td>\n</tr>\n<tr class=\"odd\">\n<td>devMessage</td>\n<td>A more technical, developer-friendly message (not currently in use).</td>\n</tr>\n<tr class=\"even\">\n<td>response</td>\n<td>Extension point for future extension to the WebMessage format. This will be documented when it starts being used.</td>\n</tr>\n</tbody>\n</table>\n\n## Date and period format\n\n<!--DHIS2-SECTION-ID:webapi_date_perid_format-->\n\nThroughout the Web API we refer to dates and periods. The date format is:\n\n    yyyy-MM-dd\n\nFor instance, if you want to express March 20, 2014 you must use\n*2014-03-20*.\n\nThe period format is described in the following table (also available on API endpoint */api/periodTypes*)\n\n<table style=\"width:100%;\">\n<caption>Period format</caption>\n<colgroup>\n<col style=\"width: 24%\" />\n<col style=\"width: 21%\" />\n<col style=\"width: 18%\" />\n<col style=\"width: 35%\" />\n</colgroup>\n<thead>\n<tr class=\"header\">\n<th>Interval</th>\n<th>Format</th>\n<th>Example</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"odd\">\n<td>Day</td>\n<td><em>yyyyMMdd</em></td>\n<td>20040315</td>\n<td>March 15 2004</td>\n</tr>\n<tr class=\"even\">\n<td>Week</td>\n<td><em>yyyy</em>W<em>n</em></td>\n<td>2004W10</td>\n<td>Week 10 2004</td>\n</tr>\n<tr class=\"odd\">\n<td>Week Wednesday</td>\n<td><em>yyyy</em>WedW<em>n</em></td>\n<td>2015WedW5</td>\n<td>Week 5 with start Wednesday</td>\n</tr>\n<tr class=\"even\">\n<td>Week Thursday</td>\n<td><em>yyyy</em>ThuW<em>n</em></td>\n<td>2015ThuW6</td>\n<td>Week 6 with start Thursday</td>\n</tr>\n<tr class=\"odd\">\n<td>Week Saturday</td>\n<td><em>yyyy</em>SatW<em>n</em></td>\n<td>2015SatW7</td>\n<td>Week 7 with start Saturday</td>\n</tr>\n<tr class=\"even\">\n<td>Week Sunday</td>\n<td><em>yyyy</em>SunW<em>n</em></td>\n<td>2015SunW8</td>\n<td>Week 8 with start Sunday</td>\n</tr>\n<tr class=\"odd\">\n<td>Bi-week</td>\n<td><em>yyyy</em>BiW<em>n</em></td>\n<td>2015BiW1</td>\n<td>Week 1-2 20015</td>\n</tr>\n<tr class=\"even\">\n<td>Month</td>\n<td><em>yyyyMM</em></td>\n<td>200403</td>\n<td>March 2004</td>\n</tr>\n<tr class=\"odd\">\n<td>Bi-month</td>\n<td><em>yyyyMM</em>B</td>\n<td>200401B</td>\n<td>January-February 2004</td>\n</tr>\n<tr class=\"even\">\n<td>Quarter</td>\n<td><em>yyyy</em>Q<em>n</em></td>\n<td>2004Q1</td>\n<td>January-March 2004</td>\n</tr>\n<tr class=\"odd\">\n<td>Six-month</td>\n<td><em>yyyy</em>S<em>n</em></td>\n<td>2004S1</td>\n<td>January-June 2004</td>\n</tr>\n<tr class=\"even\">\n<td>Six-month April</td>\n<td><em>yyyy</em>AprilSn</td>\n<td>2004AprilS1</td>\n<td>April-September 2004</td>\n</tr>\n<tr class=\"odd\">\n<td>Year</td>\n<td>yyyy</td>\n<td>2004</td>\n<td>2004</td>\n</tr>\n<tr class=\"even\">\n<td>Financial Year April</td>\n<td>yyyyApril</td>\n<td>2004April</td>\n<td>Apr 2004-Mar 2005</td>\n</tr>\n<tr class=\"odd\">\n<td>Financial Year July</td>\n<td>yyyyJuly</td>\n<td>2004July</td>\n<td>July 2004-June 2005</td>\n</tr>\n<tr class=\"even\">\n<td>Financial Year Oct</td>\n<td>yyyyOct</td>\n<td>2004Oct</td>\n<td>Oct 2004-Sep 2005</td>\n</tr>\n</tbody>\n</table>\n\n\n### Relative Periods\n\n<!--DHIS2-SECTION-ID:webapi_date_relative_period_values-->\n\n\nIn some parts of the API, like for the analytics resource, you can utilize relative periods in addition to fixed periods (defined above).\nThe relative periods are relative to the current date, and allows e.g.\nfor creating dynamic reports. The available relative period values are:\n\n    THIS_WEEK, LAST_WEEK, LAST_4_WEEKS, LAST_12_WEEKS, LAST_52_WEEKS,\n    THIS_MONTH, LAST_MONTH, THIS_BIMONTH, LAST_BIMONTH, THIS_QUARTER, LAST_QUARTER,\n    THIS_SIX_MONTH, LAST_SIX_MONTH, MONTHS_THIS_YEAR, QUARTERS_THIS_YEAR,\n    THIS_YEAR, MONTHS_LAST_YEAR, QUARTERS_LAST_YEAR, LAST_YEAR, LAST_5_YEARS, LAST_12_MONTHS,\n    LAST_3_MONTHS, LAST_6_BIMONTHS, LAST_4_QUARTERS, LAST_2_SIXMONTHS, THIS_FINANCIAL_YEAR,\n    LAST_FINANCIAL_YEAR, LAST_5_FINANCIAL_YEARS\n\n## Identifier schemes\n\n<!--DHIS2-SECTION-ID:webapi_identifier_schemes-->\n\nThis section provides an explanation of the identifier scheme concept.\nIdentifier schemes are used to map metadata objects to other metadata during import, and to render metadata as part of exports. Please note that not all schemes works for all web-api calls, and not not all schemes can be used for both input and output (this is outlined in the sections explaining the various Web APIs).\n\nThe full set of identifier scheme object types available are listed below, using the name of the property to use in queries:\n\n  - idScheme\n\n  - dataElementIdScheme\n\n  - categoryOptionComboIdScheme\n\n  - orgUnitIdScheme\n\n  - programIdScheme\n\n  - programStageIdScheme\n\n  - trackedEntityIdScheme\n\n  - trackedEntityAttributeIdScheme\n\nThe general idScheme applies to all types of objects. It can be overridden by specific object types.\n\nThe default scheme for all parameters is UID (stable DHIS 2\nidentifiers). The supported identifier schemes are described in the table below.\n\n<table>\n<caption>Scheme Values</caption>\n<colgroup>\n<col style=\"width: 14%\" />\n<col style=\"width: 85%\" />\n</colgroup>\n<thead>\n<tr class=\"header\">\n<th>Scheme</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"odd\">\n<td>ID, UID</td>\n<td>Match on DHIS2 stable Identifier, this is the default id scheme.</td>\n</tr>\n<tr class=\"even\">\n<td>CODE</td>\n<td>Match on DHIS2 Code, mainly used to exchange data with an external system.</td>\n</tr>\n<tr class=\"odd\">\n<td>NAME</td>\n<td>Match on DHIS2 Name, please not that this uses what is available as <em>object.name</em>, and not the translated name. Also not that names are not always unique, and in that case they can not be used.</td>\n</tr>\n<tr class=\"even\">\n<td>ATTRIBUTE:ID</td>\n<td>Match on metadata attribute, this attribute needs to be assigned to the type you are matching on, and also that the unique property is set to <em>true</em>. The main usage of this is also to exchange data with external systems, it has some advantages over <em>CODE</em> since multiple attributes can be added, so it can be used to synchronize with more than one system.</td>\n</tr>\n</tbody>\n</table>\n\nNote that identifier schemes is not an independent feature but needs to be used in combination with resources such as data value import and meta data import.\n\nAs an example, to specify CODE as the general id scheme and override with UID for organisation unit id scheme you can use these query parameters:\n\n    ?idScheme=CODE&orgUnitIdScheme=UID\n\nAs another example, to specify an attribute for the organisation unit id scheme, code for the data element id scheme and use the default UID id scheme for all other objects you can use these parameters:\n\n    ?orgUnitIdScheme=ATTRIBUTE:j38fk2dKFsG&dataElementIdScheme=CODE\n\n## Browsing the Web API\n\n<!--DHIS2-SECTION-ID:webapi_browsing_the_web_api-->\n\nThe entry point for browsing the Web API is */api/*. This resource provide links to all available resources. Four resource representation formats are consistently available for all resources: HTML, XML, JSON and JSONP. Some resources will have other formats available, like MS Excel, PDF, CSV and PNG. To explore the API from a web browser, navigate to the */api/* entry point and follow the links to your desired resource, for instance */api/dataElements*. For all resources which return a list of elements certain query parameters can be used to modify the response:\n\n<table style=\"width:100%;\">\n<caption>Query parameters</caption>\n<colgroup>\n<col style=\"width: 11%\" />\n<col style=\"width: 20%\" />\n<col style=\"width: 12%\" />\n<col style=\"width: 54%\" />\n</colgroup>\n<thead>\n<tr class=\"header\">\n<th>Param</th>\n<th>Option values</th>\n<th>Default option</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"odd\">\n<td>paging</td>\n<td>true | false</td>\n<td>true</td>\n<td>Indicates whether to return lists of elements in pages.</td>\n</tr>\n<tr class=\"even\">\n<td>page</td>\n<td>number</td>\n<td>1</td>\n<td>Defines which page number to return.</td>\n</tr>\n<tr class=\"odd\">\n<td>pageSize</td>\n<td>number</td>\n<td>50</td>\n<td>Defines the number of elements to return for each page.</td>\n</tr>\n<tr class=\"even\">\n<td>order</td>\n<td>property:asc/iasc/desc/idesc</td>\n<td></td>\n<td>Order the output using a specified order, only properties that are both persisted and simple (no collections, idObjects etc) are supported. iasc and idesc are case insensitive sorting.</td>\n</tr>\n</tbody>\n</table>\n\nAn example of how these parameters can be used to get a full list of data element groups in XML response format is:\n\n    /api/26/dataElementGroups.xml?links=false&paging=false\n\nYou can query for elements on the name property instead of returning full list of elements using the *query* query variable. In this example we query for all data elements with the word \"anaemia\" in the name:\n\n    /api/26/dataElements?query=anaemia\n\nYou can get specific pages and page sizes of objects like this:\n\n    /api/26/dataElements.json?page=2&pageSize=20\n\nYou can completely disable paging like this:\n\n    /api/26/indicatorGroups.json?paging=false\n\nTo order the result based on a specific property:\n\n    /api/26/indicators.json?order=shortName:desc\n\nYou can find an object based on its ID across all object types through the *identifiableObjects* resource:\n\n    /api/26/identifiableObjects/<id>\n\n### Translation\n\n<!--DHIS2-SECTION-ID:webapi_translation-->\n\nDHIS2 supports translations of database content, such as data elements,\nindicators and programs. All metadata objects in the Web API have properties meant to be used for display / UI purposes, which includes\n*displayName*, *displayShortName* and *displayDescription*.\n\n<table>\n<caption>Translate options</caption>\n<colgroup>\n<col style=\"width: 20%\" />\n<col style=\"width: 16%\" />\n<col style=\"width: 62%\" />\n</colgroup>\n<thead>\n<tr class=\"header\">\n<th>Parameter</th>\n<th>Values</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"odd\">\n<td>translate</td>\n<td>true | false</td>\n<td>Translate display* properties in metadata output (displayName, displayShortName, displayDescription, and displayFormName for data elements). Default value is true.</td>\n</tr>\n<tr class=\"even\">\n<td>locale</td>\n<td>Locale to use</td>\n<td>Translate metadata output using a specified locale (requires translate=true).</td>\n</tr>\n</tbody>\n</table>\n\n### Translation API\n\n<!--DHIS2-SECTION-ID:webapi_translation_api-->\n\nThe translations for an object is rendered as part of the object itself in the *translations* array. Note that the *translations* array in the JSON/XML payloads are normally pre-filtered for you, which means they can not directly be used to import/export translations (as that would normally overwrite locales other than current users).\n\n*Example of data element with translation array filtered on user locale:*\n\n    {\n      \"id\": \"FTRrcoaog83\",\n      \"displayName\": \"Accute French\",\n      \"translations\": [\n        {\n          \"property\": \"SHORT_NAME\",\n          \"locale\": \"fr\",\n          \"value\": \"Accute French\"\n        },\n        {\n          \"property\": \"NAME\",\n          \"locale\": \"fr\",\n          \"value\": \"Accute French\"\n        }\n      ]\n    }\n\n*Example of data element with translations turned off:*\n\n    {\n      \"id\": \"FTRrcoaog83\",\n      \"displayName\": \"Accute Flaccid Paralysis (Deaths < 5 yrs)\",\n      \"translations\": [\n        {\n          \"property\": \"FORM_NAME\",\n          \"locale\": \"en_FK\",\n          \"value\": \"aa\"\n        },\n        {\n          \"property\": \"SHORT_NAME\",\n          \"locale\": \"en_GB\",\n          \"value\": \"Accute Flaccid Paral\"\n        },\n        {\n          \"property\": \"SHORT_NAME\",\n          \"locale\": \"fr\",\n          \"value\": \"Accute French\"\n        },\n        {\n          \"property\": \"NAME\",\n          \"locale\": \"fr\",\n          \"value\": \"Accute French\"\n        },\n        {\n          \"property\": \"NAME\",\n          \"locale\": \"en_FK\",\n          \"value\": \"aa\"\n        },\n        {\n          \"property\": \"DESCRIPTION\",\n          \"locale\": \"en_FK\",\n          \"value\": \"aa\"\n        }\n      ]\n    }\n\nNote that even if you get the unfiltered result, and are using the appropriate type endpoint i..e */api/26/dataElements* we do not allow updates, as it would be too easy to make mistakes and overwrite the other available locales.\n\nTo read and update translations you can use the special translations endpoint for each object resource. These can be accessed by **GET** or\n**PUT** on the appropriate\n*/api/26/\\<object-type\\>/\\<object-id\\>/translations* endpoint. As an example, for a data element with identifier *FTRrcoaog83* you could use\n*/api/26/dataElements/FTRrcoaog83/translations* to get and update translations. The fields available are *property* with options **NAME**,\n**SHORT\\_NAME**, **DESCRIPTION**, the *locale* which supports any valid locale ID and the the *value* itself.\n\n*Example of NAME property for French locale:*\n\n    {\n      \"property\": \"NAME\",\n      \"locale\": \"fr\",\n      \"value\": \"Paralysie Flasque Aigu\u00eb (D\u00e9c\u00e8s <5 ans)\"\n    }\n\nThis payload would then be added to a translation array, and sent back to the appropriate endpoint:\n\n    {\n      \"translations\": [\n        {\n          \"property\": \"NAME\",\n          \"locale\": \"fr\",\n          \"value\": \"Paralysie Flasque Aigu\u00eb (D\u00e9c\u00e8s <5 ans)\"\n        }\n      ]\n    }\n\nFor a an data element with ID *FTRrcoaog83* you can **PUT** this to\n*/api/26/dataElements/FTRrcoaog83/translations*. Make sure to send all translations for the specific object and not just for a single locale\n(if not you will potentially overwrite existing locales for other locales).\n\n### Web API versions\n\n<!--DHIS2-SECTION-ID:webapi_api_versions-->\n\nThe Web API is versioned starting from DHIS 2.25. The API versioning follows the DHIS 2 major version numbering. As an example, the API version for DHIS 2.25 is *25*.\n\nYou can access a specific API version by including the version number after the */api* component, as an example like this:\n\n    /api/26/dataElements\n\nIf you omit the version part of the URL, the system will use the current API version. As an example, for DHIS 2.25, when omitting the API part,\nthe system will use API version 25. When developing API clients it is recommended to use explicit API versions (rather than omitting the API version), as this will protect the client from unforeseen API changes.\n\nThe last three API versions will be supported. As an example, DHIS version 2.27 will support API version 27, 26 and 25.\n\nNote that the metadata model is not versioned, and that you might experience changes e.g. in associations between objects. These changes will be documented in the DHIS2 major version release notes.\n\n## Metadata object filter\n\n<!--DHIS2-SECTION-ID:webapi_metadata_object_filter-->\n\nTo filter the metadata there are several filter operations that can be applied to the returned list of metadata. The format of the filter itself is straight-forward and follows the pattern\n*property:operator:value*, where *property* is the property on the metadata you want to filter on, *operator* is the comparison operator you want to perform and *value* is the value to check against (not all operators require value). Please see the *schema* section to discover which properties are available. Recursive filtering, ie. filtering on associated objects or collection of objects, are supported as well.\n\n<table>\n<caption>Available Operators</caption>\n<thead>\n<tr class=\"header\">\n<th>Operator</th>\n<th>Types</th>\n<th>Value required</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"odd\">\n<td>eq</td>\n<td>string | boolean | integer | float | enum | collection (checks for size) | date</td>\n<td>true</td>\n<td>Equality</td>\n</tr>\n<tr class=\"even\">\n<td>!eq</td>\n<td>string | boolean | integer | float | enum | collection (checks for size) | date</td>\n<td>true</td>\n<td>Inequality</td>\n</tr>\n<tr class=\"odd\">\n<td>ne</td>\n<td>string | boolean | integer | float | enum | collection (checks for size) | date</td>\n<td>true</td>\n<td>Inequality</td>\n</tr>\n<tr class=\"even\">\n<td>like</td>\n<td>string</td>\n<td>true</td>\n<td>Case sensitive string, match anywhere</td>\n</tr>\n<tr class=\"odd\">\n<td>!like</td>\n<td>string</td>\n<td>true</td>\n<td>Case sensitive string, not match anywhere</td>\n</tr>\n<tr class=\"even\">\n<td>\\$like</td>\n<td>string</td>\n<td>true</td>\n<td>Case sensitive string, match start</td>\n</tr>\n<tr class=\"odd\">\n<td>!\\$like</td>\n<td>string</td>\n<td>true</td>\n<td>Case sensitive string, not match start</td>\n</tr>\n<tr class=\"even\">\n<td>like\\$</td>\n<td>string</td>\n<td>true</td>\n<td>Case sensitive string, match end</td>\n</tr>\n<tr class=\"odd\">\n<td>!like\\$</td>\n<td>string</td>\n<td>true</td>\n<td>Case sensitive string, not match end</td>\n</tr>\n<tr class=\"even\">\n<td>ilike</td>\n<td>string</td>\n<td>true</td>\n<td>Case insensitive string, match anywhere</td>\n</tr>\n<tr class=\"odd\">\n<td>!ilike</td>\n<td>string</td>\n<td>true</td>\n<td>Case insensitive string, not match anywhere</td>\n</tr>\n<tr class=\"even\">\n<td>\\$ilike</td>\n<td>string</td>\n<td>true</td>\n<td>Case insensitive string, match start</td>\n</tr>\n<tr class=\"odd\">\n<td>!\\$ilike</td>\n<td>string</td>\n<td>true</td>\n<td>Case insensitive string, not match start</td>\n</tr>\n<tr class=\"even\">\n<td>ilike\\$</td>\n<td>string</td>\n<td>true</td>\n<td>Case insensitive string, match end</td>\n</tr>\n<tr class=\"odd\">\n<td>!ilike\\$</td>\n<td>string</td>\n<td>true</td>\n<td>Case insensitive string, not match end</td>\n</tr>\n<tr class=\"even\">\n<td>gt</td>\n<td>string | boolean | integer | float | collection (checks for size) | date</td>\n<td>true</td>\n<td>Greater than</td>\n</tr>\n<tr class=\"odd\">\n<td>ge</td>\n<td>string | boolean | integer | float | collection (checks for size) | date</td>\n<td>true</td>\n<td>Greater than or equal</td>\n</tr>\n<tr class=\"even\">\n<td>lt</td>\n<td>string | boolean | integer | float | collection (checks for size) | date</td>\n<td>true</td>\n<td>Less than</td>\n</tr>\n<tr class=\"odd\">\n<td>le</td>\n<td>string | boolean | integer | float | collection (checks for size) | date</td>\n<td>true</td>\n<td>Less than or equal</td>\n</tr>\n<tr class=\"even\">\n<td>null</td>\n<td>all</td>\n<td>false</td>\n<td>Property is null</td>\n</tr>\n<tr class=\"odd\">\n<td>!null</td>\n<td>all</td>\n<td>false</td>\n<td>Property is not null</td>\n</tr>\n<tr class=\"even\">\n<td>empty</td>\n<td>collection</td>\n<td>false</td>\n<td>Collection is empty</td>\n</tr>\n<tr class=\"odd\">\n<td>token</td>\n<td>string</td>\n<td>true</td>\n<td>Match on multiple tokens in search property</td>\n</tr>\n<tr class=\"even\">\n<td>!token</td>\n<td>string</td>\n<td>true</td>\n<td>Not match on multiple tokens in search property</td>\n</tr>\n<tr class=\"odd\">\n<td>in</td>\n<td>string | boolean | integer | float | date</td>\n<td>true</td>\n<td>Find objects matching 1 or more values</td>\n</tr>\n<tr class=\"even\">\n<td>!in</td>\n<td>string | boolean | integer | float | date</td>\n<td>true</td>\n<td>Find objects not matching 1 or more values</td>\n</tr>\n</tbody>\n</table>\n\nOperators will be applied as logical **and** query, if you need a **or**\nquery, you can have a look at our *in* filter (also have a look at the section below). The filtering mechanism allows for recursion. See below for some examples.\n\nGet data elements with id property ID1 or ID2:\n\n    /api/26/dataElements?filter=id:eq:ID1&filter=id:eq:ID2\n\nGet all data elements which has the dataSet with id ID1:\n\n    /api/26/dataElements?filter=dataSetElements.dataSet.id:eq:ID1\n\nGet all data elements with aggregation operator \"sum\" and value type\n\"int\":\n\n    /api/26/dataElements.json?filter=aggregationOperator:eq:sum&filter=type:eq:int\n\nYou can do filtering within collections, e.g. to get data elements which are members of the \"ANC\" data element group you can use the following query using the id property of the associated data element groups:\n\n    /api/26/dataElements.json?filter=dataElementGroups.id:eq:qfxEYY9xAl6\n\nSince all operators are **and** by default, you can't find a data element matching more than one id, for that purpose you can use the *in*\noperator.\n\n    /api/26/dataElements.json?filter=id:in:[fbfJHSPpUQD,cYeuwXTCPkU]\n\n### Logical operators\n\n<!--DHIS2-SECTION-ID:webapi_metadata_logical_operator-->\n\nAs mentioned in the section before, the default logical operator applied to the filters are **AND** which means that all object filters must be matched. There are however cases where you want to match on one of several filters (maybe id and code field) and in those cases it is possible to switch the root logical operator from **AND** to **OR**\nusing the *rootJunction* parameter.\n\nExample: Normal filtering where both id and code must match to have a result returned\n\n    /api/dataElements.json?filter=id:in:[id1,id2]&filter=code:eq:code1\n\nExample: Filtering where the logical operator has been switched to OR and now only one of the filters must match to have a result\n    returned\n\n    /api/dataElements.json?filter=id:in:[id1,id2]&filter=code:eq:code1&rootJunction=OR\n\n### Identifiable token filter\n\nIn addition to the specific property based filtering mentioned above,\nwe also have **token** based **AND** filtering across a set of properties: id, code and name (also shortName if available). These properties are commonly referred as **identifiable**. The idea is to filter metadata whose id, name, code or short name containing something.\n\nExample: Filter all data elements containing *2nd* in any of the following: id,name,code, shortName\n\n    api/dataElements.json?filter=identifiable:token:2nd\n\nIt is also possible to specify multiple filtering values.\n\nExample: Get all data elements where *ANC visit* is found in any of the **identifiable** properties. The system returns all data elements where both tokens (ANC and visit) are found anywhere in identifiable properties.\n\n    api/dataElements.json?filter=identifiable:token:ANC visit\n\nIt is also possible to combine identifiable filter with property based filter and expect the *rootJunction* to be applied.\n\n    api/dataElements.json?filter=identifiable:token:ANC visit&filter=displayName:ilike:tt1\n\n    api/dataElements.json?filter=identifiable:token:ANC visit&filter=displayName:ilike:tt1&rootJunction=OR\n\n## Metadata field filter\n\n<!--DHIS2-SECTION-ID:webapi_metadata_field_filter-->\n\nIn certain situations the default views of the metadata can be too verbose. A client might only need a few fields from each object and want to remove unnecessary fields from the response. To discover which fields are available for each object please see the *schema* section.\n\nThe format for include/exclude is very simple and allows for infinite recursion. To filter at the \"root\" level you can just use the name of the field, i.e. *?fields=id,name* which would only display the *id* and\n*name* for every object. For objects that are either collections or complex objects with properties on their own you can use the format\n*?fields=id,name,dataSets\\[id,name\\]* which would return *id*, *name* of the root, and the *id* and *name* of every data set on that object.\nNegation can be done with the exclamation operator, and we have a set of presets of field select (see below). Both XML and JSON are supported.\n\n**Example**: Get *id* and *name* on the indicators resource:\n\n    /api/26/indicators?fields=id,name\n\n**Example**: Get *id* and *name* from dataElements, and *id* and *name*\nfrom the dataSets on dataElements:\n\n    /api/26/dataElements?fields=id,name,dataSets[id,name]\n\nTo exclude a field from the output you can use the exclamation (\\!)\noperator. This is allowed anywhere in the query and will simply not include that property (as it might have been inserted in some of the presets).\n\nA few presets (selected fields groups) are available and can be applied using the ':' operator.\n\n<table>\n<caption>Property operators</caption>\n<colgroup>\n<col style=\"width: 25%\" />\n<col style=\"width: 74%\" />\n</colgroup>\n<thead>\n<tr class=\"header\">\n<th>Operator</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"odd\">\n<td>&lt;field-name&gt;</td>\n<td>Include property with name, if it exists.</td>\n</tr>\n<tr class=\"even\">\n<td>&lt;object&gt;[&lt;field-name&gt;, ...]</td>\n<td>Includes a field within either a collection (will be applied to every object in that collection), or just on a single object.</td>\n</tr>\n<tr class=\"odd\">\n<td>!&lt;field-name&gt;, &lt;object&gt;[!&lt;field-name&gt;</td>\n<td>Do not include this field name, also works inside objects/collections. Useful when you use a preset to include fields.</td>\n</tr>\n<tr class=\"even\">\n<td>*, &lt;object&gt;[*]</td>\n<td>Include all fields on a certain object, if applied to a collection, it will include all fields on all objects on that collection.</td>\n</tr>\n<tr class=\"odd\">\n<td>:&lt;preset&gt;</td>\n<td>Alias to select multiple fields. Three presets are currently available, see table below for descriptions.</td>\n</tr>\n</tbody>\n</table>\n\n<table>\n<caption>Field presets</caption>\n<colgroup>\n<col style=\"width: 25%\" />\n<col style=\"width: 74%\" />\n</colgroup>\n<thead>\n<tr class=\"header\">\n<th>Preset</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"odd\">\n<td>all</td>\n<td>All fields of the object</td>\n</tr>\n<tr class=\"even\">\n<td>*</td>\n<td>Alias for all</td>\n</tr>\n<tr class=\"odd\">\n<td>identifiable</td>\n<td>Includes id, name, code, created and lastUpdated fields</td>\n</tr>\n<tr class=\"even\">\n<td>nameable</td>\n<td>Includes id, name, shortName, code, description, created and lastUpdated fields</td>\n</tr>\n<tr class=\"odd\">\n<td>persisted</td>\n<td>Returns all persisted property on a object, does not take into consideration if the object is the owner of the relation.</td>\n</tr>\n<tr class=\"even\">\n<td>owner</td>\n<td>Returns all persisted property on a object where the object is the owner of all properties, this payload can be used to update through the web-api.</td>\n</tr>\n</tbody>\n</table>\n\n**Example**: Include all fields from dataSets except organisationUnits:\n\n    /api/26/dataSets?fields=:all,!organisationUnits\n\n**Example**: Include only id, name and the collection of organisation units from a data set, but exclude the id from organisation\n    units:\n\n    /api/26/dataSets/BfMAe6Itzgt?fields=id,name,organisationUnits[:all,!id]\n\n**Example**: Include nameable properties from all indicators:\n\n    /api/26/indicators.json?fields=:nameable\n\n### Field transformers\n\n<!--DHIS2-SECTION-ID:webapi_field_transformers-->\n\nIn DHIS2.17 we introduced field transformers, the idea is to allow further customization of the properties on the server side.\n\n    /api/26/dataElements/ID?fields=id~rename(i),name~rename(n)\n\nThis will rename the *id* property to *i* and *name* property to *n*.\n\nMultiple transformers can be used by repeating the transformer\n    syntax:\n\n    /api/26/dataElementGroups.json?fields=id,displayName,dataElements~isNotEmpty~rename(haveDataElements)\n\n<table>\n<caption>Available Transformers</caption>\n<colgroup>\n<col style=\"width: 33%\" />\n<col style=\"width: 21%\" />\n<col style=\"width: 44%\" />\n</colgroup>\n<thead>\n<tr class=\"header\">\n<th>Name</th>\n<th>Arguments</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"odd\">\n<td>size</td>\n<td></td>\n<td>Gives sizes of strings (length) and collections</td>\n</tr>\n<tr class=\"even\">\n<td>isEmpty</td>\n<td></td>\n<td>Is string or collection empty</td>\n</tr>\n<tr class=\"odd\">\n<td>isNotEmpty</td>\n<td></td>\n<td>Is string or collection not empty</td>\n</tr>\n<tr class=\"even\">\n<td>rename</td>\n<td>Arg1: name</td>\n<td>Renames the property name</td>\n</tr>\n<tr class=\"odd\">\n<td>paging</td>\n<td>Arg1: page,Arg2: pageSize</td>\n<td>Pages a collection, default pageSize is 50.</td>\n</tr>\n</tbody>\n</table>\n\n#### Examples\n\n<!--DHIS2-SECTION-ID:webapi_field_transformers_examples-->\n\nExamples of transformer\n    usage.\n\n    /api/26/dataElements?fields=dataSets~size\n\n    /api/26/dataElements?fields=dataSets~isEmpty\n\n    /api/26/dataElements?fields=dataSets~isNotEmpty\n\n    /api/26/dataElements/ID?fields=id~rename(i),name~rename(n)\n\n    /api/26/dataElementGroups?fields=id,displayName,dataElements~paging(1;20)\n\n## Metadata create, read, update, delete, validate\n\n<!--DHIS2-SECTION-ID:webapi_metadata_crud-->\n\nWhile some of the web-api endpoints already contains support for CRUD\n(create, read, update, delete), from version 2.15 this is now supported on all endpoints. It should work as you expect, and the subsections will give more detailed information about create, update, and delete (read is already covered elsewhere, and have been supported for a long time).\n\n### Create / update parameters\n\n<!--DHIS2-SECTION-ID:webapi_metadata_create_update-->\n\nThe following query parameters are available for customizing your request.\n\n<table>\n<caption>Available Query Filters</caption>\n<thead>\n<tr class=\"header\">\n<th>Param</th>\n<th>Type</th>\n<th>Required</th>\n<th>Options (default first)</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr class=\"odd\">\n<td>preheatCache</td>\n<td>boolean</td>\n<td>false</td>\n<td>true | false</td>\n<td>Turn cache-map preheating on/off. This is on by default, turning this off will make initial load time for importer much shorter (but will make the import itself slower). This is mostly used for cases where you have a small XML/JSON file you want to import, and don't want to wait for cache-map preheating.</td>\n</tr>\n<tr class=\"even\">\n<td>strategy</td>\n<td>enum</td>\n<td>false</td>\n<td>CREATE_AND_UPDATE | CREATE | UPDATE | DELETE</td>\n<td>Import strategy to use, see below for more information.</td>\n</tr>\n<tr class=\"odd\">\n<td>mergeMode</td>\n<td>enum</td>\n<td>false</td>\n<td>REPLACE, MERGE</td>\n<td>Strategy for merging of objects when doing updates. REPLACE will just overwrite the property with the new value provided, MERGE will only set the property if its not null (only if the property was provided).</td>\n</tr>\n</tbody>\n</table>\n\n",
    "termsOfService": "",
    "title": "DHIS2 API",
    "version": "2.33",
    "x-logo": {
      "url": "dhis2_logo.png"
    }
  },
  "openapi": "3.0.1",
  "paths": {
    "/analyticsTableHooks": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/paging"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "analyticsTableHooks": {
                      "items": {
                        "$ref": "#/components/schemas/analyticsTableHook"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list analyticsTableHooks [DRAFT]",
        "tags": [
          "analyticsTableHooks"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/analyticsTableHook"
              }
            }
          }
        },
        "responses": {
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"hbhB6iuLBNg\",\n    \"klass\": \"org.hisp.dhis.analytics.AnalyticsTableHook\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `sql`.\",\n        \"mainKlass\": \"org.hisp.dhis.analytics.AnalyticsTableHook\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"sql\",\n        \"errorCode\": \"E4000\"\n      },\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.analytics.AnalyticsTableHook\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot construct instance of `org.hisp.dhis.user.User` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('t96BxbxUlhT')\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 376] (through reference chain: org.hisp.dhis.analytics.AnalyticsTableHook[\\\"lastUpdatedBy\\\"])\"\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create a new analyticsTableHook [DRAFT]",
        "tags": [
          "analyticsTableHooks"
        ]
      }
    },
    "/analyticsTableHooks/{id}": {
      "delete": {
        "operationId": "deleteAnalyticsTableHook",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.analyticsTableHook.AnalyticsTableHook",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "AnalyticsTableHook with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a analyticsTableHook by ID [DRAFT]",
        "tags": [
          "analyticsTableHooks"
        ]
      },
      "get": {
        "operationId": "getAnalyticsTableHook",
        "parameters": [
          {
            "$ref": "#/components/parameters/field"
          },
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/analyticsTableHook"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "AnalyticsTableHook with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a analyticsTableHook by ID [DRAFT]",
        "tags": [
          "analyticsTableHooks"
        ]
      },
      "put": {
        "operationId": "updateAnalyticsTableHook",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/analyticsTableHook"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.analyticsTableHook.AnalyticsTableHook",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "AnalyticsTableHook with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.analyticsTableHook.AnalyticsTableHook",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (AnalyticsTableHook)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.analyticsTableHook.AnalyticsTableHook",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a analyticsTableHook [DRAFT]",
        "tags": [
          "analyticsTableHooks"
        ]
      }
    },
    "/attributes": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/paging"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "attributes": {
                      "items": {
                        "$ref": "#/components/schemas/attribute"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list attributes [DRAFT]",
        "tags": [
          "attributes"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/attribute"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Created\",\n  \"httpStatusCode\": 201,\n  \"status\": \"OK\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"BmcyCd9RZre\",\n    \"klass\": \"org.hisp.dhis.attribute.Attribute\"\n  }\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Created"
          },
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"RKr6w5VWRlb\",\n    \"klass\": \"org.hisp.dhis.attribute.Attribute\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `valueType`.\",\n        \"mainKlass\": \"org.hisp.dhis.attribute.Attribute\",\n        \"errorKlass\": \"org.hisp.dhis.common.ValueType\",\n        \"errorProperty\": \"valueType\",\n        \"errorCode\": \"E4000\"\n      },\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.attribute.Attribute\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot construct instance of `org.hisp.dhis.user.User` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('uOTUuk7PTPw')\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 2172] (through reference chain: org.hisp.dhis.attribute.Attribute[\\\"lastUpdatedBy\\\"])\"\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create a new attribute [DRAFT]",
        "tags": [
          "attributes"
        ]
      }
    },
    "/attributes/{id}": {
      "delete": {
        "operationId": "deleteAttribute",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.attribute.Attribute",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Attribute with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a attribute by ID [DRAFT]",
        "tags": [
          "attributes"
        ]
      },
      "get": {
        "operationId": "getAttribute",
        "parameters": [
          {
            "$ref": "#/components/parameters/field"
          },
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/attribute"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Attribute with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a attribute by ID [DRAFT]",
        "tags": [
          "attributes"
        ]
      },
      "put": {
        "operationId": "updateAttribute",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/attribute"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.attribute.Attribute",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Attribute with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.attribute.Attribute",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (Attribute)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.attribute.Attribute",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a attribute [DRAFT]",
        "tags": [
          "attributes"
        ]
      }
    },
    "/categories": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/paging"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "categories": {
                      "items": {
                        "$ref": "#/components/schemas/category"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list categories [DRAFT]",
        "tags": [
          "categories"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/category"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Created\",\n  \"httpStatusCode\": 201,\n  \"status\": \"OK\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"KgIUskU3QgG\",\n    \"klass\": \"org.hisp.dhis.category.Category\"\n  }\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Created"
          },
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"JzLiF32TJef\",\n    \"klass\": \"org.hisp.dhis.category.Category\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `dataDimensionType`.\",\n        \"mainKlass\": \"org.hisp.dhis.category.Category\",\n        \"errorKlass\": \"org.hisp.dhis.common.DataDimensionType\",\n        \"errorProperty\": \"dataDimensionType\",\n        \"errorCode\": \"E4000\"\n      },\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.category.Category\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot construct instance of `org.hisp.dhis.user.User` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('eKgFB8X5Npv')\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 2022] (through reference chain: org.hisp.dhis.category.Category[\\\"lastUpdatedBy\\\"])\"\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create a new category [DRAFT]",
        "tags": [
          "categories"
        ]
      }
    },
    "/categories/{id}": {
      "delete": {
        "operationId": "deleteCategory",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.category.Category",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Category with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a category by ID [DRAFT]",
        "tags": [
          "categories"
        ]
      },
      "get": {
        "operationId": "getCategory",
        "parameters": [
          {
            "$ref": "#/components/parameters/field"
          },
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/category"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Category with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a category by ID [DRAFT]",
        "tags": [
          "categories"
        ]
      },
      "put": {
        "operationId": "updateCategory",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/category"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.category.Category",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Category with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.category.Category",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (Category)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.category.Category",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a category [DRAFT]",
        "tags": [
          "categories"
        ]
      }
    },
    "/categoryCombos": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/paging"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "categoryCombos": {
                      "items": {
                        "$ref": "#/components/schemas/categoryCombo"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list categoryCombos [DRAFT]",
        "tags": [
          "categoryCombos"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/categoryCombo"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Created\",\n  \"httpStatusCode\": 201,\n  \"status\": \"OK\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"Ke9zChWXAGY\",\n    \"klass\": \"org.hisp.dhis.category.CategoryCombo\"\n  }\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Created"
          },
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"KOwQZ5Ru6SF\",\n    \"klass\": \"org.hisp.dhis.category.CategoryCombo\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `dataDimensionType`.\",\n        \"mainKlass\": \"org.hisp.dhis.category.CategoryCombo\",\n        \"errorKlass\": \"org.hisp.dhis.common.DataDimensionType\",\n        \"errorProperty\": \"dataDimensionType\",\n        \"errorCode\": \"E4000\"\n      },\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.category.CategoryCombo\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot construct instance of `org.hisp.dhis.user.User` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('cwABtSoZklJ')\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 752] (through reference chain: org.hisp.dhis.category.CategoryCombo[\\\"lastUpdatedBy\\\"])\"\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create a new categoryCombo [DRAFT]",
        "tags": [
          "categoryCombos"
        ]
      }
    },
    "/categoryCombos/{id}": {
      "delete": {
        "operationId": "deleteCategoryCombo",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.categoryCombo.CategoryCombo",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "CategoryCombo with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a categoryCombo by ID [DRAFT]",
        "tags": [
          "categoryCombos"
        ]
      },
      "get": {
        "operationId": "getCategoryCombo",
        "parameters": [
          {
            "$ref": "#/components/parameters/field"
          },
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/categoryCombo"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "CategoryCombo with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a categoryCombo by ID [DRAFT]",
        "tags": [
          "categoryCombos"
        ]
      },
      "put": {
        "operationId": "updateCategoryCombo",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/categoryCombo"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.categoryCombo.CategoryCombo",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "CategoryCombo with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.categoryCombo.CategoryCombo",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (CategoryCombo)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.categoryCombo.CategoryCombo",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a categoryCombo [DRAFT]",
        "tags": [
          "categoryCombos"
        ]
      }
    },
    "/categoryOptionCombos": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/paging"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "categoryOptionCombos": {
                      "items": {
                        "$ref": "#/components/schemas/categoryOptionCombo"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list categoryOptionCombos [DRAFT]",
        "tags": [
          "categoryOptionCombos"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/categoryOptionCombo"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Created\",\n  \"httpStatusCode\": 201,\n  \"status\": \"OK\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"vRBS8lUGHHN\",\n    \"klass\": \"org.hisp.dhis.category.CategoryOptionCombo\"\n  }\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Created"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot construct instance of `org.hisp.dhis.category.CategoryCombo` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('68Xv1cxEKZb')\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 176] (through reference chain: org.hisp.dhis.category.CategoryOptionCombo[\\\"categoryCombo\\\"])\"\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create categoryOptionCombos [DRAFT]",
        "tags": [
          "categoryOptionCombos"
        ]
      }
    },
    "/categoryOptionCombos/{id}": {
      "delete": {
        "operationId": "deleteCategoryOptionCombo",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.categoryOptionCombo.CategoryOptionCombo",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "CategoryOptionCombo with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a categoryOptionCombo by ID [DRAFT]",
        "tags": [
          "categoryOptionCombos"
        ]
      },
      "get": {
        "operationId": "getCategoryOptionCombo",
        "parameters": [
          {
            "$ref": "#/components/parameters/field"
          },
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/categoryOptionCombo"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "CategoryOptionCombo with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a categoryOptionCombo by ID [DRAFT]",
        "tags": [
          "categoryOptionCombos"
        ]
      },
      "put": {
        "operationId": "updateCategoryOptionCombo",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/categoryOptionCombo"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.categoryOptionCombo.CategoryOptionCombo",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "CategoryOptionCombo with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.categoryOptionCombo.CategoryOptionCombo",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (CategoryOptionCombo)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.categoryOptionCombo.CategoryOptionCombo",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a categoryOptionCombo [DRAFT]",
        "tags": [
          "categoryOptionCombos"
        ]
      }
    },
    "/categoryOptionGroupSets": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/paging"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "categoryOptionGroupSets": {
                      "items": {
                        "$ref": "#/components/schemas/categoryOptionGroupSet"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list categoryOptionGroupSets [DRAFT]",
        "tags": [
          "categoryOptionGroupSets"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/categoryOptionGroupSet"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Created\",\n  \"httpStatusCode\": 201,\n  \"status\": \"OK\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"OgYz24oCb5D\",\n    \"klass\": \"org.hisp.dhis.category.CategoryOptionGroupSet\"\n  }\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Created"
          },
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"xkwzZEGxZUI\",\n    \"klass\": \"org.hisp.dhis.category.CategoryOptionGroupSet\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.category.CategoryOptionGroupSet\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot construct instance of `org.hisp.dhis.user.User` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('61my2pep9vD')\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 1955] (through reference chain: org.hisp.dhis.category.CategoryOptionGroupSet[\\\"lastUpdatedBy\\\"])\"\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create categoryOptionGroupSets [DRAFT]",
        "tags": [
          "categoryOptionGroupSets"
        ]
      }
    },
    "/categoryOptionGroupSets/{id}": {
      "delete": {
        "operationId": "deleteCategoryOptionGroupSet",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.categoryOptionGroupSet.CategoryOptionGroupSet",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "CategoryOptionGroupSet with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a categoryOptionGroupSet by ID [DRAFT]",
        "tags": [
          "categoryOptionGroupSets"
        ]
      },
      "get": {
        "operationId": "getCategoryOptionGroupSet",
        "parameters": [
          {
            "$ref": "#/components/parameters/field"
          },
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/categoryOptionGroupSet"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "CategoryOptionGroupSet with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a categoryOptionGroupSet by ID [DRAFT]",
        "tags": [
          "categoryOptionGroupSets"
        ]
      },
      "put": {
        "operationId": "updateCategoryOptionGroupSet",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/categoryOptionGroupSet"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.categoryOptionGroupSet.CategoryOptionGroupSet",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "CategoryOptionGroupSet with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.categoryOptionGroupSet.CategoryOptionGroupSet",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (CategoryOptionGroupSet)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.categoryOptionGroupSet.CategoryOptionGroupSet",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a categoryOptionGroupSet [DRAFT]",
        "tags": [
          "categoryOptionGroupSets"
        ]
      }
    },
    "/categoryOptionGroups": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/paging"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "categoryOptionGroups": {
                      "items": {
                        "$ref": "#/components/schemas/categoryOptionGroup"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list categoryOptionGroups [DRAFT]",
        "tags": [
          "categoryOptionGroups"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/categoryOptionGroup"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Created\",\n  \"httpStatusCode\": 201,\n  \"status\": \"OK\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"M81r3DI4jXZ\",\n    \"klass\": \"org.hisp.dhis.category.CategoryOptionGroup\"\n  }\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Created"
          },
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"NUnqfGnwXej\",\n    \"klass\": \"org.hisp.dhis.category.CategoryOptionGroup\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.category.CategoryOptionGroup\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      },\n      {\n        \"message\": \"Missing required property `shortName`.\",\n        \"mainKlass\": \"org.hisp.dhis.category.CategoryOptionGroup\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"shortName\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot construct instance of `org.hisp.dhis.user.User` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('fmvtKJg3axs')\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 1648] (through reference chain: org.hisp.dhis.category.CategoryOptionGroup[\\\"lastUpdatedBy\\\"])\"\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create categoryOptionGroups [DRAFT]",
        "tags": [
          "categoryOptionGroups"
        ]
      }
    },
    "/categoryOptionGroups/{id}": {
      "delete": {
        "operationId": "deleteCategoryOptionGroup",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.categoryOptionGroup.CategoryOptionGroup",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "CategoryOptionGroup with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a categoryOptionGroup by ID [DRAFT]",
        "tags": [
          "categoryOptionGroups"
        ]
      },
      "get": {
        "operationId": "getCategoryOptionGroup",
        "parameters": [
          {
            "$ref": "#/components/parameters/field"
          },
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/categoryOptionGroup"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "CategoryOptionGroup with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a categoryOptionGroup by ID [DRAFT]",
        "tags": [
          "categoryOptionGroups"
        ]
      },
      "put": {
        "operationId": "updateCategoryOptionGroup",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/categoryOptionGroup"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.categoryOptionGroup.CategoryOptionGroup",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "CategoryOptionGroup with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.categoryOptionGroup.CategoryOptionGroup",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (CategoryOptionGroup)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.categoryOptionGroup.CategoryOptionGroup",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a categoryOptionGroup [DRAFT]",
        "tags": [
          "categoryOptionGroups"
        ]
      }
    },
    "/categoryOptions": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/paging"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "categoryOptions": {
                      "items": {
                        "$ref": "#/components/schemas/categoryOption"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list categoryOptions [DRAFT]",
        "tags": [
          "categoryOptions"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/categoryOption"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Created\",\n  \"httpStatusCode\": 201,\n  \"status\": \"OK\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"rQr1cy0BA4l\",\n    \"klass\": \"org.hisp.dhis.category.CategoryOption\"\n  }\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Created"
          },
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"zbYGfR1961S\",\n    \"klass\": \"org.hisp.dhis.category.CategoryOption\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.category.CategoryOption\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot construct instance of `org.hisp.dhis.user.User` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('8rUiXsLeSYz')\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 1697] (through reference chain: org.hisp.dhis.category.CategoryOption[\\\"lastUpdatedBy\\\"])\"\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create categoryOptions [DRAFT]",
        "tags": [
          "categoryOptions"
        ]
      }
    },
    "/categoryOptions/{id}": {
      "delete": {
        "operationId": "deleteCategoryOption",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.categoryOption.CategoryOption",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "CategoryOption with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a categoryOption by ID [DRAFT]",
        "tags": [
          "categoryOptions"
        ]
      },
      "get": {
        "operationId": "getCategoryOption",
        "parameters": [
          {
            "$ref": "#/components/parameters/field"
          },
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/categoryOption"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "CategoryOption with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a categoryOption by ID [DRAFT]",
        "tags": [
          "categoryOptions"
        ]
      },
      "put": {
        "operationId": "updateCategoryOption",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/categoryOption"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.categoryOption.CategoryOption",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "CategoryOption with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.categoryOption.CategoryOption",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (CategoryOption)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.categoryOption.CategoryOption",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a categoryOption [DRAFT]",
        "tags": [
          "categoryOptions"
        ]
      }
    },
    "/charts": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/paging"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "charts": {
                      "items": {
                        "$ref": "#/components/schemas/chart"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list charts [DRAFT]",
        "tags": [
          "charts"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/chart"
              }
            }
          }
        },
        "responses": {
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"WfBc3kud6K0\",\n    \"klass\": \"org.hisp.dhis.chart.Chart\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `type`.\",\n        \"mainKlass\": \"org.hisp.dhis.chart.Chart\",\n        \"errorKlass\": \"org.hisp.dhis.chart.ChartType\",\n        \"errorProperty\": \"type\",\n        \"errorCode\": \"E4000\"\n      },\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.chart.Chart\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"could not execute statement\"\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create charts [DRAFT]",
        "tags": [
          "charts"
        ]
      }
    },
    "/charts/{id}": {
      "delete": {
        "operationId": "deleteChart",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.chart.Chart",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Chart with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a chart by ID [DRAFT]",
        "tags": [
          "charts"
        ]
      },
      "get": {
        "operationId": "getChart",
        "parameters": [
          {
            "$ref": "#/components/parameters/field"
          },
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/chart"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Chart with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a chart by ID [DRAFT]",
        "tags": [
          "charts"
        ]
      },
      "put": {
        "operationId": "updateChart",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/chart"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.chart.Chart",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Chart with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.chart.Chart",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (Chart)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.chart.Chart",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a chart [DRAFT]",
        "tags": [
          "charts"
        ]
      }
    },
    "/colorSets": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/paging"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "colorSets": {
                      "items": {
                        "$ref": "#/components/schemas/colorSet"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list colorSets [DRAFT]",
        "tags": [
          "colorSets"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/colorSet"
              }
            }
          }
        },
        "responses": {
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"v6eEJ0pnZim\",\n    \"klass\": \"org.hisp.dhis.color.ColorSet\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.color.ColorSet\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot construct instance of `org.hisp.dhis.user.User` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('cqfvkSUT0r6')\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 357] (through reference chain: org.hisp.dhis.color.ColorSet[\\\"lastUpdatedBy\\\"])\"\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create colorSets [DRAFT]",
        "tags": [
          "colorSets"
        ]
      }
    },
    "/colorSets/{id}": {
      "delete": {
        "operationId": "deleteColorSet",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.colorSet.ColorSet",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ColorSet with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a colorSet by ID [DRAFT]",
        "tags": [
          "colorSets"
        ]
      },
      "get": {
        "operationId": "getColorSet",
        "parameters": [
          {
            "$ref": "#/components/parameters/field"
          },
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/colorSet"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ColorSet with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a colorSet by ID [DRAFT]",
        "tags": [
          "colorSets"
        ]
      },
      "put": {
        "operationId": "updateColorSet",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/colorSet"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.colorSet.ColorSet",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ColorSet with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.colorSet.ColorSet",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (ColorSet)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.colorSet.ColorSet",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a colorSet [DRAFT]",
        "tags": [
          "colorSets"
        ]
      }
    },
    "/constants": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/paging"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "constants": {
                      "items": {
                        "$ref": "#/components/schemas/constant"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "#/components/schemas/pagination"
                    }
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list constants [DRAFT]",
        "tags": [
          "constants"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/constant"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Created\",\n  \"httpStatusCode\": 201,\n  \"status\": \"OK\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"qSJPEij3GeE\",\n    \"klass\": \"org.hisp.dhis.constant.Constant\"\n  }\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Created"
          },
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"qpMBRK8Zn7Z\",\n    \"klass\": \"org.hisp.dhis.constant.Constant\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.constant.Constant\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot construct instance of `org.hisp.dhis.user.User` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('wUU0YNGGnsR')\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 1439] (through reference chain: org.hisp.dhis.constant.Constant[\\\"lastUpdatedBy\\\"])\"\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create constants [DRAFT]",
        "tags": [
          "constants"
        ]
      }
    },
    "/constants/{id}": {
      "delete": {
        "operationId": "deleteConstant",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.constant.Constant",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Constant with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a constant by ID [DRAFT]",
        "tags": [
          "constants"
        ]
      },
      "get": {
        "operationId": "getConstant",
        "parameters": [
          {
            "$ref": "#/components/parameters/field"
          },
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/constant"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Constant with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a constant by ID [DRAFT]",
        "tags": [
          "constants"
        ]
      },
      "put": {
        "operationId": "updateConstant",
        "parameters": [
          {
            "description": "unique id of the element in the system.",
            "in": "path",
            "name": "id",
            "schema": {
              "$ref": "#/components/schemas/uid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/constant"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.constant.Constant",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Constant with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.constant.Constant",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (Constant)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.constant.Constant",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Internal Server Error",
                  "httpStatusCode": 500,
                  "message": "Can not construct instance of double from String value (\"haha\"): not a valid Double value\n at [Source: org.apache.catalina.connector.CoyoteInputStream@4bc73863; line: 11, column: 9] (through reference chain: org.hisp.dhis.constant.Constant[\"value\"])",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a constant [DRAFT]",
        "tags": [
          "constants"
        ]
      }
    },
    "/dashboardItems": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/paging"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "dashboardItems": {
                      "items": {
                        "$ref": "#/components/schemas/dashboardItem"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list dashboardItems [DRAFT]",
        "tags": [
          "dashboardItems"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dashboardItem"
              }
            }
          }
        },
        "responses": {
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"ObjectReport is required to be non-null.\"\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create dashboardItems [DRAFT]",
        "tags": [
          "dashboardItems"
        ]
      }
    },
    "/dashboardItems/{id}": {
      "delete": {
        "operationId": "deleteDashboardItem",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.dashboardItem.DashboardItem",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "DashboardItem with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a dashboardItem by ID [DRAFT]",
        "tags": [
          "dashboardItems"
        ]
      },
      "get": {
        "operationId": "getDashboardItem",
        "parameters": [
          {
            "$ref": "#/components/parameters/field"
          },
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dashboardItem"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "DashboardItem with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a dashboardItem by ID [DRAFT]",
        "tags": [
          "dashboardItems"
        ]
      },
      "put": {
        "operationId": "updateDashboardItem",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dashboardItem"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.dashboardItem.DashboardItem",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "DashboardItem with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.dashboardItem.DashboardItem",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (DashboardItem)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.dashboardItem.DashboardItem",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a dashboardItem [DRAFT]",
        "tags": [
          "dashboardItems"
        ]
      }
    },
    "/dashboards": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/paging"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "dashboards": {
                      "items": {
                        "$ref": "#/components/schemas/dashboard"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list dashboards [DRAFT]",
        "tags": [
          "dashboards"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dashboard"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Created\",\n  \"httpStatusCode\": 201,\n  \"status\": \"OK\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"QP9quWHu0MN\",\n    \"klass\": \"org.hisp.dhis.dashboard.Dashboard\"\n  }\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Created"
          },
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"P2jWt3g97xr\",\n    \"klass\": \"org.hisp.dhis.dashboard.Dashboard\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.dashboard.Dashboard\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot construct instance of `org.hisp.dhis.user.User` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('UUE0Mnkopq9')\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 1473] (through reference chain: org.hisp.dhis.dashboard.Dashboard[\\\"lastUpdatedBy\\\"])\"\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create dashboards [DRAFT]",
        "tags": [
          "dashboards"
        ]
      }
    },
    "/dashboards/{id}": {
      "delete": {
        "operationId": "deleteDashboard",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.dashboard.Dashboard",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Dashboard with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a dashboard by ID [DRAFT]",
        "tags": [
          "dashboards"
        ]
      },
      "get": {
        "operationId": "getDashboard",
        "parameters": [
          {
            "$ref": "#/components/parameters/field"
          },
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dashboard"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Dashboard with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a dashboard by ID [DRAFT]",
        "tags": [
          "dashboards"
        ]
      },
      "put": {
        "operationId": "updateDashboard",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dashboard"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.dashboard.Dashboard",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Dashboard with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.dashboard.Dashboard",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (Dashboard)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.dashboard.Dashboard",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a dashboard [DRAFT]",
        "tags": [
          "dashboards"
        ]
      }
    },
    "/dataApprovalLevels": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/paging"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "dataApprovalLevels": {
                      "items": {
                        "$ref": "#/components/schemas/dataApprovalLevel"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list dataApprovalLevels [DRAFT]",
        "tags": [
          "dataApprovalLevels"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dataApprovalLevel"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Created\",\n  \"httpStatusCode\": 201,\n  \"status\": \"OK\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"narp5la6Ifr\",\n    \"klass\": \"org.hisp.dhis.dataapproval.DataApprovalLevel\"\n  }\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Created"
          },
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"di1K5SerMWO\",\n    \"klass\": \"org.hisp.dhis.dataapproval.DataApprovalLevel\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.dataapproval.DataApprovalLevel\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot construct instance of `org.hisp.dhis.category.CategoryOptionGroupSet` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('X5uYLe7aShT')\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 158] (through reference chain: org.hisp.dhis.dataapproval.DataApprovalLevel[\\\"categoryOptionGroupSet\\\"])\"\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create dataApprovalLevels [DRAFT]",
        "tags": [
          "dataApprovalLevels"
        ]
      }
    },
    "/dataApprovalLevels/{id}": {
      "delete": {
        "operationId": "deleteDataApprovalLevel",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.dataApprovalLevel.DataApprovalLevel",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "DataApprovalLevel with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a dataApprovalLevel by ID [DRAFT]",
        "tags": [
          "dataApprovalLevels"
        ]
      },
      "get": {
        "operationId": "getDataApprovalLevel",
        "parameters": [
          {
            "$ref": "#/components/parameters/field"
          },
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dataApprovalLevel"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "DataApprovalLevel with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a dataApprovalLevel by ID [DRAFT]",
        "tags": [
          "dataApprovalLevels"
        ]
      },
      "put": {
        "operationId": "updateDataApprovalLevel",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dataApprovalLevel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.dataApprovalLevel.DataApprovalLevel",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "DataApprovalLevel with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.dataApprovalLevel.DataApprovalLevel",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (DataApprovalLevel)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.dataApprovalLevel.DataApprovalLevel",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a dataApprovalLevel [DRAFT]",
        "tags": [
          "dataApprovalLevels"
        ]
      }
    },
    "/dataApprovalWorkflows": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/paging"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "dataApprovalWorkflows": {
                      "items": {
                        "$ref": "#/components/schemas/dataApprovalWorkflow"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list dataApprovalWorkflows [DRAFT]",
        "tags": [
          "dataApprovalWorkflows"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dataApprovalWorkflow"
              }
            }
          }
        },
        "responses": {
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"JonbbNZzh0o\",\n    \"klass\": \"org.hisp.dhis.dataapproval.DataApprovalWorkflow\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `periodType`.\",\n        \"mainKlass\": \"org.hisp.dhis.dataapproval.DataApprovalWorkflow\",\n        \"errorKlass\": \"org.hisp.dhis.period.PeriodType\",\n        \"errorProperty\": \"periodType\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot construct instance of `org.hisp.dhis.category.CategoryCombo` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('fHjK3Ttf8R9')\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 149] (through reference chain: org.hisp.dhis.dataapproval.DataApprovalWorkflow[\\\"categoryCombo\\\"])\"\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create dataApprovalWorkflows [DRAFT]",
        "tags": [
          "dataApprovalWorkflows"
        ]
      }
    },
    "/dataApprovalWorkflows/{id}": {
      "delete": {
        "operationId": "deleteDataApprovalWorkflow",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.dataApprovalWorkflow.DataApprovalWorkflow",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "DataApprovalWorkflow with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a dataApprovalWorkflow by ID [DRAFT]",
        "tags": [
          "dataApprovalWorkflows"
        ]
      },
      "get": {
        "operationId": "getDataApprovalWorkflow",
        "parameters": [
          {
            "$ref": "#/components/parameters/field"
          },
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dataApprovalWorkflow"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "DataApprovalWorkflow with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a dataApprovalWorkflow by ID [DRAFT]",
        "tags": [
          "dataApprovalWorkflows"
        ]
      },
      "put": {
        "operationId": "updateDataApprovalWorkflow",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dataApprovalWorkflow"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.dataApprovalWorkflow.DataApprovalWorkflow",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "DataApprovalWorkflow with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.dataApprovalWorkflow.DataApprovalWorkflow",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (DataApprovalWorkflow)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.dataApprovalWorkflow.DataApprovalWorkflow",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a dataApprovalWorkflow [DRAFT]",
        "tags": [
          "dataApprovalWorkflows"
        ]
      }
    },
    "/dataElementGroupSets": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/paging"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "dataElementGroupSets": {
                      "items": {
                        "$ref": "#/components/schemas/dataElementGroupSet"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list dataElementGroupSets [DRAFT]",
        "tags": [
          "dataElementGroupSets"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dataElementGroupSet"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Created\",\n  \"httpStatusCode\": 201,\n  \"status\": \"OK\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"oB2VgFRz9nt\",\n    \"klass\": \"org.hisp.dhis.dataelement.DataElementGroupSet\"\n  }\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Created"
          },
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"vBMN5RtxikY\",\n    \"klass\": \"org.hisp.dhis.dataelement.DataElementGroupSet\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.dataelement.DataElementGroupSet\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot construct instance of `org.hisp.dhis.user.User` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('mgQdecI28PZ')\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 1923] (through reference chain: org.hisp.dhis.dataelement.DataElementGroupSet[\\\"lastUpdatedBy\\\"])\"\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create dataElementGroupSets [DRAFT]",
        "tags": [
          "dataElementGroupSets"
        ]
      }
    },
    "/dataElementGroupSets/{id}": {
      "delete": {
        "operationId": "deleteDataElementGroupSet",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.dataElementGroupSet.DataElementGroupSet",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "DataElementGroupSet with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a dataElementGroupSet by ID [DRAFT]",
        "tags": [
          "dataElementGroupSets"
        ]
      },
      "get": {
        "operationId": "getDataElementGroupSet",
        "parameters": [
          {
            "$ref": "#/components/parameters/field"
          },
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dataElementGroupSet"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "DataElementGroupSet with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a dataElementGroupSet by ID [DRAFT]",
        "tags": [
          "dataElementGroupSets"
        ]
      },
      "put": {
        "operationId": "updateDataElementGroupSet",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dataElementGroupSet"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.dataElementGroupSet.DataElementGroupSet",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "DataElementGroupSet with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.dataElementGroupSet.DataElementGroupSet",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (DataElementGroupSet)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.dataElementGroupSet.DataElementGroupSet",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a dataElementGroupSet [DRAFT]",
        "tags": [
          "dataElementGroupSets"
        ]
      }
    },
    "/dataElementGroups": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/paging"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "dataElementGroups": {
                      "items": {
                        "$ref": "#/components/schemas/dataElementGroup"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list dataElementGroups [DRAFT]",
        "tags": [
          "dataElementGroups"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dataElementGroup"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Created\",\n  \"httpStatusCode\": 201,\n  \"status\": \"OK\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"HxHi37S9dsI\",\n    \"klass\": \"org.hisp.dhis.dataelement.DataElementGroup\"\n  }\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Created"
          },
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"vEYLsrEIpJk\",\n    \"klass\": \"org.hisp.dhis.dataelement.DataElementGroup\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.dataelement.DataElementGroup\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot construct instance of `org.hisp.dhis.user.User` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('VuIwAwx7aOa')\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 1613] (through reference chain: org.hisp.dhis.dataelement.DataElementGroup[\\\"lastUpdatedBy\\\"])\"\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create dataElementGroups [DRAFT]",
        "tags": [
          "dataElementGroups"
        ]
      }
    },
    "/dataElementGroups/{id}": {
      "delete": {
        "operationId": "deleteDataElementGroup",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.dataElementGroup.DataElementGroup",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "DataElementGroup with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a dataElementGroup by ID [DRAFT]",
        "tags": [
          "dataElementGroups"
        ]
      },
      "get": {
        "operationId": "getDataElementGroup",
        "parameters": [
          {
            "$ref": "#/components/parameters/field"
          },
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dataElementGroup"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "DataElementGroup with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a dataElementGroup by ID [DRAFT]",
        "tags": [
          "dataElementGroups"
        ]
      },
      "put": {
        "operationId": "updateDataElementGroup",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dataElementGroup"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.dataElementGroup.DataElementGroup",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "DataElementGroup with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.dataElementGroup.DataElementGroup",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (DataElementGroup)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.dataElementGroup.DataElementGroup",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a dataElementGroup [DRAFT]",
        "tags": [
          "dataElementGroups"
        ]
      }
    },
    "/dataElementOperands": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/paging"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "dataElementOperands": {
                      "items": {
                        "$ref": "#/components/schemas/dataElementOperand"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list dataElementOperands [DRAFT]",
        "tags": [
          "dataElementOperands"
        ]
      }
    },
    "/dataElementOperands/{id}": {
      "delete": {
        "operationId": "deleteDataElementOperand",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.dataElementOperand.DataElementOperand",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "DataElementOperand with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a dataElementOperand by ID [DRAFT]",
        "tags": [
          "dataElementOperands"
        ]
      },
      "get": {
        "operationId": "getDataElementOperand",
        "parameters": [
          {
            "$ref": "#/components/parameters/field"
          },
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dataElementOperand"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "DataElementOperand with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a dataElementOperand by ID [DRAFT]",
        "tags": [
          "dataElementOperands"
        ]
      },
      "put": {
        "operationId": "updateDataElementOperand",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dataElementOperand"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.dataElementOperand.DataElementOperand",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "DataElementOperand with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.dataElementOperand.DataElementOperand",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (DataElementOperand)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.dataElementOperand.DataElementOperand",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a dataElementOperand [DRAFT]",
        "tags": [
          "dataElementOperands"
        ]
      }
    },
    "/dataElements": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/paging"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "dataElements": {
                      "items": {
                        "$ref": "#/components/schemas/dataElement"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list dataElements [DRAFT]",
        "tags": [
          "dataElements"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dataElement"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Created\",\n  \"httpStatusCode\": 201,\n  \"status\": \"OK\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"ysB31AMO2Ny\",\n    \"klass\": \"org.hisp.dhis.dataelement.DataElement\"\n  }\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Created"
          },
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"hTuLV8aViwb\",\n    \"klass\": \"org.hisp.dhis.dataelement.DataElement\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `aggregationType`.\",\n        \"mainKlass\": \"org.hisp.dhis.dataelement.DataElement\",\n        \"errorKlass\": \"org.hisp.dhis.analytics.AggregationType\",\n        \"errorProperty\": \"aggregationType\",\n        \"errorCode\": \"E4000\"\n      },\n      {\n        \"message\": \"Missing required property `domainType`.\",\n        \"mainKlass\": \"org.hisp.dhis.dataelement.DataElement\",\n        \"errorKlass\": \"org.hisp.dhis.dataelement.DataElementDomain\",\n        \"errorProperty\": \"domainType\",\n        \"errorCode\": \"E4000\"\n      },\n      {\n        \"message\": \"Missing required property `valueType`.\",\n        \"mainKlass\": \"org.hisp.dhis.dataelement.DataElement\",\n        \"errorKlass\": \"org.hisp.dhis.common.ValueType\",\n        \"errorProperty\": \"valueType\",\n        \"errorCode\": \"E4000\"\n      },\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.dataelement.DataElement\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      },\n      {\n        \"message\": \"Missing required property `shortName`.\",\n        \"mainKlass\": \"org.hisp.dhis.dataelement.DataElement\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"shortName\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot deserialize value of type `java.lang.Integer` from String \\\"string\\\": not a valid Integer value\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 24] (through reference chain: org.hisp.dhis.dataelement.DataElement[\\\"aggregationLevels\\\"]->java.util.ArrayList[0])\"\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create dataElements [DRAFT]",
        "tags": [
          "dataElements"
        ]
      }
    },
    "/dataElements/{id}": {
      "delete": {
        "operationId": "deleteDataElement",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.dataElement.DataElement",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "DataElement with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a dataElement by ID [DRAFT]",
        "tags": [
          "dataElements"
        ]
      },
      "get": {
        "operationId": "getDataElement",
        "parameters": [
          {
            "$ref": "#/components/parameters/field"
          },
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dataElement"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "DataElement with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a dataElement by ID [DRAFT]",
        "tags": [
          "dataElements"
        ]
      },
      "put": {
        "operationId": "updateDataElement",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dataElement"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.dataElement.DataElement",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "DataElement with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.dataElement.DataElement",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (DataElement)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.dataElement.DataElement",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a dataElement [DRAFT]",
        "tags": [
          "dataElements"
        ]
      }
    },
    "/dataEntryForms": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/paging"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "dataEntryForms": {
                      "items": {
                        "$ref": "#/components/schemas/dataEntryForm"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list dataEntryForms [DRAFT]",
        "tags": [
          "dataEntryForms"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dataEntryForm"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Created\",\n  \"httpStatusCode\": 201,\n  \"status\": \"OK\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"ihbApqKTY4M\",\n    \"klass\": \"org.hisp.dhis.dataentryform.DataEntryForm\"\n  }\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Created"
          },
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"LNksncAGxXa\",\n    \"klass\": \"org.hisp.dhis.dataentryform.DataEntryForm\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.dataentryform.DataEntryForm\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot deserialize value of type `int` from String \\\"string\\\": not a valid Integer value\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 501] (through reference chain: org.hisp.dhis.dataentryform.DataEntryForm[\\\"format\\\"])\"\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create dataEntryForms [DRAFT]",
        "tags": [
          "dataEntryForms"
        ]
      }
    },
    "/dataEntryForms/{id}": {
      "delete": {
        "operationId": "deleteDataEntryForm",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.dataEntryForm.DataEntryForm",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "DataEntryForm with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a dataEntryForm by ID [DRAFT]",
        "tags": [
          "dataEntryForms"
        ]
      },
      "get": {
        "operationId": "getDataEntryForm",
        "parameters": [
          {
            "$ref": "#/components/parameters/field"
          },
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dataEntryForm"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "DataEntryForm with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a dataEntryForm by ID [DRAFT]",
        "tags": [
          "dataEntryForms"
        ]
      },
      "put": {
        "operationId": "updateDataEntryForm",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dataEntryForm"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.dataEntryForm.DataEntryForm",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "DataEntryForm with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.dataEntryForm.DataEntryForm",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (DataEntryForm)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.dataEntryForm.DataEntryForm",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a dataEntryForm [DRAFT]",
        "tags": [
          "dataEntryForms"
        ]
      }
    },
    "/dataSetNotificationTemplates": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/paging"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "dataSetNotificationTemplates": {
                      "items": {
                        "$ref": "#/components/schemas/dataSetNotificationTemplate"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list dataSetNotificationTemplates [DRAFT]",
        "tags": [
          "dataSetNotificationTemplates"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dataSetNotificationTemplate"
              }
            }
          }
        },
        "responses": {
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"qSf6p6axYWX\",\n    \"klass\": \"org.hisp.dhis.dataset.notifications.DataSetNotificationTemplate\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.dataset.notifications.DataSetNotificationTemplate\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      },\n      {\n        \"message\": \"Missing required property `messageTemplate`.\",\n        \"mainKlass\": \"org.hisp.dhis.dataset.notifications.DataSetNotificationTemplate\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"messageTemplate\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot construct instance of `org.hisp.dhis.user.User` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('oFMvKG6NDJG')\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 436] (through reference chain: org.hisp.dhis.dataset.notifications.DataSetNotificationTemplate[\\\"lastUpdatedBy\\\"])\"\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create dataSetNotificationTemplates [DRAFT]",
        "tags": [
          "dataSetNotificationTemplates"
        ]
      }
    },
    "/dataSetNotificationTemplates/{id}": {
      "delete": {
        "operationId": "deleteDataSetNotificationTemplate",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.dataSetNotificationTemplate.DataSetNotificationTemplate",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "DataSetNotificationTemplate with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a dataSetNotificationTemplate by ID [DRAFT]",
        "tags": [
          "dataSetNotificationTemplates"
        ]
      },
      "get": {
        "operationId": "getDataSetNotificationTemplate",
        "parameters": [
          {
            "$ref": "#/components/parameters/field"
          },
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dataSetNotificationTemplate"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "DataSetNotificationTemplate with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a dataSetNotificationTemplate by ID [DRAFT]",
        "tags": [
          "dataSetNotificationTemplates"
        ]
      },
      "put": {
        "operationId": "updateDataSetNotificationTemplate",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dataSetNotificationTemplate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.dataSetNotificationTemplate.DataSetNotificationTemplate",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "DataSetNotificationTemplate with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.dataSetNotificationTemplate.DataSetNotificationTemplate",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (DataSetNotificationTemplate)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.dataSetNotificationTemplate.DataSetNotificationTemplate",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a dataSetNotificationTemplate [DRAFT]",
        "tags": [
          "dataSetNotificationTemplates"
        ]
      }
    },
    "/dataSets": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/paging"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "dataSets": {
                      "items": {
                        "$ref": "#/components/schemas/dataSet"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list dataSets [DRAFT]",
        "tags": [
          "dataSets"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dataSet"
              }
            }
          }
        },
        "responses": {
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"YrqJX98D8IF\",\n    \"klass\": \"org.hisp.dhis.dataset.DataSet\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `periodType`.\",\n        \"mainKlass\": \"org.hisp.dhis.dataset.DataSet\",\n        \"errorKlass\": \"org.hisp.dhis.period.PeriodType\",\n        \"errorProperty\": \"periodType\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot construct instance of `org.hisp.dhis.category.CategoryCombo` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('sYTzODdgwgE')\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 176] (through reference chain: org.hisp.dhis.dataset.DataSet[\\\"categoryCombo\\\"])\"\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create dataSets [DRAFT]",
        "tags": [
          "dataSets"
        ]
      }
    },
    "/dataSets/{id}": {
      "delete": {
        "operationId": "deleteDataSet",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.dataSet.DataSet",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "DataSet with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a dataSet by ID [DRAFT]",
        "tags": [
          "dataSets"
        ]
      },
      "get": {
        "operationId": "getDataSet",
        "parameters": [
          {
            "$ref": "#/components/parameters/field"
          },
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/dataSet"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "DataSet with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a dataSet by ID [DRAFT]",
        "tags": [
          "dataSets"
        ]
      },
      "put": {
        "operationId": "updateDataSet",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dataSet"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.dataSet.DataSet",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "DataSet with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.dataSet.DataSet",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (DataSet)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.dataSet.DataSet",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a dataSet [DRAFT]",
        "tags": [
          "dataSets"
        ]
      }
    },
    "/documents": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/paging"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "documents": {
                      "items": {
                        "$ref": "#/components/schemas/document"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list documents [DRAFT]",
        "tags": [
          "documents"
        ]
      }
    },
    "/documents/{id}": {
      "delete": {
        "operationId": "deleteDocument",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.document.Document",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Document with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a document by ID [DRAFT]",
        "tags": [
          "documents"
        ]
      },
      "get": {
        "operationId": "getDocument",
        "parameters": [
          {
            "$ref": "#/components/parameters/field"
          },
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/document"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Document with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a document by ID [DRAFT]",
        "tags": [
          "documents"
        ]
      },
      "put": {
        "operationId": "updateDocument",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/document"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.document.Document",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Document with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.document.Document",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (Document)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.document.Document",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a document [DRAFT]",
        "tags": [
          "documents"
        ]
      }
    },
    "/eventCharts": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/paging"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "eventCharts": {
                      "items": {
                        "$ref": "#/components/schemas/eventChart"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list eventCharts [DRAFT]",
        "tags": [
          "eventCharts"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/eventChart"
              }
            }
          }
        },
        "responses": {
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"Ehsl7eSF6m3\",\n    \"klass\": \"org.hisp.dhis.eventchart.EventChart\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `program`.\",\n        \"mainKlass\": \"org.hisp.dhis.eventchart.EventChart\",\n        \"errorKlass\": \"org.hisp.dhis.program.Program\",\n        \"errorProperty\": \"program\",\n        \"errorCode\": \"E4000\"\n      },\n      {\n        \"message\": \"Missing required property `type`.\",\n        \"mainKlass\": \"org.hisp.dhis.eventchart.EventChart\",\n        \"errorKlass\": \"org.hisp.dhis.chart.ChartType\",\n        \"errorProperty\": \"type\",\n        \"errorCode\": \"E4000\"\n      },\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.eventchart.EventChart\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot construct instance of `org.hisp.dhis.program.Program` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('2G6i9MIBZzu')\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 255] (through reference chain: org.hisp.dhis.eventchart.EventChart[\\\"program\\\"])\"\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create eventCharts [DRAFT]",
        "tags": [
          "eventCharts"
        ]
      }
    },
    "/eventCharts/{id}": {
      "delete": {
        "operationId": "deleteEventChart",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.eventChart.EventChart",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "EventChart with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a eventChart by ID [DRAFT]",
        "tags": [
          "eventCharts"
        ]
      },
      "get": {
        "operationId": "getEventChart",
        "parameters": [
          {
            "$ref": "#/components/parameters/field"
          },
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/eventChart"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "EventChart with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a eventChart by ID [DRAFT]",
        "tags": [
          "eventCharts"
        ]
      },
      "put": {
        "operationId": "updateEventChart",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/eventChart"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.eventChart.EventChart",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "EventChart with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.eventChart.EventChart",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (EventChart)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.eventChart.EventChart",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a eventChart [DRAFT]",
        "tags": [
          "eventCharts"
        ]
      }
    },
    "/eventReports": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/paging"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "eventReports": {
                      "items": {
                        "$ref": "#/components/schemas/eventReport"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list eventReports [DRAFT]",
        "tags": [
          "eventReports"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/eventReport"
              }
            }
          }
        },
        "responses": {
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"o47PUwSx71t\",\n    \"klass\": \"org.hisp.dhis.eventreport.EventReport\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `program`.\",\n        \"mainKlass\": \"org.hisp.dhis.eventreport.EventReport\",\n        \"errorKlass\": \"org.hisp.dhis.program.Program\",\n        \"errorProperty\": \"program\",\n        \"errorCode\": \"E4000\"\n      },\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.eventreport.EventReport\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot construct instance of `org.hisp.dhis.program.Program` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('lGA5D9YR7Kj')\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 255] (through reference chain: org.hisp.dhis.eventreport.EventReport[\\\"program\\\"])\"\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create eventReports [DRAFT]",
        "tags": [
          "eventReports"
        ]
      }
    },
    "/eventReports/{id}": {
      "delete": {
        "operationId": "deleteEventReport",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.eventReport.EventReport",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "EventReport with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a eventReport by ID [DRAFT]",
        "tags": [
          "eventReports"
        ]
      },
      "get": {
        "operationId": "getEventReport",
        "parameters": [
          {
            "$ref": "#/components/parameters/field"
          },
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/eventReport"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "EventReport with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a eventReport by ID [DRAFT]",
        "tags": [
          "eventReports"
        ]
      },
      "put": {
        "operationId": "updateEventReport",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/eventReport"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.eventReport.EventReport",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "EventReport with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.eventReport.EventReport",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (EventReport)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.eventReport.EventReport",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a eventReport [DRAFT]",
        "tags": [
          "eventReports"
        ]
      }
    },
    "/externalMapLayers": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/paging"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "externalMapLayers": {
                      "items": {
                        "$ref": "#/components/schemas/externalMapLayer"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list externalMapLayers [DRAFT]",
        "tags": [
          "externalMapLayers"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/externalMapLayer"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Created\",\n  \"httpStatusCode\": 201,\n  \"status\": \"OK\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"rjxbdonmsMQ\",\n    \"klass\": \"org.hisp.dhis.mapping.ExternalMapLayer\"\n  }\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Created"
          },
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"HI62yoP6Kkv\",\n    \"klass\": \"org.hisp.dhis.mapping.ExternalMapLayer\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `imageFormat`.\",\n        \"mainKlass\": \"org.hisp.dhis.mapping.ExternalMapLayer\",\n        \"errorKlass\": \"org.hisp.dhis.mapping.ImageFormat\",\n        \"errorProperty\": \"imageFormat\",\n        \"errorCode\": \"E4000\"\n      },\n      {\n        \"message\": \"Missing required property `mapService`.\",\n        \"mainKlass\": \"org.hisp.dhis.mapping.ExternalMapLayer\",\n        \"errorKlass\": \"org.hisp.dhis.mapping.MapService\",\n        \"errorProperty\": \"mapService\",\n        \"errorCode\": \"E4000\"\n      },\n      {\n        \"message\": \"Missing required property `mapLayerPosition`.\",\n        \"mainKlass\": \"org.hisp.dhis.mapping.ExternalMapLayer\",\n        \"errorKlass\": \"org.hisp.dhis.mapping.MapLayerPosition\",\n        \"errorProperty\": \"mapLayerPosition\",\n        \"errorCode\": \"E4000\"\n      },\n      {\n        \"message\": \"Missing required property `url`.\",\n        \"mainKlass\": \"org.hisp.dhis.mapping.ExternalMapLayer\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"url\",\n        \"errorCode\": \"E4000\"\n      },\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.mapping.ExternalMapLayer\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot construct instance of `org.hisp.dhis.user.User` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('gXCxJIVLcFe')\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 901] (through reference chain: org.hisp.dhis.mapping.ExternalMapLayer[\\\"lastUpdatedBy\\\"])\"\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create externalMapLayers [DRAFT]",
        "tags": [
          "externalMapLayers"
        ]
      }
    },
    "/externalMapLayers/{id}": {
      "delete": {
        "operationId": "deleteExternalMapLayer",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.externalMapLayer.ExternalMapLayer",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ExternalMapLayer with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a externalMapLayer by ID [DRAFT]",
        "tags": [
          "externalMapLayers"
        ]
      },
      "get": {
        "operationId": "getExternalMapLayer",
        "parameters": [
          {
            "$ref": "#/components/parameters/field"
          },
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/externalMapLayer"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ExternalMapLayer with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a externalMapLayer by ID [DRAFT]",
        "tags": [
          "externalMapLayers"
        ]
      },
      "put": {
        "operationId": "updateExternalMapLayer",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/externalMapLayer"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.externalMapLayer.ExternalMapLayer",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ExternalMapLayer with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.externalMapLayer.ExternalMapLayer",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (ExternalMapLayer)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.externalMapLayer.ExternalMapLayer",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a externalMapLayer [DRAFT]",
        "tags": [
          "externalMapLayers"
        ]
      }
    },
    "/indicatorGroupSets": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/paging"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "indicatorGroupSets": {
                      "items": {
                        "$ref": "#/components/schemas/indicatorGroupSet"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list indicatorGroupSets [DRAFT]",
        "tags": [
          "indicatorGroupSets"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/indicatorGroupSet"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Created\",\n  \"httpStatusCode\": 201,\n  \"status\": \"OK\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"eulfByaNhZZ\",\n    \"klass\": \"org.hisp.dhis.indicator.IndicatorGroupSet\"\n  }\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Created"
          },
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"Qez86nrK5HE\",\n    \"klass\": \"org.hisp.dhis.indicator.IndicatorGroupSet\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.indicator.IndicatorGroupSet\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot construct instance of `org.hisp.dhis.user.User` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('coXRt1rX7NO')\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 934] (through reference chain: org.hisp.dhis.indicator.IndicatorGroupSet[\\\"lastUpdatedBy\\\"])\"\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create indicatorGroupSets [DRAFT]",
        "tags": [
          "indicatorGroupSets"
        ]
      }
    },
    "/indicatorGroupSets/{id}": {
      "delete": {
        "operationId": "deleteIndicatorGroupSet",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.indicatorGroupSet.IndicatorGroupSet",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "IndicatorGroupSet with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a indicatorGroupSet by ID [DRAFT]",
        "tags": [
          "indicatorGroupSets"
        ]
      },
      "get": {
        "operationId": "getIndicatorGroupSet",
        "parameters": [
          {
            "$ref": "#/components/parameters/field"
          },
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/indicatorGroupSet"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "IndicatorGroupSet with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a indicatorGroupSet by ID [DRAFT]",
        "tags": [
          "indicatorGroupSets"
        ]
      },
      "put": {
        "operationId": "updateIndicatorGroupSet",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/indicatorGroupSet"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.indicatorGroupSet.IndicatorGroupSet",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "IndicatorGroupSet with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.indicatorGroupSet.IndicatorGroupSet",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (IndicatorGroupSet)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.indicatorGroupSet.IndicatorGroupSet",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a indicatorGroupSet [DRAFT]",
        "tags": [
          "indicatorGroupSets"
        ]
      }
    },
    "/indicatorGroups": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/paging"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "indicatorGroups": {
                      "items": {
                        "$ref": "#/components/schemas/indicatorGroup"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list indicatorGroups [DRAFT]",
        "tags": [
          "indicatorGroups"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/indicatorGroup"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Created\",\n  \"httpStatusCode\": 201,\n  \"status\": \"OK\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"lZsFJgLWAhu\",\n    \"klass\": \"org.hisp.dhis.indicator.IndicatorGroup\"\n  }\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Created"
          },
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"U0tn3cTzBju\",\n    \"klass\": \"org.hisp.dhis.indicator.IndicatorGroup\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.indicator.IndicatorGroup\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot construct instance of `org.hisp.dhis.indicator.IndicatorGroupSet` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('936N4W083Zk')\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 597] (through reference chain: org.hisp.dhis.indicator.IndicatorGroup[\\\"indicatorGroupSet\\\"])\"\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create indicatorGroups [DRAFT]",
        "tags": [
          "indicatorGroups"
        ]
      }
    },
    "/indicatorGroups/{id}": {
      "delete": {
        "operationId": "deleteIndicatorGroup",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.indicatorGroup.IndicatorGroup",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "IndicatorGroup with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a indicatorGroup by ID [DRAFT]",
        "tags": [
          "indicatorGroups"
        ]
      },
      "get": {
        "operationId": "getIndicatorGroup",
        "parameters": [
          {
            "$ref": "#/components/parameters/field"
          },
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/indicatorGroup"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "IndicatorGroup with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a indicatorGroup by ID [DRAFT]",
        "tags": [
          "indicatorGroups"
        ]
      },
      "put": {
        "operationId": "updateIndicatorGroup",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/indicatorGroup"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.indicatorGroup.IndicatorGroup",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "IndicatorGroup with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.indicatorGroup.IndicatorGroup",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (IndicatorGroup)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.indicatorGroup.IndicatorGroup",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a indicatorGroup [DRAFT]",
        "tags": [
          "indicatorGroups"
        ]
      }
    },
    "/indicatorTypes": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/paging"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "indicatorTypes": {
                      "items": {
                        "$ref": "#/components/schemas/indicatorType"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list indicatorTypes [DRAFT]",
        "tags": [
          "indicatorTypes"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/indicatorType"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Created\",\n  \"httpStatusCode\": 201,\n  \"status\": \"OK\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"M56UgqiLAXo\",\n    \"klass\": \"org.hisp.dhis.indicator.IndicatorType\"\n  }\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Created"
          },
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"skxh8LNzMhK\",\n    \"klass\": \"org.hisp.dhis.indicator.IndicatorType\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.indicator.IndicatorType\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot deserialize value of type `int` from String \\\"string\\\": not a valid Integer value\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 501] (through reference chain: org.hisp.dhis.indicator.IndicatorType[\\\"factor\\\"])\"\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create indicatorTypes [DRAFT]",
        "tags": [
          "indicatorTypes"
        ]
      }
    },
    "/indicatorTypes/{id}": {
      "delete": {
        "operationId": "deleteIndicatorType",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.indicatorType.IndicatorType",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "IndicatorType with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a indicatorType by ID [DRAFT]",
        "tags": [
          "indicatorTypes"
        ]
      },
      "get": {
        "operationId": "getIndicatorType",
        "parameters": [
          {
            "$ref": "#/components/parameters/field"
          },
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/indicatorType"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "IndicatorType with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a indicatorType by ID [DRAFT]",
        "tags": [
          "indicatorTypes"
        ]
      },
      "put": {
        "operationId": "updateIndicatorType",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/indicatorType"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.indicatorType.IndicatorType",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "IndicatorType with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.indicatorType.IndicatorType",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (IndicatorType)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.indicatorType.IndicatorType",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a indicatorType [DRAFT]",
        "tags": [
          "indicatorTypes"
        ]
      }
    },
    "/indicators": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/paging"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "indicators": {
                      "items": {
                        "$ref": "#/components/schemas/indicator"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list indicators [DRAFT]",
        "tags": [
          "indicators"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/indicator"
              }
            }
          }
        },
        "responses": {
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"we2v9JobUkA\",\n    \"klass\": \"org.hisp.dhis.indicator.Indicator\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `indicatorType`.\",\n        \"mainKlass\": \"org.hisp.dhis.indicator.Indicator\",\n        \"errorKlass\": \"org.hisp.dhis.indicator.IndicatorType\",\n        \"errorProperty\": \"indicatorType\",\n        \"errorCode\": \"E4000\"\n      },\n      {\n        \"message\": \"Missing required property `numerator`.\",\n        \"mainKlass\": \"org.hisp.dhis.indicator.Indicator\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"numerator\",\n        \"errorCode\": \"E4000\"\n      },\n      {\n        \"message\": \"Missing required property `denominator`.\",\n        \"mainKlass\": \"org.hisp.dhis.indicator.Indicator\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"denominator\",\n        \"errorCode\": \"E4000\"\n      },\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.indicator.Indicator\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      },\n      {\n        \"message\": \"Missing required property `shortName`.\",\n        \"mainKlass\": \"org.hisp.dhis.indicator.Indicator\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"shortName\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot construct instance of `org.hisp.dhis.indicator.IndicatorType` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('BL7Ffk0LaZN')\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 293] (through reference chain: org.hisp.dhis.indicator.Indicator[\\\"indicatorType\\\"])\"\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create indicators [DRAFT]",
        "tags": [
          "indicators"
        ]
      }
    },
    "/indicators/{id}": {
      "delete": {
        "operationId": "deleteIndicator",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.indicator.Indicator",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Indicator with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a indicator by ID [DRAFT]",
        "tags": [
          "indicators"
        ]
      },
      "get": {
        "operationId": "getIndicator",
        "parameters": [
          {
            "$ref": "#/components/parameters/field"
          },
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/indicator"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Indicator with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a indicator by ID [DRAFT]",
        "tags": [
          "indicators"
        ]
      },
      "put": {
        "operationId": "updateIndicator",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/indicator"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.indicator.Indicator",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Indicator with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.indicator.Indicator",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (Indicator)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.indicator.Indicator",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a indicator [DRAFT]",
        "tags": [
          "indicators"
        ]
      }
    },
    "/interpretations": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/paging"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "interpretations": {
                      "items": {
                        "$ref": "#/components/schemas/interpretation"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list interpretations [DRAFT]",
        "tags": [
          "interpretations"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/interpretation"
              }
            }
          }
        },
        "responses": {
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"ObjectReport is required to be non-null.\"\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create interpretations [DRAFT]",
        "tags": [
          "interpretations"
        ]
      }
    },
    "/interpretations/{id}": {
      "delete": {
        "operationId": "deleteInterpretation",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.interpretation.Interpretation",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Interpretation with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a interpretation by ID [DRAFT]",
        "tags": [
          "interpretations"
        ]
      },
      "get": {
        "operationId": "getInterpretation",
        "parameters": [
          {
            "$ref": "#/components/parameters/field"
          },
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/interpretation"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Interpretation with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a interpretation by ID [DRAFT]",
        "tags": [
          "interpretations"
        ]
      },
      "put": {
        "operationId": "updateInterpretation",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/interpretation"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.interpretation.Interpretation",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Interpretation with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.interpretation.Interpretation",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (Interpretation)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.interpretation.Interpretation",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a interpretation [DRAFT]",
        "tags": [
          "interpretations"
        ]
      }
    },
    "/jobConfigurations": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/paging"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "jobConfigurations": {
                      "items": {
                        "$ref": "#/components/schemas/jobConfiguration"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list jobConfigurations [DRAFT]",
        "tags": [
          "jobConfigurations"
        ]
      }
    },
    "/jobConfigurations/{id}": {
      "delete": {
        "operationId": "deleteJobConfiguration",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.jobConfiguration.JobConfiguration",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "JobConfiguration with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a jobConfiguration by ID [DRAFT]",
        "tags": [
          "jobConfigurations"
        ]
      },
      "get": {
        "operationId": "getJobConfiguration",
        "parameters": [
          {
            "$ref": "#/components/parameters/field"
          },
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/jobConfiguration"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "JobConfiguration with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a jobConfiguration by ID [DRAFT]",
        "tags": [
          "jobConfigurations"
        ]
      },
      "put": {
        "operationId": "updateJobConfiguration",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/jobConfiguration"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.jobConfiguration.JobConfiguration",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "JobConfiguration with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.jobConfiguration.JobConfiguration",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (JobConfiguration)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.jobConfiguration.JobConfiguration",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a jobConfiguration [DRAFT]",
        "tags": [
          "jobConfigurations"
        ]
      }
    },
    "/legendSets": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/paging"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "legendSets": {
                      "items": {
                        "$ref": "#/components/schemas/legendSet"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list legendSets [DRAFT]",
        "tags": [
          "legendSets"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/legendSet"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Created\",\n  \"httpStatusCode\": 201,\n  \"status\": \"OK\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"giXl4xN3V7j\",\n    \"klass\": \"org.hisp.dhis.legend.LegendSet\"\n  }\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Created"
          },
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"gInRJcb4Jde\",\n    \"klass\": \"org.hisp.dhis.legend.LegendSet\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.legend.LegendSet\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot construct instance of `org.hisp.dhis.user.User` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('nFu1RwaXoyi')\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 644] (through reference chain: org.hisp.dhis.legend.LegendSet[\\\"lastUpdatedBy\\\"])\"\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create legendSets [DRAFT]",
        "tags": [
          "legendSets"
        ]
      }
    },
    "/legendSets/{id}": {
      "delete": {
        "operationId": "deleteLegendSet",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.legendSet.LegendSet",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "LegendSet with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a legendSet by ID [DRAFT]",
        "tags": [
          "legendSets"
        ]
      },
      "get": {
        "operationId": "getLegendSet",
        "parameters": [
          {
            "$ref": "#/components/parameters/field"
          },
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/legendSet"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "LegendSet with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a legendSet by ID [DRAFT]",
        "tags": [
          "legendSets"
        ]
      },
      "put": {
        "operationId": "updateLegendSet",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/legendSet"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.legendSet.LegendSet",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "LegendSet with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.legendSet.LegendSet",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (LegendSet)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.legendSet.LegendSet",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a legendSet [DRAFT]",
        "tags": [
          "legendSets"
        ]
      }
    },
    "/mapViews": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/paging"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "mapViews": {
                      "items": {
                        "$ref": "#/components/schemas/mapView"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list mapViews [DRAFT]",
        "tags": [
          "mapViews"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/mapView"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Created\",\n  \"httpStatusCode\": 201,\n  \"status\": \"OK\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"QHNOfVGCLGn\",\n    \"klass\": \"org.hisp.dhis.mapping.MapView\"\n  }\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Created"
          },
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"FbMKh0VhDAc\",\n    \"klass\": \"org.hisp.dhis.mapping.MapView\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `layer`.\",\n        \"mainKlass\": \"org.hisp.dhis.mapping.MapView\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"layer\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot deserialize value of type `java.lang.Integer` from String \\\"string\\\": not a valid Integer value\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 47] (through reference chain: org.hisp.dhis.mapping.MapView[\\\"areaRadius\\\"])\"\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create mapViews [DRAFT]",
        "tags": [
          "mapViews"
        ]
      }
    },
    "/mapViews/{id}": {
      "delete": {
        "operationId": "deleteMapView",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.mapView.MapView",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "MapView with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a mapView by ID [DRAFT]",
        "tags": [
          "mapViews"
        ]
      },
      "get": {
        "operationId": "getMapView",
        "parameters": [
          {
            "$ref": "#/components/parameters/field"
          },
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/mapView"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "MapView with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a mapView by ID [DRAFT]",
        "tags": [
          "mapViews"
        ]
      },
      "put": {
        "operationId": "updateMapView",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/mapView"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.mapView.MapView",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "MapView with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.mapView.MapView",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (MapView)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.mapView.MapView",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a mapView [DRAFT]",
        "tags": [
          "mapViews"
        ]
      }
    },
    "/maps": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/paging"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "maps": {
                      "items": {
                        "$ref": "#/components/schemas/map"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list maps [DRAFT]",
        "tags": [
          "maps"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/map"
              }
            }
          }
        },
        "responses": {
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"could not execute statement\"\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create maps [DRAFT]",
        "tags": [
          "maps"
        ]
      }
    },
    "/maps/{id}": {
      "delete": {
        "operationId": "deleteMap",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.map.Map",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Map with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a map by ID [DRAFT]",
        "tags": [
          "maps"
        ]
      },
      "get": {
        "operationId": "getMap",
        "parameters": [
          {
            "$ref": "#/components/parameters/field"
          },
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/map"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Map with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a map by ID [DRAFT]",
        "tags": [
          "maps"
        ]
      },
      "put": {
        "operationId": "updateMap",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/map"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.map.Map",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Map with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.map.Map",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (Map)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.map.Map",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a map [DRAFT]",
        "tags": [
          "maps"
        ]
      }
    },
    "/messageConversations": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/paging"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "messageConversations": {
                      "items": {
                        "$ref": "#/components/schemas/messageConversation"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list messageConversations [DRAFT]",
        "tags": [
          "messageConversations"
        ]
      }
    },
    "/messageConversations/{id}": {
      "delete": {
        "operationId": "deleteMessageConversation",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.messageConversation.MessageConversation",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "MessageConversation with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a messageConversation by ID [DRAFT]",
        "tags": [
          "messageConversations"
        ]
      },
      "get": {
        "operationId": "getMessageConversation",
        "parameters": [
          {
            "$ref": "#/components/parameters/field"
          },
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/messageConversation"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "MessageConversation with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a messageConversation by ID [DRAFT]",
        "tags": [
          "messageConversations"
        ]
      },
      "put": {
        "operationId": "updateMessageConversation",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/messageConversation"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.messageConversation.MessageConversation",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "MessageConversation with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.messageConversation.MessageConversation",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (MessageConversation)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.messageConversation.MessageConversation",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a messageConversation [DRAFT]",
        "tags": [
          "messageConversations"
        ]
      }
    },
    "/metadata/version": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/paging"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "metadata/version": {
                      "items": {
                        "$ref": "#/components/schemas/version"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list metadata/version [DRAFT]",
        "tags": [
          "metadata"
        ]
      }
    },
    "/metadata/{id}": {
      "delete": {
        "operationId": "deleteMetadata",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.metadata.Metadata",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Metadata with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a metadata by ID [DRAFT]",
        "tags": [
          "metadata"
        ]
      },
      "get": {
        "operationId": "getMetadata",
        "parameters": [
          {
            "$ref": "#/components/parameters/field"
          },
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/metadata"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Metadata with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a metadata by ID [DRAFT]",
        "tags": [
          "metadata"
        ]
      },
      "put": {
        "operationId": "updateMetadata",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/metadata"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.metadata.Metadata",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Metadata with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.metadata.Metadata",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (Metadata)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.metadata.Metadata",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a metadata [DRAFT]",
        "tags": [
          "metadata"
        ]
      }
    },
    "/minMaxDataElements": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/paging"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "minMaxDataElements": {
                      "items": {
                        "$ref": "#/components/schemas/minMaxDataElement"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list minMaxDataElements [DRAFT]",
        "tags": [
          "minMaxDataElements"
        ]
      }
    },
    "/minMaxDataElements/{id}": {
      "delete": {
        "operationId": "deleteMinMaxDataElement",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.minMaxDataElement.MinMaxDataElement",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "MinMaxDataElement with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a minMaxDataElement by ID [DRAFT]",
        "tags": [
          "minMaxDataElements"
        ]
      },
      "get": {
        "operationId": "getMinMaxDataElement",
        "parameters": [
          {
            "$ref": "#/components/parameters/field"
          },
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/minMaxDataElement"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "MinMaxDataElement with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a minMaxDataElement by ID [DRAFT]",
        "tags": [
          "minMaxDataElements"
        ]
      },
      "put": {
        "operationId": "updateMinMaxDataElement",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/minMaxDataElement"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.minMaxDataElement.MinMaxDataElement",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "MinMaxDataElement with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.minMaxDataElement.MinMaxDataElement",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (MinMaxDataElement)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.minMaxDataElement.MinMaxDataElement",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a minMaxDataElement [DRAFT]",
        "tags": [
          "minMaxDataElements"
        ]
      }
    },
    "/oAuth2Clients": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/paging"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "oAuth2Clients": {
                      "items": {
                        "$ref": "#/components/schemas/oAuth2Client"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list oAuth2Clients [DRAFT]",
        "tags": [
          "oAuth2Clients"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/oAuth2Client"
              }
            }
          }
        },
        "responses": {
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"Epy2rRMOufk\",\n    \"klass\": \"org.hisp.dhis.security.oauth2.OAuth2Client\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.security.oauth2.OAuth2Client\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot construct instance of `org.hisp.dhis.user.User` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('HV1ghpqiKPn')\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 370] (through reference chain: org.hisp.dhis.security.oauth2.OAuth2Client[\\\"lastUpdatedBy\\\"])\"\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create oAuth2Clients [DRAFT]",
        "tags": [
          "oAuth2Clients"
        ]
      }
    },
    "/oAuth2Clients/{id}": {
      "delete": {
        "operationId": "deleteOAuth2Client",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.oAuth2Client.OAuth2Client",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "OAuth2Client with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a oAuth2Client by ID [DRAFT]",
        "tags": [
          "oAuth2Clients"
        ]
      },
      "get": {
        "operationId": "getOAuth2Client",
        "parameters": [
          {
            "$ref": "#/components/parameters/field"
          },
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/oAuth2Client"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "OAuth2Client with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a oAuth2Client by ID [DRAFT]",
        "tags": [
          "oAuth2Clients"
        ]
      },
      "put": {
        "operationId": "updateOAuth2Client",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/oAuth2Client"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.oAuth2Client.OAuth2Client",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "OAuth2Client with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.oAuth2Client.OAuth2Client",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (OAuth2Client)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.oAuth2Client.OAuth2Client",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a oAuth2Client [DRAFT]",
        "tags": [
          "oAuth2Clients"
        ]
      }
    },
    "/optionGroupSets": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/paging"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "optionGroupSets": {
                      "items": {
                        "$ref": "#/components/schemas/optionGroupSet"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list optionGroupSets [DRAFT]",
        "tags": [
          "optionGroupSets"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/optionGroupSet"
              }
            }
          }
        },
        "responses": {
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"Nq85S5jfvnM\",\n    \"klass\": \"org.hisp.dhis.option.OptionGroupSet\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.option.OptionGroupSet\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot construct instance of `org.hisp.dhis.user.User` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('0xvS7L5UdBv')\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 468] (through reference chain: org.hisp.dhis.option.OptionGroupSet[\\\"lastUpdatedBy\\\"])\"\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create optionGroupSets [DRAFT]",
        "tags": [
          "optionGroupSets"
        ]
      }
    },
    "/optionGroupSets/{id}": {
      "delete": {
        "operationId": "deleteOptionGroupSet",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.optionGroupSet.OptionGroupSet",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "OptionGroupSet with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a optionGroupSet by ID [DRAFT]",
        "tags": [
          "optionGroupSets"
        ]
      },
      "get": {
        "operationId": "getOptionGroupSet",
        "parameters": [
          {
            "$ref": "#/components/parameters/field"
          },
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/optionGroupSet"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "OptionGroupSet with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a optionGroupSet by ID [DRAFT]",
        "tags": [
          "optionGroupSets"
        ]
      },
      "put": {
        "operationId": "updateOptionGroupSet",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/optionGroupSet"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.optionGroupSet.OptionGroupSet",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "OptionGroupSet with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.optionGroupSet.OptionGroupSet",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (OptionGroupSet)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.optionGroupSet.OptionGroupSet",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a optionGroupSet [DRAFT]",
        "tags": [
          "optionGroupSets"
        ]
      }
    },
    "/optionGroups": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/paging"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "optionGroups": {
                      "items": {
                        "$ref": "#/components/schemas/optionGroup"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list optionGroups [DRAFT]",
        "tags": [
          "optionGroups"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/optionGroup"
              }
            }
          }
        },
        "responses": {
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"pgl3dNGmZ8f\",\n    \"klass\": \"org.hisp.dhis.option.OptionGroup\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.option.OptionGroup\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      },\n      {\n        \"message\": \"Missing required property `shortName`.\",\n        \"mainKlass\": \"org.hisp.dhis.option.OptionGroup\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"shortName\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot construct instance of `org.hisp.dhis.user.User` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('hskgIVRFyw6')\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 408] (through reference chain: org.hisp.dhis.option.OptionGroup[\\\"lastUpdatedBy\\\"])\"\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create optionGroups [DRAFT]",
        "tags": [
          "optionGroups"
        ]
      }
    },
    "/optionGroups/{id}": {
      "delete": {
        "operationId": "deleteOptionGroup",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.optionGroup.OptionGroup",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "OptionGroup with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a optionGroup by ID [DRAFT]",
        "tags": [
          "optionGroups"
        ]
      },
      "get": {
        "operationId": "getOptionGroup",
        "parameters": [
          {
            "$ref": "#/components/parameters/field"
          },
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/optionGroup"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "OptionGroup with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a optionGroup by ID [DRAFT]",
        "tags": [
          "optionGroups"
        ]
      },
      "put": {
        "operationId": "updateOptionGroup",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/optionGroup"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.optionGroup.OptionGroup",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "OptionGroup with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.optionGroup.OptionGroup",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (OptionGroup)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.optionGroup.OptionGroup",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a optionGroup [DRAFT]",
        "tags": [
          "optionGroups"
        ]
      }
    },
    "/optionSets": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/paging"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "optionSets": {
                      "items": {
                        "$ref": "#/components/schemas/optionSet"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list optionSets [DRAFT]",
        "tags": [
          "optionSets"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/optionSet"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Created\",\n  \"httpStatusCode\": 201,\n  \"status\": \"OK\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"vmKR7fCAMha\",\n    \"klass\": \"org.hisp.dhis.option.OptionSet\"\n  }\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Created"
          },
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"pazvQQK9Bg5\",\n    \"klass\": \"org.hisp.dhis.option.OptionSet\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `valueType`.\",\n        \"mainKlass\": \"org.hisp.dhis.option.OptionSet\",\n        \"errorKlass\": \"org.hisp.dhis.common.ValueType\",\n        \"errorProperty\": \"valueType\",\n        \"errorCode\": \"E4000\"\n      },\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.option.OptionSet\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot construct instance of `org.hisp.dhis.user.User` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('IGt3TyUC48a')\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 644] (through reference chain: org.hisp.dhis.option.OptionSet[\\\"lastUpdatedBy\\\"])\"\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create optionSets [DRAFT]",
        "tags": [
          "optionSets"
        ]
      }
    },
    "/optionSets/{id}": {
      "delete": {
        "operationId": "deleteOptionSet",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.optionSet.OptionSet",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "OptionSet with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a optionSet by ID [DRAFT]",
        "tags": [
          "optionSets"
        ]
      },
      "get": {
        "operationId": "getOptionSet",
        "parameters": [
          {
            "$ref": "#/components/parameters/field"
          },
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/optionSet"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "OptionSet with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a optionSet by ID [DRAFT]",
        "tags": [
          "optionSets"
        ]
      },
      "put": {
        "operationId": "updateOptionSet",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/optionSet"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.optionSet.OptionSet",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "OptionSet with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.optionSet.OptionSet",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (OptionSet)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.optionSet.OptionSet",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a optionSet [DRAFT]",
        "tags": [
          "optionSets"
        ]
      }
    },
    "/options": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/paging"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "options": {
                      "items": {
                        "$ref": "#/components/schemas/option"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list options [DRAFT]",
        "tags": [
          "options"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/option"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Created\",\n  \"httpStatusCode\": 201,\n  \"status\": \"OK\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"kqeEUQ32K4o\",\n    \"klass\": \"org.hisp.dhis.option.Option\"\n  }\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Created"
          },
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"nE1pxRiIdzs\",\n    \"klass\": \"org.hisp.dhis.option.Option\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `code`.\",\n        \"mainKlass\": \"org.hisp.dhis.option.Option\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"code\",\n        \"errorCode\": \"E4000\"\n      },\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.option.Option\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot construct instance of `org.hisp.dhis.user.User` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('oPN9PS6J92N')\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 1369] (through reference chain: org.hisp.dhis.option.Option[\\\"lastUpdatedBy\\\"])\"\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create options [DRAFT]",
        "tags": [
          "options"
        ]
      }
    },
    "/options/{id}": {
      "delete": {
        "operationId": "deleteOption",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.option.Option",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Option with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a option by ID [DRAFT]",
        "tags": [
          "options"
        ]
      },
      "get": {
        "operationId": "getOption",
        "parameters": [
          {
            "$ref": "#/components/parameters/field"
          },
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/option"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Option with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a option by ID [DRAFT]",
        "tags": [
          "options"
        ]
      },
      "put": {
        "operationId": "updateOption",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/option"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.option.Option",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Option with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.option.Option",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (Option)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.option.Option",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a option [DRAFT]",
        "tags": [
          "options"
        ]
      }
    },
    "/organisationUnitGroupSets": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/paging"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "organisationUnitGroupSets": {
                      "items": {
                        "$ref": "#/components/schemas/organisationUnitGroupSet"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list organisationUnitGroupSets [DRAFT]",
        "tags": [
          "organisationUnitGroupSets"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/organisationUnitGroupSet"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Created\",\n  \"httpStatusCode\": 201,\n  \"status\": \"OK\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"vpDoUBEaetb\",\n    \"klass\": \"org.hisp.dhis.organisationunit.OrganisationUnitGroupSet\"\n  }\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Created"
          },
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"Kr31WWX6Sr4\",\n    \"klass\": \"org.hisp.dhis.organisationunit.OrganisationUnitGroupSet\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.organisationunit.OrganisationUnitGroupSet\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot construct instance of `org.hisp.dhis.user.User` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('yV8iW5bCGAL')\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 1989] (through reference chain: org.hisp.dhis.organisationunit.OrganisationUnitGroupSet[\\\"lastUpdatedBy\\\"])\"\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create organisationUnitGroupSets [DRAFT]",
        "tags": [
          "organisationUnitGroupSets"
        ]
      }
    },
    "/organisationUnitGroupSets/{id}": {
      "delete": {
        "operationId": "deleteOrganisationUnitGroupSet",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.organisationUnitGroupSet.OrganisationUnitGroupSet",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "OrganisationUnitGroupSet with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a organisationUnitGroupSet by ID [DRAFT]",
        "tags": [
          "organisationUnitGroupSets"
        ]
      },
      "get": {
        "operationId": "getOrganisationUnitGroupSet",
        "parameters": [
          {
            "$ref": "#/components/parameters/field"
          },
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/organisationUnitGroupSet"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "OrganisationUnitGroupSet with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a organisationUnitGroupSet by ID [DRAFT]",
        "tags": [
          "organisationUnitGroupSets"
        ]
      },
      "put": {
        "operationId": "updateOrganisationUnitGroupSet",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/organisationUnitGroupSet"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.organisationUnitGroupSet.OrganisationUnitGroupSet",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "OrganisationUnitGroupSet with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.organisationUnitGroupSet.OrganisationUnitGroupSet",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (OrganisationUnitGroupSet)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.organisationUnitGroupSet.OrganisationUnitGroupSet",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a organisationUnitGroupSet [DRAFT]",
        "tags": [
          "organisationUnitGroupSets"
        ]
      }
    },
    "/organisationUnitGroups": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/paging"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "organisationUnitGroups": {
                      "items": {
                        "$ref": "#/components/schemas/organisationUnitGroup"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list organisationUnitGroups [DRAFT]",
        "tags": [
          "organisationUnitGroups"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/organisationUnitGroup"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Created\",\n  \"httpStatusCode\": 201,\n  \"status\": \"OK\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"erBvaoXaCq5\",\n    \"klass\": \"org.hisp.dhis.organisationunit.OrganisationUnitGroup\"\n  }\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Created"
          },
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"Cmn637vh9RJ\",\n    \"klass\": \"org.hisp.dhis.organisationunit.OrganisationUnitGroup\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.organisationunit.OrganisationUnitGroup\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot construct instance of `org.hisp.dhis.user.User` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('ff38Tpkmdkr')\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 1916] (through reference chain: org.hisp.dhis.organisationunit.OrganisationUnitGroup[\\\"lastUpdatedBy\\\"])\"\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create organisationUnitGroups [DRAFT]",
        "tags": [
          "organisationUnitGroups"
        ]
      }
    },
    "/organisationUnitGroups/{id}": {
      "delete": {
        "operationId": "deleteOrganisationUnitGroup",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.organisationUnitGroup.OrganisationUnitGroup",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "OrganisationUnitGroup with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a organisationUnitGroup by ID [DRAFT]",
        "tags": [
          "organisationUnitGroups"
        ]
      },
      "get": {
        "operationId": "getOrganisationUnitGroup",
        "parameters": [
          {
            "$ref": "#/components/parameters/field"
          },
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/organisationUnitGroup"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "OrganisationUnitGroup with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a organisationUnitGroup by ID [DRAFT]",
        "tags": [
          "organisationUnitGroups"
        ]
      },
      "put": {
        "operationId": "updateOrganisationUnitGroup",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/organisationUnitGroup"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.organisationUnitGroup.OrganisationUnitGroup",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "OrganisationUnitGroup with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.organisationUnitGroup.OrganisationUnitGroup",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (OrganisationUnitGroup)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.organisationUnitGroup.OrganisationUnitGroup",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a organisationUnitGroup [DRAFT]",
        "tags": [
          "organisationUnitGroups"
        ]
      }
    },
    "/organisationUnitLevels": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/paging"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "organisationUnitLevels": {
                      "items": {
                        "$ref": "#/components/schemas/organisationUnitLevel"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list organisationUnitLevels [DRAFT]",
        "tags": [
          "organisationUnitLevels"
        ]
      }
    },
    "/organisationUnitLevels/{id}": {
      "delete": {
        "operationId": "deleteOrganisationUnitLevel",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.organisationUnitLevel.OrganisationUnitLevel",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "OrganisationUnitLevel with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a organisationUnitLevel by ID [DRAFT]",
        "tags": [
          "organisationUnitLevels"
        ]
      },
      "get": {
        "operationId": "getOrganisationUnitLevel",
        "parameters": [
          {
            "$ref": "#/components/parameters/field"
          },
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/organisationUnitLevel"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "OrganisationUnitLevel with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a organisationUnitLevel by ID [DRAFT]",
        "tags": [
          "organisationUnitLevels"
        ]
      },
      "put": {
        "operationId": "updateOrganisationUnitLevel",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/organisationUnitLevel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.organisationUnitLevel.OrganisationUnitLevel",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "OrganisationUnitLevel with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.organisationUnitLevel.OrganisationUnitLevel",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (OrganisationUnitLevel)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.organisationUnitLevel.OrganisationUnitLevel",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a organisationUnitLevel [DRAFT]",
        "tags": [
          "organisationUnitLevels"
        ]
      }
    },
    "/organisationUnits": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/paging"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "organisationUnits": {
                      "items": {
                        "$ref": "#/components/schemas/organisationUnit"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    },
                    "pager": {
                      "$ref": "#/components/schemas/pagination"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list organisationUnits [DRAFT]",
        "tags": [
          "organisationUnits"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/organisationUnit"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Created\",\n  \"httpStatusCode\": 201,\n  \"status\": \"OK\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"CWKVANx4JP9\",\n    \"klass\": \"org.hisp.dhis.organisationunit.OrganisationUnit\"\n  }\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Created"
          },
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"HhcR4quDTiG\",\n    \"klass\": \"org.hisp.dhis.organisationunit.OrganisationUnit\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.organisationunit.OrganisationUnit\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      },\n      {\n        \"message\": \"Missing required property `shortName`.\",\n        \"mainKlass\": \"org.hisp.dhis.organisationunit.OrganisationUnit\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"shortName\",\n        \"errorCode\": \"E4000\"\n      },\n      {\n        \"message\": \"Missing required property `openingDate`.\",\n        \"mainKlass\": \"org.hisp.dhis.organisationunit.OrganisationUnit\",\n        \"errorKlass\": \"java.util.Date\",\n        \"errorProperty\": \"openingDate\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot construct instance of `org.hisp.dhis.user.User` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('JiucoNEge6x')\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 2842] (through reference chain: org.hisp.dhis.organisationunit.OrganisationUnit[\\\"lastUpdatedBy\\\"])\"\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create organisationUnits [DRAFT]",
        "tags": [
          "organisationUnits"
        ]
      }
    },
    "/organisationUnits/{id}": {
      "delete": {
        "operationId": "deleteOrganisationUnit",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.organisationUnit.OrganisationUnit",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "OrganisationUnit with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a organisationUnit by ID [DRAFT]",
        "tags": [
          "organisationUnits"
        ]
      },
      "get": {
        "operationId": "getOrganisationUnit",
        "parameters": [
          {
            "$ref": "#/components/parameters/field"
          },
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/organisationUnit"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "OrganisationUnit with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a organisationUnit by ID [DRAFT]",
        "tags": [
          "organisationUnits"
        ]
      },
      "put": {
        "operationId": "updateOrganisationUnit",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/organisationUnit"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.organisationUnit.OrganisationUnit",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "OrganisationUnit with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.organisationUnit.OrganisationUnit",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (OrganisationUnit)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.organisationUnit.OrganisationUnit",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a organisationUnit [DRAFT]",
        "tags": [
          "organisationUnits"
        ]
      }
    },
    "/predictors": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/paging"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "pager": {
                      "$ref": "#/components/schemas/pagination"
                    },
                    "predictors": {
                      "items": {
                        "$ref": "#/components/schemas/predictor"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list predictors [DRAFT]",
        "tags": [
          "predictors"
        ]
      }
    },
    "/predictors/{id}": {
      "delete": {
        "operationId": "deletePredictor",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.predictor.Predictor",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Predictor with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a predictor by ID [DRAFT]",
        "tags": [
          "predictors"
        ]
      },
      "get": {
        "operationId": "getPredictor",
        "parameters": [
          {
            "$ref": "#/components/parameters/field"
          },
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/predictor"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Predictor with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a predictor by ID [DRAFT]",
        "tags": [
          "predictors"
        ]
      },
      "put": {
        "operationId": "updatePredictor",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/predictor"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.predictor.Predictor",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Predictor with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.predictor.Predictor",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (Predictor)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.predictor.Predictor",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a predictor [DRAFT]",
        "tags": [
          "predictors"
        ]
      }
    },
    "/programDataElements": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/paging"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "pager": {
                      "$ref": "#/components/schemas/pagination"
                    },
                    "programDataElements": {
                      "items": {
                        "$ref": "#/components/schemas/programDataElement"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list programDataElements [DRAFT]",
        "tags": [
          "programDataElements"
        ]
      }
    },
    "/programDataElements/{id}": {
      "delete": {
        "operationId": "deleteProgramDataElement",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.programDataElement.ProgramDataElement",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ProgramDataElement with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a programDataElement by ID [DRAFT]",
        "tags": [
          "programDataElements"
        ]
      },
      "get": {
        "operationId": "getProgramDataElement",
        "parameters": [
          {
            "$ref": "#/components/parameters/field"
          },
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/programDataElement"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ProgramDataElement with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a programDataElement by ID [DRAFT]",
        "tags": [
          "programDataElements"
        ]
      },
      "put": {
        "operationId": "updateProgramDataElement",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/programDataElement"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.programDataElement.ProgramDataElement",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ProgramDataElement with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.programDataElement.ProgramDataElement",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (ProgramDataElement)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.programDataElement.ProgramDataElement",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a programDataElement [DRAFT]",
        "tags": [
          "programDataElements"
        ]
      }
    },
    "/programIndicatorGroups": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/paging"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "pager": {
                      "$ref": "#/components/schemas/pagination"
                    },
                    "programIndicatorGroups": {
                      "items": {
                        "$ref": "#/components/schemas/programIndicatorGroup"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list programIndicatorGroups [DRAFT]",
        "tags": [
          "programIndicatorGroups"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/programIndicatorGroup"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Created\",\n  \"httpStatusCode\": 201,\n  \"status\": \"OK\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"u34agM1WZnu\",\n    \"klass\": \"org.hisp.dhis.program.ProgramIndicatorGroup\"\n  }\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Created"
          },
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"tf0JLyKqBJy\",\n    \"klass\": \"org.hisp.dhis.program.ProgramIndicatorGroup\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.program.ProgramIndicatorGroup\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot construct instance of `org.hisp.dhis.user.User` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('8x6JPtU1Wmg')\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 918] (through reference chain: org.hisp.dhis.program.ProgramIndicatorGroup[\\\"lastUpdatedBy\\\"])\"\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create programIndicatorGroups [DRAFT]",
        "tags": [
          "programIndicatorGroups"
        ]
      }
    },
    "/programIndicatorGroups/{id}": {
      "delete": {
        "operationId": "deleteProgramIndicatorGroup",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.programIndicatorGroup.ProgramIndicatorGroup",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ProgramIndicatorGroup with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a programIndicatorGroup by ID [DRAFT]",
        "tags": [
          "programIndicatorGroups"
        ]
      },
      "get": {
        "operationId": "getProgramIndicatorGroup",
        "parameters": [
          {
            "$ref": "#/components/parameters/field"
          },
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/programIndicatorGroup"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ProgramIndicatorGroup with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a programIndicatorGroup by ID [DRAFT]",
        "tags": [
          "programIndicatorGroups"
        ]
      },
      "put": {
        "operationId": "updateProgramIndicatorGroup",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/programIndicatorGroup"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.programIndicatorGroup.ProgramIndicatorGroup",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ProgramIndicatorGroup with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.programIndicatorGroup.ProgramIndicatorGroup",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (ProgramIndicatorGroup)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.programIndicatorGroup.ProgramIndicatorGroup",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a programIndicatorGroup [DRAFT]",
        "tags": [
          "programIndicatorGroups"
        ]
      }
    },
    "/programIndicators": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/paging"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "pager": {
                      "$ref": "#/components/schemas/pagination"
                    },
                    "programIndicators": {
                      "items": {
                        "$ref": "#/components/schemas/programIndicator"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list programIndicators [DRAFT]",
        "tags": [
          "programIndicators"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/programIndicator"
              }
            }
          }
        },
        "responses": {
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"TTUWCJAwVRx\",\n    \"klass\": \"org.hisp.dhis.program.ProgramIndicator\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `program`.\",\n        \"mainKlass\": \"org.hisp.dhis.program.ProgramIndicator\",\n        \"errorKlass\": \"org.hisp.dhis.program.Program\",\n        \"errorProperty\": \"program\",\n        \"errorCode\": \"E4000\"\n      },\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.program.ProgramIndicator\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      },\n      {\n        \"message\": \"Missing required property `shortName`.\",\n        \"mainKlass\": \"org.hisp.dhis.program.ProgramIndicator\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"shortName\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot construct instance of `org.hisp.dhis.program.Program` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('S2saHxqdIs5')\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 255] (through reference chain: org.hisp.dhis.program.ProgramIndicator[\\\"program\\\"])\"\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create programIndicators [DRAFT]",
        "tags": [
          "programIndicators"
        ]
      }
    },
    "/programIndicators/{id}": {
      "delete": {
        "operationId": "deleteProgramIndicator",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.programIndicator.ProgramIndicator",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ProgramIndicator with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a programIndicator by ID [DRAFT]",
        "tags": [
          "programIndicators"
        ]
      },
      "get": {
        "operationId": "getProgramIndicator",
        "parameters": [
          {
            "$ref": "#/components/parameters/field"
          },
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/programIndicator"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ProgramIndicator with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a programIndicator by ID [DRAFT]",
        "tags": [
          "programIndicators"
        ]
      },
      "put": {
        "operationId": "updateProgramIndicator",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/programIndicator"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.programIndicator.ProgramIndicator",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ProgramIndicator with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.programIndicator.ProgramIndicator",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (ProgramIndicator)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.programIndicator.ProgramIndicator",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a programIndicator [DRAFT]",
        "tags": [
          "programIndicators"
        ]
      }
    },
    "/programNotificationTemplates": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/paging"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "pager": {
                      "$ref": "#/components/schemas/pagination"
                    },
                    "programNotificationTemplates": {
                      "items": {
                        "$ref": "#/components/schemas/programNotificationTemplate"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list programNotificationTemplates [DRAFT]",
        "tags": [
          "programNotificationTemplates"
        ]
      }
    },
    "/programNotificationTemplates/{id}": {
      "delete": {
        "operationId": "deleteProgramNotificationTemplate",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.programNotificationTemplate.ProgramNotificationTemplate",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ProgramNotificationTemplate with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a programNotificationTemplate by ID [DRAFT]",
        "tags": [
          "programNotificationTemplates"
        ]
      },
      "get": {
        "operationId": "getProgramNotificationTemplate",
        "parameters": [
          {
            "$ref": "#/components/parameters/field"
          },
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/programNotificationTemplate"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ProgramNotificationTemplate with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a programNotificationTemplate by ID [DRAFT]",
        "tags": [
          "programNotificationTemplates"
        ]
      },
      "put": {
        "operationId": "updateProgramNotificationTemplate",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/programNotificationTemplate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.programNotificationTemplate.ProgramNotificationTemplate",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ProgramNotificationTemplate with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.programNotificationTemplate.ProgramNotificationTemplate",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (ProgramNotificationTemplate)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.programNotificationTemplate.ProgramNotificationTemplate",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a programNotificationTemplate [DRAFT]",
        "tags": [
          "programNotificationTemplates"
        ]
      }
    },
    "/programRuleActions": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/paging"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "pager": {
                      "$ref": "#/components/schemas/pagination"
                    },
                    "programRuleActions": {
                      "items": {
                        "$ref": "#/components/schemas/programRuleAction"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list programRuleActions [DRAFT]",
        "tags": [
          "programRuleActions"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/programRuleAction"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Created\",\n  \"httpStatusCode\": 201,\n  \"status\": \"OK\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"XLuM78pDLKu\",\n    \"klass\": \"org.hisp.dhis.programrule.ProgramRuleAction\"\n  }\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Created"
          },
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"jMyiyrOKh8E\",\n    \"klass\": \"org.hisp.dhis.programrule.ProgramRuleAction\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `programRuleActionType`.\",\n        \"mainKlass\": \"org.hisp.dhis.programrule.ProgramRuleAction\",\n        \"errorKlass\": \"org.hisp.dhis.programrule.ProgramRuleActionType\",\n        \"errorProperty\": \"programRuleActionType\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot construct instance of `org.hisp.dhis.dataelement.DataElement` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('pzyk6DJCnZZ')\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 745] (through reference chain: org.hisp.dhis.programrule.ProgramRuleAction[\\\"dataElement\\\"])\"\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create programRuleActions [DRAFT]",
        "tags": [
          "programRuleActions"
        ]
      }
    },
    "/programRuleActions/{id}": {
      "delete": {
        "operationId": "deleteProgramRuleAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.programRuleAction.ProgramRuleAction",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ProgramRuleAction with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a programRuleAction by ID [DRAFT]",
        "tags": [
          "programRuleActions"
        ]
      },
      "get": {
        "operationId": "getProgramRuleAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/field"
          },
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/programRuleAction"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ProgramRuleAction with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a programRuleAction by ID [DRAFT]",
        "tags": [
          "programRuleActions"
        ]
      },
      "put": {
        "operationId": "updateProgramRuleAction",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/programRuleAction"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.programRuleAction.ProgramRuleAction",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ProgramRuleAction with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.programRuleAction.ProgramRuleAction",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (ProgramRuleAction)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.programRuleAction.ProgramRuleAction",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a programRuleAction [DRAFT]",
        "tags": [
          "programRuleActions"
        ]
      }
    },
    "/programRuleVariables": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/paging"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "pager": {
                      "$ref": "#/components/schemas/pagination"
                    },
                    "programRuleVariables": {
                      "items": {
                        "$ref": "#/components/schemas/programRuleVariable"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list programRuleVariables [DRAFT]",
        "tags": [
          "programRuleVariables"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/programRuleVariable"
              }
            }
          }
        },
        "responses": {
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"AlyNrddNzXn\",\n    \"klass\": \"org.hisp.dhis.programrule.ProgramRuleVariable\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `programRuleVariableSourceType`.\",\n        \"mainKlass\": \"org.hisp.dhis.programrule.ProgramRuleVariable\",\n        \"errorKlass\": \"org.hisp.dhis.programrule.ProgramRuleVariableSourceType\",\n        \"errorProperty\": \"programRuleVariableSourceType\",\n        \"errorCode\": \"E4000\"\n      },\n      {\n        \"message\": \"Missing required property `program`.\",\n        \"mainKlass\": \"org.hisp.dhis.programrule.ProgramRuleVariable\",\n        \"errorKlass\": \"org.hisp.dhis.program.Program\",\n        \"errorProperty\": \"program\",\n        \"errorCode\": \"E4000\"\n      },\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.programrule.ProgramRuleVariable\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot construct instance of `org.hisp.dhis.program.Program` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('LsifP7cc0Lr')\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 255] (through reference chain: org.hisp.dhis.programrule.ProgramRuleVariable[\\\"program\\\"])\"\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create programRuleVariables [DRAFT]",
        "tags": [
          "programRuleVariables"
        ]
      }
    },
    "/programRuleVariables/{id}": {
      "delete": {
        "operationId": "deleteProgramRuleVariable",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.programRuleVariable.ProgramRuleVariable",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ProgramRuleVariable with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a programRuleVariable by ID [DRAFT]",
        "tags": [
          "programRuleVariables"
        ]
      },
      "get": {
        "operationId": "getProgramRuleVariable",
        "parameters": [
          {
            "$ref": "#/components/parameters/field"
          },
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/programRuleVariable"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ProgramRuleVariable with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a programRuleVariable by ID [DRAFT]",
        "tags": [
          "programRuleVariables"
        ]
      },
      "put": {
        "operationId": "updateProgramRuleVariable",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/programRuleVariable"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.programRuleVariable.ProgramRuleVariable",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ProgramRuleVariable with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.programRuleVariable.ProgramRuleVariable",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (ProgramRuleVariable)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.programRuleVariable.ProgramRuleVariable",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a programRuleVariable [DRAFT]",
        "tags": [
          "programRuleVariables"
        ]
      }
    },
    "/programRules": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/paging"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "pager": {
                      "$ref": "#/components/schemas/pagination"
                    },
                    "programRules": {
                      "items": {
                        "$ref": "#/components/schemas/programRule"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list programRules [DRAFT]",
        "tags": [
          "programRules"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/programRule"
              }
            }
          }
        },
        "responses": {
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"e0ZhNflxPPR\",\n    \"klass\": \"org.hisp.dhis.programrule.ProgramRule\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `program`.\",\n        \"mainKlass\": \"org.hisp.dhis.programrule.ProgramRule\",\n        \"errorKlass\": \"org.hisp.dhis.program.Program\",\n        \"errorProperty\": \"program\",\n        \"errorCode\": \"E4000\"\n      },\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.programrule.ProgramRule\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot construct instance of `org.hisp.dhis.program.Program` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('ZHOkOdf5w6a')\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 255] (through reference chain: org.hisp.dhis.programrule.ProgramRule[\\\"program\\\"])\"\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create programRules [DRAFT]",
        "tags": [
          "programRules"
        ]
      }
    },
    "/programRules/{id}": {
      "delete": {
        "operationId": "deleteProgramRule",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.programRule.ProgramRule",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ProgramRule with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a programRule by ID [DRAFT]",
        "tags": [
          "programRules"
        ]
      },
      "get": {
        "operationId": "getProgramRule",
        "parameters": [
          {
            "$ref": "#/components/parameters/field"
          },
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/programRule"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ProgramRule with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a programRule by ID [DRAFT]",
        "tags": [
          "programRules"
        ]
      },
      "put": {
        "operationId": "updateProgramRule",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/programRule"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.programRule.ProgramRule",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ProgramRule with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.programRule.ProgramRule",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (ProgramRule)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.programRule.ProgramRule",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a programRule [DRAFT]",
        "tags": [
          "programRules"
        ]
      }
    },
    "/programSections": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/paging"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "pager": {
                      "$ref": "#/components/schemas/pagination"
                    },
                    "programSections": {
                      "items": {
                        "$ref": "#/components/schemas/programSection"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list programSections [DRAFT]",
        "tags": [
          "programSections"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/programSection"
              }
            }
          }
        },
        "responses": {
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"MpWQSt4GyrD\",\n    \"klass\": \"org.hisp.dhis.program.ProgramSection\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `sortOrder`.\",\n        \"mainKlass\": \"org.hisp.dhis.program.ProgramSection\",\n        \"errorKlass\": \"java.lang.Integer\",\n        \"errorProperty\": \"sortOrder\",\n        \"errorCode\": \"E4000\"\n      },\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.program.ProgramSection\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot deserialize value of type `java.lang.Integer` from String \\\"string\\\": not a valid Integer value\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 15] (through reference chain: org.hisp.dhis.program.ProgramSection[\\\"sortOrder\\\"])\"\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create programSections [DRAFT]",
        "tags": [
          "programSections"
        ]
      }
    },
    "/programSections/{id}": {
      "delete": {
        "operationId": "deleteProgramSection",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.programSection.ProgramSection",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ProgramSection with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a programSection by ID [DRAFT]",
        "tags": [
          "programSections"
        ]
      },
      "get": {
        "operationId": "getProgramSection",
        "parameters": [
          {
            "$ref": "#/components/parameters/field"
          },
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/programSection"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ProgramSection with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a programSection by ID [DRAFT]",
        "tags": [
          "programSections"
        ]
      },
      "put": {
        "operationId": "updateProgramSection",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/programSection"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.programSection.ProgramSection",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ProgramSection with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.programSection.ProgramSection",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (ProgramSection)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.programSection.ProgramSection",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a programSection [DRAFT]",
        "tags": [
          "programSections"
        ]
      }
    },
    "/programStageSections": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/paging"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "pager": {
                      "$ref": "#/components/schemas/pagination"
                    },
                    "programStageSections": {
                      "items": {
                        "$ref": "#/components/schemas/programStageSection"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list programStageSections [DRAFT]",
        "tags": [
          "programStageSections"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/programStageSection"
              }
            }
          }
        },
        "responses": {
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"lLUqRalk4kg\",\n    \"klass\": \"org.hisp.dhis.program.ProgramStageSection\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `sortOrder`.\",\n        \"mainKlass\": \"org.hisp.dhis.program.ProgramStageSection\",\n        \"errorKlass\": \"java.lang.Integer\",\n        \"errorProperty\": \"sortOrder\",\n        \"errorCode\": \"E4000\"\n      },\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.program.ProgramStageSection\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot deserialize value of type `java.lang.Integer` from String \\\"string\\\": not a valid Integer value\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 257] (through reference chain: org.hisp.dhis.program.ProgramStageSection[\\\"sortOrder\\\"])\"\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create programStageSections [DRAFT]",
        "tags": [
          "programStageSections"
        ]
      }
    },
    "/programStageSections/{id}": {
      "delete": {
        "operationId": "deleteProgramStageSection",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.programStageSection.ProgramStageSection",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ProgramStageSection with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a programStageSection by ID [DRAFT]",
        "tags": [
          "programStageSections"
        ]
      },
      "get": {
        "operationId": "getProgramStageSection",
        "parameters": [
          {
            "$ref": "#/components/parameters/field"
          },
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/programStageSection"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ProgramStageSection with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a programStageSection by ID [DRAFT]",
        "tags": [
          "programStageSections"
        ]
      },
      "put": {
        "operationId": "updateProgramStageSection",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/programStageSection"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.programStageSection.ProgramStageSection",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ProgramStageSection with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.programStageSection.ProgramStageSection",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (ProgramStageSection)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.programStageSection.ProgramStageSection",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a programStageSection [DRAFT]",
        "tags": [
          "programStageSections"
        ]
      }
    },
    "/programStages": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/paging"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "pager": {
                      "$ref": "#/components/schemas/pagination"
                    },
                    "programStages": {
                      "items": {
                        "$ref": "#/components/schemas/programStage"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list programStages [DRAFT]",
        "tags": [
          "programStages"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/programStage"
              }
            }
          }
        },
        "responses": {
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"could not execute statement\"\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create programStages [DRAFT]",
        "tags": [
          "programStages"
        ]
      }
    },
    "/programStages/{id}": {
      "delete": {
        "operationId": "deleteProgramStage",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.programStage.ProgramStage",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ProgramStage with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a programStage by ID [DRAFT]",
        "tags": [
          "programStages"
        ]
      },
      "get": {
        "operationId": "getProgramStage",
        "parameters": [
          {
            "$ref": "#/components/parameters/field"
          },
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/programStage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ProgramStage with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a programStage by ID [DRAFT]",
        "tags": [
          "programStages"
        ]
      },
      "put": {
        "operationId": "updateProgramStage",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/programStage"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.programStage.ProgramStage",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ProgramStage with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.programStage.ProgramStage",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (ProgramStage)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.programStage.ProgramStage",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a programStage [DRAFT]",
        "tags": [
          "programStages"
        ]
      }
    },
    "/programTrackedEntityAttributeGroups": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/paging"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "pager": {
                      "$ref": "#/components/schemas/pagination"
                    },
                    "programTrackedEntityAttributeGroups": {
                      "items": {
                        "$ref": "#/components/schemas/programTrackedEntityAttributeGroup"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list programTrackedEntityAttributeGroups [DRAFT]",
        "tags": [
          "programTrackedEntityAttributeGroups"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/programTrackedEntityAttributeGroup"
              }
            }
          }
        },
        "responses": {
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"yReyNuZMOwk\",\n    \"klass\": \"org.hisp.dhis.program.ProgramTrackedEntityAttributeGroup\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.program.ProgramTrackedEntityAttributeGroup\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot construct instance of `org.hisp.dhis.user.User` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('NSoSY7VHQH4')\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 361] (through reference chain: org.hisp.dhis.program.ProgramTrackedEntityAttributeGroup[\\\"lastUpdatedBy\\\"])\"\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create programTrackedEntityAttributeGroups [DRAFT]",
        "tags": [
          "programTrackedEntityAttributeGroups"
        ]
      }
    },
    "/programTrackedEntityAttributeGroups/{id}": {
      "delete": {
        "operationId": "deleteProgramTrackedEntityAttributeGroup",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.programTrackedEntityAttributeGroup.ProgramTrackedEntityAttributeGroup",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ProgramTrackedEntityAttributeGroup with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a programTrackedEntityAttributeGroup by ID [DRAFT]",
        "tags": [
          "programTrackedEntityAttributeGroups"
        ]
      },
      "get": {
        "operationId": "getProgramTrackedEntityAttributeGroup",
        "parameters": [
          {
            "$ref": "#/components/parameters/field"
          },
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/programTrackedEntityAttributeGroup"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ProgramTrackedEntityAttributeGroup with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a programTrackedEntityAttributeGroup by ID [DRAFT]",
        "tags": [
          "programTrackedEntityAttributeGroups"
        ]
      },
      "put": {
        "operationId": "updateProgramTrackedEntityAttributeGroup",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/programTrackedEntityAttributeGroup"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.programTrackedEntityAttributeGroup.ProgramTrackedEntityAttributeGroup",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ProgramTrackedEntityAttributeGroup with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.programTrackedEntityAttributeGroup.ProgramTrackedEntityAttributeGroup",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (ProgramTrackedEntityAttributeGroup)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.programTrackedEntityAttributeGroup.ProgramTrackedEntityAttributeGroup",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a programTrackedEntityAttributeGroup [DRAFT]",
        "tags": [
          "programTrackedEntityAttributeGroups"
        ]
      }
    },
    "/programs": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/paging"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "pager": {
                      "$ref": "#/components/schemas/pagination"
                    },
                    "programs": {
                      "items": {
                        "$ref": "#/components/schemas/program"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list programs [DRAFT]",
        "tags": [
          "programs"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/program"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Created\",\n  \"httpStatusCode\": 201,\n  \"status\": \"OK\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"hOTxxhQAAgI\",\n    \"klass\": \"org.hisp.dhis.program.Program\"\n  }\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Created"
          },
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"dcTcvxOusdF\",\n    \"klass\": \"org.hisp.dhis.program.Program\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.program.Program\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      },\n      {\n        \"message\": \"Missing required property `shortName`.\",\n        \"mainKlass\": \"org.hisp.dhis.program.Program\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"shortName\",\n        \"errorCode\": \"E4000\"\n      },\n      {\n        \"message\": \"Missing required property `programType`.\",\n        \"mainKlass\": \"org.hisp.dhis.program.Program\",\n        \"errorKlass\": \"org.hisp.dhis.program.ProgramType\",\n        \"errorProperty\": \"programType\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot construct instance of `org.hisp.dhis.category.CategoryCombo` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('q28Whf8Ib65')\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 202] (through reference chain: org.hisp.dhis.program.Program[\\\"categoryCombo\\\"])\"\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create programs [DRAFT]",
        "tags": [
          "programs"
        ]
      }
    },
    "/programs/{id}": {
      "delete": {
        "operationId": "deleteProgram",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.program.Program",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Program with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a program by ID [DRAFT]",
        "tags": [
          "programs"
        ]
      },
      "get": {
        "operationId": "getProgram",
        "parameters": [
          {
            "$ref": "#/components/parameters/field"
          },
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/program"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Program with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a program by ID [DRAFT]",
        "tags": [
          "programs"
        ]
      },
      "put": {
        "operationId": "updateProgram",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/program"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.program.Program",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Program with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.program.Program",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (Program)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.program.Program",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a program [DRAFT]",
        "tags": [
          "programs"
        ]
      }
    },
    "/pushAnalysis": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/paging"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "pager": {
                      "$ref": "#/components/schemas/pagination"
                    },
                    "pushAnalysis": {
                      "items": {
                        "$ref": "#/components/schemas/pushAnalysi"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list pushAnalysis [DRAFT]",
        "tags": [
          "pushAnalysis"
        ]
      }
    },
    "/pushAnalysis/{id}": {
      "delete": {
        "operationId": "deletePushAnalysi",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.pushAnalysi.PushAnalysi",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "PushAnalysi with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a pushAnalysi by ID [DRAFT]",
        "tags": [
          "pushAnalysis"
        ]
      },
      "get": {
        "operationId": "getPushAnalysi",
        "parameters": [
          {
            "$ref": "#/components/parameters/field"
          },
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/pushAnalysi"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "PushAnalysi with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a pushAnalysi by ID [DRAFT]",
        "tags": [
          "pushAnalysis"
        ]
      },
      "put": {
        "operationId": "updatePushAnalysi",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/pushAnalysi"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.pushAnalysi.PushAnalysi",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "PushAnalysi with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.pushAnalysi.PushAnalysi",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (PushAnalysi)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.pushAnalysi.PushAnalysi",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a pushAnalysi [DRAFT]",
        "tags": [
          "pushAnalysis"
        ]
      }
    },
    "/relationshipTypes": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/paging"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "pager": {
                      "$ref": "#/components/schemas/pagination"
                    },
                    "relationshipTypes": {
                      "items": {
                        "$ref": "#/components/schemas/relationshipType"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list relationshipTypes [DRAFT]",
        "tags": [
          "relationshipTypes"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/relationshipType"
              }
            }
          }
        },
        "responses": {
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"iRxUCXqPIpZ\",\n    \"klass\": \"org.hisp.dhis.relationship.RelationshipType\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `leftConstraint`.\",\n        \"mainKlass\": \"org.hisp.dhis.relationship.RelationshipType\",\n        \"errorCode\": \"E4000\"\n      },\n      {\n        \"message\": \"Missing required property `rightConstraint`.\",\n        \"mainKlass\": \"org.hisp.dhis.relationship.RelationshipType\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot construct instance of `org.hisp.dhis.user.User` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('nJ7dZzKDlz5')\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 940] (through reference chain: org.hisp.dhis.relationship.RelationshipType[\\\"lastUpdatedBy\\\"])\"\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create relationshipTypes [DRAFT]",
        "tags": [
          "relationshipTypes"
        ]
      }
    },
    "/relationshipTypes/{id}": {
      "delete": {
        "operationId": "deleteRelationshipType",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.relationshipType.RelationshipType",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "RelationshipType with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a relationshipType by ID [DRAFT]",
        "tags": [
          "relationshipTypes"
        ]
      },
      "get": {
        "operationId": "getRelationshipType",
        "parameters": [
          {
            "$ref": "#/components/parameters/field"
          },
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/relationshipType"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "RelationshipType with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a relationshipType by ID [DRAFT]",
        "tags": [
          "relationshipTypes"
        ]
      },
      "put": {
        "operationId": "updateRelationshipType",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/relationshipType"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.relationshipType.RelationshipType",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "RelationshipType with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.relationshipType.RelationshipType",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (RelationshipType)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.relationshipType.RelationshipType",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a relationshipType [DRAFT]",
        "tags": [
          "relationshipTypes"
        ]
      }
    },
    "/reportTables": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/paging"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "pager": {
                      "$ref": "#/components/schemas/pagination"
                    },
                    "reportTables": {
                      "items": {
                        "$ref": "#/components/schemas/reportTable"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list reportTables [DRAFT]",
        "tags": [
          "reportTables"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/reportTable"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Created\",\n  \"httpStatusCode\": 201,\n  \"status\": \"OK\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"QshPuz3cu4h\",\n    \"klass\": \"org.hisp.dhis.reporttable.ReportTable\"\n  }\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Created"
          },
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"fINnJjt9TZy\",\n    \"klass\": \"org.hisp.dhis.reporttable.ReportTable\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.reporttable.ReportTable\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot construct instance of `org.hisp.dhis.user.User` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('yHAKLKdDm2a')\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 2897] (through reference chain: org.hisp.dhis.reporttable.ReportTable[\\\"lastUpdatedBy\\\"])\"\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create reportTables [DRAFT]",
        "tags": [
          "reportTables"
        ]
      }
    },
    "/reportTables/{id}": {
      "delete": {
        "operationId": "deleteReportTable",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.reportTable.ReportTable",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ReportTable with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a reportTable by ID [DRAFT]",
        "tags": [
          "reportTables"
        ]
      },
      "get": {
        "operationId": "getReportTable",
        "parameters": [
          {
            "$ref": "#/components/parameters/field"
          },
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/reportTable"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ReportTable with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a reportTable by ID [DRAFT]",
        "tags": [
          "reportTables"
        ]
      },
      "put": {
        "operationId": "updateReportTable",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/reportTable"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.reportTable.ReportTable",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ReportTable with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.reportTable.ReportTable",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (ReportTable)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.reportTable.ReportTable",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a reportTable [DRAFT]",
        "tags": [
          "reportTables"
        ]
      }
    },
    "/reports": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/paging"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "pager": {
                      "$ref": "#/components/schemas/pagination"
                    },
                    "reports": {
                      "items": {
                        "$ref": "#/components/schemas/report"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list reports [DRAFT]",
        "tags": [
          "reports"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/report"
              }
            }
          }
        },
        "responses": {
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"St6MNTLJUcO\",\n    \"klass\": \"org.hisp.dhis.report.Report\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.report.Report\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"could not execute statement\"\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create reports [DRAFT]",
        "tags": [
          "reports"
        ]
      }
    },
    "/reports/{id}": {
      "delete": {
        "operationId": "deleteReport",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.report.Report",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Report with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a report by ID [DRAFT]",
        "tags": [
          "reports"
        ]
      },
      "get": {
        "operationId": "getReport",
        "parameters": [
          {
            "$ref": "#/components/parameters/field"
          },
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/report"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Report with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a report by ID [DRAFT]",
        "tags": [
          "reports"
        ]
      },
      "put": {
        "operationId": "updateReport",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/report"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.report.Report",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Report with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.report.Report",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (Report)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.report.Report",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a report [DRAFT]",
        "tags": [
          "reports"
        ]
      }
    },
    "/sections": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/paging"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "pager": {
                      "$ref": "#/components/schemas/pagination"
                    },
                    "sections": {
                      "items": {
                        "$ref": "#/components/schemas/section"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list sections [DRAFT]",
        "tags": [
          "sections"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/section"
              }
            }
          }
        },
        "responses": {
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"MCfyqUQTq4H\",\n    \"klass\": \"org.hisp.dhis.dataset.Section\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `dataSet`.\",\n        \"mainKlass\": \"org.hisp.dhis.dataset.Section\",\n        \"errorKlass\": \"org.hisp.dhis.dataset.DataSet\",\n        \"errorProperty\": \"dataSet\",\n        \"errorCode\": \"E4000\"\n      },\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.dataset.Section\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot construct instance of `org.hisp.dhis.dataset.DataSet` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('L6rvxbIQpzT')\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 13] (through reference chain: org.hisp.dhis.dataset.Section[\\\"dataSet\\\"])\"\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create sections [DRAFT]",
        "tags": [
          "sections"
        ]
      }
    },
    "/sections/{id}": {
      "delete": {
        "operationId": "deleteSection",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.section.Section",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Section with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a section by ID [DRAFT]",
        "tags": [
          "sections"
        ]
      },
      "get": {
        "operationId": "getSection",
        "parameters": [
          {
            "$ref": "#/components/parameters/field"
          },
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/section"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Section with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a section by ID [DRAFT]",
        "tags": [
          "sections"
        ]
      },
      "put": {
        "operationId": "updateSection",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/section"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.section.Section",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "Section with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.section.Section",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (Section)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.section.Section",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a section [DRAFT]",
        "tags": [
          "sections"
        ]
      }
    },
    "/smsCommands": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/paging"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "pager": {
                      "$ref": "#/components/schemas/pagination"
                    },
                    "smsCommands": {
                      "items": {
                        "$ref": "#/components/schemas/smsCommand"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list smsCommands [DRAFT]",
        "tags": [
          "smsCommands"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/smsCommand"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Created\",\n  \"httpStatusCode\": 201,\n  \"status\": \"OK\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"fyITrPlTomf\",\n    \"klass\": \"org.hisp.dhis.sms.command.SMSCommand\"\n  }\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Created"
          }
        },
        "summary": "create smsCommands [DRAFT]",
        "tags": [
          "smsCommands"
        ]
      }
    },
    "/smsCommands/{id}": {
      "delete": {
        "operationId": "deleteSmsCommand",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.smsCommand.SmsCommand",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "SmsCommand with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a smsCommand by ID [DRAFT]",
        "tags": [
          "smsCommands"
        ]
      },
      "get": {
        "operationId": "getSmsCommand",
        "parameters": [
          {
            "$ref": "#/components/parameters/field"
          },
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/smsCommand"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "SmsCommand with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a smsCommand by ID [DRAFT]",
        "tags": [
          "smsCommands"
        ]
      },
      "put": {
        "operationId": "updateSmsCommand",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/smsCommand"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.smsCommand.SmsCommand",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "SmsCommand with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.smsCommand.SmsCommand",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (SmsCommand)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.smsCommand.SmsCommand",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a smsCommand [DRAFT]",
        "tags": [
          "smsCommands"
        ]
      }
    },
    "/sqlViews": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/paging"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "pager": {
                      "$ref": "#/components/schemas/pagination"
                    },
                    "sqlViews": {
                      "items": {
                        "$ref": "#/components/schemas/sqlView"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list sqlViews [DRAFT]",
        "tags": [
          "sqlViews"
        ]
      },
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/preheatCache"
          },
          {
            "$ref": "#/components/parameters/strategy"
          },
          {
            "$ref": "#/components/parameters/mergeMode"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/sqlView"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Created\",\n  \"httpStatusCode\": 201,\n  \"status\": \"OK\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"RY51Lpa78Ah\",\n    \"klass\": \"org.hisp.dhis.sqlview.SqlView\"\n  }\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Created"
          },
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"piRVZq6uej4\",\n    \"klass\": \"org.hisp.dhis.sqlview.SqlView\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `sqlQuery`.\",\n        \"mainKlass\": \"org.hisp.dhis.sqlview.SqlView\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"sqlQuery\",\n        \"errorCode\": \"E4000\"\n      },\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.sqlview.SqlView\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot construct instance of `org.hisp.dhis.user.User` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('jeQgLdWMpUW')\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 908] (through reference chain: org.hisp.dhis.sqlview.SqlView[\\\"lastUpdatedBy\\\"])\"\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create sqlViews [DRAFT]",
        "tags": [
          "sqlViews"
        ]
      }
    },
    "/sqlViews/{id}": {
      "delete": {
        "operationId": "deleteSqlView",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.sqlView.SqlView",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "SqlView with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a sqlView by ID [DRAFT]",
        "tags": [
          "sqlViews"
        ]
      },
      "get": {
        "operationId": "getSqlView",
        "parameters": [
          {
            "$ref": "#/components/parameters/field"
          },
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/sqlView"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "SqlView with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a sqlView by ID [DRAFT]",
        "tags": [
          "sqlViews"
        ]
      },
      "put": {
        "operationId": "updateSqlView",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/sqlView"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.sqlView.SqlView",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "SqlView with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.sqlView.SqlView",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (SqlView)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.sqlView.SqlView",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a sqlView [DRAFT]",
        "tags": [
          "sqlViews"
        ]
      }
    },
    "/trackedEntityAttributes": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/paging"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "pager": {
                      "$ref": "#/components/schemas/pagination"
                    },
                    "trackedEntityAttributes": {
                      "items": {
                        "$ref": "#/components/schemas/trackedEntityAttribute"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list trackedEntityAttributes [DRAFT]",
        "tags": [
          "trackedEntityAttributes"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/trackedEntityAttribute"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Created\",\n  \"httpStatusCode\": 201,\n  \"status\": \"OK\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"XTODygqVz9q\",\n    \"klass\": \"org.hisp.dhis.trackedentity.TrackedEntityAttribute\"\n  }\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Created"
          },
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"BTd8Ic3rAip\",\n    \"klass\": \"org.hisp.dhis.trackedentity.TrackedEntityAttribute\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `aggregationType`.\",\n        \"mainKlass\": \"org.hisp.dhis.trackedentity.TrackedEntityAttribute\",\n        \"errorKlass\": \"org.hisp.dhis.analytics.AggregationType\",\n        \"errorProperty\": \"aggregationType\",\n        \"errorCode\": \"E4000\"\n      },\n      {\n        \"message\": \"Missing required property `valueType`.\",\n        \"mainKlass\": \"org.hisp.dhis.trackedentity.TrackedEntityAttribute\",\n        \"errorKlass\": \"org.hisp.dhis.common.ValueType\",\n        \"errorProperty\": \"valueType\",\n        \"errorCode\": \"E4000\"\n      },\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.trackedentity.TrackedEntityAttribute\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot construct instance of `org.hisp.dhis.user.User` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('yTJsp3CoqyL')\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 2219] (through reference chain: org.hisp.dhis.trackedentity.TrackedEntityAttribute[\\\"lastUpdatedBy\\\"])\"\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create trackedEntityAttributes [DRAFT]",
        "tags": [
          "trackedEntityAttributes"
        ]
      }
    },
    "/trackedEntityAttributes/{id}": {
      "delete": {
        "operationId": "deleteTrackedEntityAttribute",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.trackedEntityAttribute.TrackedEntityAttribute",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "TrackedEntityAttribute with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a trackedEntityAttribute by ID [DRAFT]",
        "tags": [
          "trackedEntityAttributes"
        ]
      },
      "get": {
        "operationId": "getTrackedEntityAttribute",
        "parameters": [
          {
            "$ref": "#/components/parameters/field"
          },
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/trackedEntityAttribute"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "TrackedEntityAttribute with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a trackedEntityAttribute by ID [DRAFT]",
        "tags": [
          "trackedEntityAttributes"
        ]
      },
      "put": {
        "operationId": "updateTrackedEntityAttribute",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/trackedEntityAttribute"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.trackedEntityAttribute.TrackedEntityAttribute",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "TrackedEntityAttribute with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.trackedEntityAttribute.TrackedEntityAttribute",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (TrackedEntityAttribute)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.trackedEntityAttribute.TrackedEntityAttribute",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a trackedEntityAttribute [DRAFT]",
        "tags": [
          "trackedEntityAttributes"
        ]
      }
    },
    "/trackedEntityInstances": {
      "get": {
        "description": "list tracked entity instances (TEIs)",
        "parameters": [
          {
            "$ref": "#/components/parameters/paging"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "pager": {
                      "$ref": "#/components/schemas/pagination"
                    },
                    "trackedEntityInstances": {
                      "items": {
                        "$ref": "#/components/schemas/trackedEntityInstance"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    }
                  }
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "At least one organisation unit must be specified",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "list trackedEntityInstances [DRAFT]",
        "tags": [
          "trackedEntityInstances"
        ]
      },
      "post": {
        "description": "create a new tracked entity instance",
        "parameters": [
          {
            "$ref": "#/components/parameters/preheatCache"
          },
          {
            "$ref": "#/components/parameters/strategy"
          },
          {
            "$ref": "#/components/parameters/mergeMode"
          }
        ],
        "responses": {},
        "tags": [
          "trackedEntityInstances"
        ]
      }
    },
    "/trackedEntityInstances/{id}": {
      "delete": {
        "operationId": "deleteTrackedEntityInstance",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.trackedEntityInstance.TrackedEntityInstance",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "TrackedEntityInstance with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a trackedEntityInstance by ID [DRAFT]",
        "tags": [
          "trackedEntityInstances"
        ]
      },
      "get": {
        "operationId": "getTrackedEntityInstance",
        "parameters": [
          {
            "$ref": "#/components/parameters/field"
          },
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/trackedEntityInstance"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "TrackedEntityInstance with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a trackedEntityInstance by ID [DRAFT]",
        "tags": [
          "trackedEntityInstances"
        ]
      },
      "put": {
        "operationId": "updateTrackedEntityInstance",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/trackedEntityInstance"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.trackedEntityInstance.TrackedEntityInstance",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "TrackedEntityInstance with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.trackedEntityInstance.TrackedEntityInstance",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (TrackedEntityInstance)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.trackedEntityInstance.TrackedEntityInstance",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a trackedEntityInstance [DRAFT]",
        "tags": [
          "trackedEntityInstances"
        ]
      }
    },
    "/trackedEntityTypes": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/paging"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "pager": {
                      "$ref": "#/components/schemas/pagination"
                    },
                    "trackedEntityTypes": {
                      "items": {
                        "$ref": "#/components/schemas/trackedEntityType"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list trackedEntityTypes [DRAFT]",
        "tags": [
          "trackedEntityTypes"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/trackedEntityType"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Created\",\n  \"httpStatusCode\": 201,\n  \"status\": \"OK\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"kgKu2cxfwdy\",\n    \"klass\": \"org.hisp.dhis.trackedentity.TrackedEntityType\"\n  }\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Created"
          },
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"ZjB8dFDD2HI\",\n    \"klass\": \"org.hisp.dhis.trackedentity.TrackedEntityType\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.trackedentity.TrackedEntityType\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot construct instance of `org.hisp.dhis.user.User` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('EnN7GxDdxk3')\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 1733] (through reference chain: org.hisp.dhis.trackedentity.TrackedEntityType[\\\"lastUpdatedBy\\\"])\"\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create trackedEntityTypes [DRAFT]",
        "tags": [
          "trackedEntityTypes"
        ]
      }
    },
    "/trackedEntityTypes/{id}": {
      "delete": {
        "operationId": "deleteTrackedEntityType",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.trackedEntityType.TrackedEntityType",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "TrackedEntityType with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a trackedEntityType by ID [DRAFT]",
        "tags": [
          "trackedEntityTypes"
        ]
      },
      "get": {
        "operationId": "getTrackedEntityType",
        "parameters": [
          {
            "$ref": "#/components/parameters/field"
          },
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/trackedEntityType"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "TrackedEntityType with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a trackedEntityType by ID [DRAFT]",
        "tags": [
          "trackedEntityTypes"
        ]
      },
      "put": {
        "operationId": "updateTrackedEntityType",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/trackedEntityType"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.trackedEntityType.TrackedEntityType",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "TrackedEntityType with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.trackedEntityType.TrackedEntityType",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (TrackedEntityType)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.trackedEntityType.TrackedEntityType",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a trackedEntityType [DRAFT]",
        "tags": [
          "trackedEntityTypes"
        ]
      }
    },
    "/userGroups": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/paging"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "pager": {
                      "$ref": "#/components/schemas/pagination"
                    },
                    "userGroups": {
                      "items": {
                        "$ref": "#/components/schemas/userGroup"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list userGroups [DRAFT]",
        "tags": [
          "userGroups"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/userGroup"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Created\",\n  \"httpStatusCode\": 201,\n  \"status\": \"OK\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"BRsdsJ3nNlO\",\n    \"klass\": \"org.hisp.dhis.user.UserGroup\"\n  }\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Created"
          },
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"pyKerJLdC7C\",\n    \"klass\": \"org.hisp.dhis.user.UserGroup\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.user.UserGroup\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot construct instance of `org.hisp.dhis.user.User` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('sKxA983Ir3C')\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 605] (through reference chain: org.hisp.dhis.user.UserGroup[\\\"lastUpdatedBy\\\"])\"\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create userGroups [DRAFT]",
        "tags": [
          "userGroups"
        ]
      }
    },
    "/userGroups/{id}": {
      "delete": {
        "operationId": "deleteUserGroup",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.userGroup.UserGroup",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "UserGroup with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a userGroup by ID [DRAFT]",
        "tags": [
          "userGroups"
        ]
      },
      "get": {
        "operationId": "getUserGroup",
        "parameters": [
          {
            "$ref": "#/components/parameters/field"
          },
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/userGroup"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "UserGroup with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a userGroup by ID [DRAFT]",
        "tags": [
          "userGroups"
        ]
      },
      "put": {
        "operationId": "updateUserGroup",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/userGroup"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.userGroup.UserGroup",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "UserGroup with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.userGroup.UserGroup",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (UserGroup)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.userGroup.UserGroup",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a userGroup [DRAFT]",
        "tags": [
          "userGroups"
        ]
      }
    },
    "/userRoles": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/paging"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "pager": {
                      "$ref": "#/components/schemas/pagination"
                    },
                    "userRoles": {
                      "items": {
                        "$ref": "#/components/schemas/userRole"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list userRoles [DRAFT]",
        "tags": [
          "userRoles"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/userRole"
              }
            }
          }
        },
        "responses": {
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"V5T57w3h1FA\",\n    \"klass\": \"org.hisp.dhis.user.UserAuthorityGroup\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.user.UserAuthorityGroup\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"could not execute statement\"\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create userRoles [DRAFT]",
        "tags": [
          "userRoles"
        ]
      }
    },
    "/userRoles/{id}": {
      "delete": {
        "operationId": "deleteUserRole",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.userRole.UserRole",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "UserRole with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a userRole by ID [DRAFT]",
        "tags": [
          "userRoles"
        ]
      },
      "get": {
        "operationId": "getUserRole",
        "parameters": [
          {
            "$ref": "#/components/parameters/field"
          },
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/userRole"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "UserRole with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a userRole by ID [DRAFT]",
        "tags": [
          "userRoles"
        ]
      },
      "put": {
        "operationId": "updateUserRole",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/userRole"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.userRole.UserRole",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "UserRole with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.userRole.UserRole",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (UserRole)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.userRole.UserRole",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a userRole [DRAFT]",
        "tags": [
          "userRoles"
        ]
      }
    },
    "/users": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/paging"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "pager": {
                      "$ref": "#/components/schemas/pagination"
                    },
                    "users": {
                      "items": {
                        "$ref": "#/components/schemas/user"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list users [DRAFT]",
        "tags": [
          "users"
        ]
      }
    },
    "/users/{id}": {
      "delete": {
        "operationId": "deleteUser",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.user.User",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "User with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a user by ID [DRAFT]",
        "tags": [
          "users"
        ]
      },
      "get": {
        "operationId": "getUser",
        "parameters": [
          {
            "$ref": "#/components/parameters/field"
          },
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "User with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a user by ID [DRAFT]",
        "tags": [
          "users"
        ]
      },
      "put": {
        "operationId": "updateUser",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/user"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.user.User",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "User with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.user.User",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (User)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.user.User",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a user [DRAFT]",
        "tags": [
          "users"
        ]
      }
    },
    "/validationNotificationTemplates": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/paging"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "pager": {
                      "$ref": "#/components/schemas/pagination"
                    },
                    "validationNotificationTemplates": {
                      "items": {
                        "$ref": "#/components/schemas/validationNotificationTemplate"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list validationNotificationTemplates [DRAFT]",
        "tags": [
          "validationNotificationTemplates"
        ]
      }
    },
    "/validationNotificationTemplates/{id}": {
      "delete": {
        "operationId": "deleteValidationNotificationTemplate",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.validationNotificationTemplate.ValidationNotificationTemplate",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ValidationNotificationTemplate with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a validationNotificationTemplate by ID [DRAFT]",
        "tags": [
          "validationNotificationTemplates"
        ]
      },
      "get": {
        "operationId": "getValidationNotificationTemplate",
        "parameters": [
          {
            "$ref": "#/components/parameters/field"
          },
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/validationNotificationTemplate"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ValidationNotificationTemplate with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a validationNotificationTemplate by ID [DRAFT]",
        "tags": [
          "validationNotificationTemplates"
        ]
      },
      "put": {
        "operationId": "updateValidationNotificationTemplate",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/validationNotificationTemplate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.validationNotificationTemplate.ValidationNotificationTemplate",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ValidationNotificationTemplate with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.validationNotificationTemplate.ValidationNotificationTemplate",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (ValidationNotificationTemplate)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.validationNotificationTemplate.ValidationNotificationTemplate",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a validationNotificationTemplate [DRAFT]",
        "tags": [
          "validationNotificationTemplates"
        ]
      }
    },
    "/validationResults": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/paging"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "pager": {
                      "$ref": "#/components/schemas/pagination"
                    },
                    "validationResults": {
                      "items": {
                        "$ref": "#/components/schemas/validationResult"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list validationResults [DRAFT]",
        "tags": [
          "validationResults"
        ]
      }
    },
    "/validationResults/{id}": {
      "delete": {
        "operationId": "deleteValidationResult",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.validationResult.ValidationResult",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ValidationResult with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a validationResult by ID [DRAFT]",
        "tags": [
          "validationResults"
        ]
      },
      "get": {
        "operationId": "getValidationResult",
        "parameters": [
          {
            "$ref": "#/components/parameters/field"
          },
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/validationResult"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ValidationResult with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a validationResult by ID [DRAFT]",
        "tags": [
          "validationResults"
        ]
      },
      "put": {
        "operationId": "updateValidationResult",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/validationResult"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.validationResult.ValidationResult",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ValidationResult with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.validationResult.ValidationResult",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (ValidationResult)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.validationResult.ValidationResult",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a validationResult [DRAFT]",
        "tags": [
          "validationResults"
        ]
      }
    },
    "/validationRuleGroups": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/paging"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "pager": {
                      "$ref": "#/components/schemas/pagination"
                    },
                    "validationRuleGroups": {
                      "items": {
                        "$ref": "#/components/schemas/validationRuleGroup"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list validationRuleGroups [DRAFT]",
        "tags": [
          "validationRuleGroups"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/validationRuleGroup"
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Created\",\n  \"httpStatusCode\": 201,\n  \"status\": \"OK\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"tNOLvY38bdk\",\n    \"klass\": \"org.hisp.dhis.validation.ValidationRuleGroup\"\n  }\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Created"
          },
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"e25bTHAlPo3\",\n    \"klass\": \"org.hisp.dhis.validation.ValidationRuleGroup\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.validation.ValidationRuleGroup\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot construct instance of `org.hisp.dhis.user.User` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value ('TlL4tHV7EWA')\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 918] (through reference chain: org.hisp.dhis.validation.ValidationRuleGroup[\\\"lastUpdatedBy\\\"])\"\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create validationRuleGroups [DRAFT]",
        "tags": [
          "validationRuleGroups"
        ]
      }
    },
    "/validationRuleGroups/{id}": {
      "delete": {
        "operationId": "deleteValidationRuleGroup",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.validationRuleGroup.ValidationRuleGroup",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ValidationRuleGroup with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a validationRuleGroup by ID [DRAFT]",
        "tags": [
          "validationRuleGroups"
        ]
      },
      "get": {
        "operationId": "getValidationRuleGroup",
        "parameters": [
          {
            "$ref": "#/components/parameters/field"
          },
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/validationRuleGroup"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ValidationRuleGroup with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a validationRuleGroup by ID [DRAFT]",
        "tags": [
          "validationRuleGroups"
        ]
      },
      "put": {
        "operationId": "updateValidationRuleGroup",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/validationRuleGroup"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.validationRuleGroup.ValidationRuleGroup",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ValidationRuleGroup with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.validationRuleGroup.ValidationRuleGroup",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (ValidationRuleGroup)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.validationRuleGroup.ValidationRuleGroup",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a validationRuleGroup [DRAFT]",
        "tags": [
          "validationRuleGroups"
        ]
      }
    },
    "/validationRules": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/paging"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/field"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "pager": {
                      "$ref": "#/components/schemas/pagination"
                    },
                    "validationRules": {
                      "items": {
                        "$ref": "#/components/schemas/validationRule"
                      },
                      "maxItems": 2147483647,
                      "minItems": 0,
                      "readOnly": false,
                      "type": "array"
                    }
                  }
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "list validationRules [DRAFT]",
        "tags": [
          "validationRules"
        ]
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/validationRule"
              }
            }
          }
        },
        "responses": {
          "409": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Conflict\",\n  \"httpStatusCode\": 409,\n  \"status\": \"ERROR\",\n  \"message\": \"One more more errors occurred, please see full details in import report.\",\n  \"response\": {\n    \"responseType\": \"ObjectReport\",\n    \"uid\": \"XrbWrkKH54N\",\n    \"klass\": \"org.hisp.dhis.validation.ValidationRule\",\n    \"errorReports\": [\n      {\n        \"message\": \"Missing required property `operator`.\",\n        \"mainKlass\": \"org.hisp.dhis.validation.ValidationRule\",\n        \"errorKlass\": \"org.hisp.dhis.expression.Operator\",\n        \"errorProperty\": \"operator\",\n        \"errorCode\": \"E4000\"\n      },\n      {\n        \"message\": \"Missing required property `leftSide`.\",\n        \"mainKlass\": \"org.hisp.dhis.validation.ValidationRule\",\n        \"errorKlass\": \"org.hisp.dhis.expression.Expression\",\n        \"errorProperty\": \"leftSide\",\n        \"errorCode\": \"E4000\"\n      },\n      {\n        \"message\": \"Missing required property `rightSide`.\",\n        \"mainKlass\": \"org.hisp.dhis.validation.ValidationRule\",\n        \"errorKlass\": \"org.hisp.dhis.expression.Expression\",\n        \"errorProperty\": \"rightSide\",\n        \"errorCode\": \"E4000\"\n      },\n      {\n        \"message\": \"Missing required property `periodType`.\",\n        \"mainKlass\": \"org.hisp.dhis.validation.ValidationRule\",\n        \"errorKlass\": \"org.hisp.dhis.period.PeriodType\",\n        \"errorProperty\": \"periodType\",\n        \"errorCode\": \"E4000\"\n      },\n      {\n        \"message\": \"Missing required property `name`.\",\n        \"mainKlass\": \"org.hisp.dhis.validation.ValidationRule\",\n        \"errorKlass\": \"java.lang.String\",\n        \"errorProperty\": \"name\",\n        \"errorCode\": \"E4000\"\n      }\n    ]\n  }\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "example": "{\n  \"httpStatus\": \"Internal Server Error\",\n  \"httpStatusCode\": 500,\n  \"status\": \"ERROR\",\n  \"message\": \"Cannot deserialize value of type `org.hisp.dhis.expression.Operator` from String \\\"myoperator\\\": value not one of declared Enum instance names: [compulsory_pair, not_equal_to, equal_to, less_than, greater_than_or_equal_to, less_than_or_equal_to, exclusive_pair, greater_than]\\n at [Source: (org.apache.catalina.connector.CoyoteInputStream); line: 1, column: 272] (through reference chain: org.hisp.dhis.validation.ValidationRule[\\\"operator\\\"])\"\n}",
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "create validationRules [DRAFT]",
        "tags": [
          "validationRules"
        ]
      }
    },
    "/validationRules/{id}": {
      "delete": {
        "operationId": "deleteValidationRule",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "OK",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.validationRule.ValidationRule",
                    "responseType": "ObjectReport",
                    "uid": "FuG5VuW9VEB"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ValidationRule with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "delete a validationRule by ID [DRAFT]",
        "tags": [
          "validationRules"
        ]
      },
      "get": {
        "operationId": "getValidationRule",
        "parameters": [
          {
            "$ref": "#/components/parameters/field"
          },
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/validationRule"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ValidationRule with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          }
        },
        "summary": "get a validationRule by ID [DRAFT]",
        "tags": [
          "validationRules"
        ]
      },
      "put": {
        "operationId": "updateValidationRule",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/validationRule"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Created",
                  "httpStatusCode": 200,
                  "response": {
                    "klass": "org.hisp.dhis.validationRule.ValidationRule",
                    "responseType": "ObjectReport",
                    "uid": "n0fDatA2aGT"
                  },
                  "status": "OK"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "OK",
                  "type": "string"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Not Found",
                  "httpStatusCode": 404,
                  "message": "ValidationRule with id FuG5VuW9VB could not be found.",
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "example": {
                  "httpStatus": "Conflict",
                  "httpStatusCode": 409,
                  "message": "One more more errors occurred, please see full details in import report.",
                  "response": {
                    "errorReports": [
                      {
                        "errorCode": "E5003",
                        "errorProperty": "shortName",
                        "mainId": "QOnFkMZOLiD",
                        "mainKlass": "org.hisp.dhis.validationRule.ValidationRule",
                        "message": "Property `shortName`\u00a0with value `string` on object string [FuG5VuW9VEB] (ValidationRule)\u00a0already exists on object QOnFkMZOLiD."
                      }
                    ],
                    "klass": "org.hisp.dhis.validationRule.ValidationRule",
                    "responseType": "ObjectReport"
                  },
                  "status": "ERROR"
                },
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Conflict"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webmessage"
                }
              },
              "text/plain": {
                "schema": {
                  "example": "ERROR",
                  "type": "string"
                }
              }
            },
            "description": "Internal Server Error"
          }
        },
        "summary": "update a validationRule [DRAFT]",
        "tags": [
          "validationRules"
        ]
      }
    }
  },
  "security": [
    {
      "basicAuth": []
    },
    {
      "oAuth": []
    }
  ],
  "servers": [
    {
      "description": "localhost",
      "url": "http://localhost:8080/api"
    },
    {
      "description": "DHIS2 demo server",
      "url": "https://play.dhis2.org/2.31/api"
    }
  ],
  "tags": [
    {
      "description": "/",
      "name": "",
      "x-status": "draft"
    },
    {
      "description": "",
      "name": "analyticsTableHooks"
    },
    {
      "description": "",
      "name": "attributes"
    },
    {
      "description": "",
      "name": "categories"
    },
    {
      "description": "",
      "name": "categoryCombos"
    },
    {
      "description": "",
      "name": "categoryOptionCombos"
    },
    {
      "description": "",
      "name": "categoryOptionGroupSets"
    },
    {
      "description": "",
      "name": "categoryOptionGroups"
    },
    {
      "description": "",
      "name": "categoryOptions"
    },
    {
      "description": "",
      "name": "charts"
    },
    {
      "description": "",
      "name": "colorSets"
    },
    {
      "description": "Constants are static values which can be made available to users for use in data elements and indicators. Some indicators, such as \"Couple year protection rate\" depend on constants which usually do not change over time.",
      "name": "constants",
      "x-status": "draft"
    },
    {
      "description": "",
      "name": "dashboardItems"
    },
    {
      "description": "",
      "name": "dashboards"
    },
    {
      "description": "",
      "name": "dataApprovalLevels"
    },
    {
      "description": "",
      "name": "dataApprovalWorkflows"
    },
    {
      "description": "",
      "name": "dataElementGroupSets"
    },
    {
      "description": "",
      "name": "dataElementGroups"
    },
    {
      "description": "",
      "name": "dataElementOperands"
    },
    {
      "description": "",
      "name": "dataElements"
    },
    {
      "description": "",
      "name": "dataEntryForms"
    },
    {
      "description": "",
      "name": "dataSetNotificationTemplates"
    },
    {
      "description": "",
      "name": "dataSets"
    },
    {
      "description": "",
      "name": "documents"
    },
    {
      "description": "",
      "name": "eventCharts"
    },
    {
      "description": "",
      "name": "eventReports"
    },
    {
      "description": "",
      "name": "externalFileResources"
    },
    {
      "description": "",
      "name": "externalMapLayers"
    },
    {
      "description": "",
      "name": "fileResources"
    },
    {
      "description": "",
      "name": "indicatorGroupSets"
    },
    {
      "description": "",
      "name": "indicatorGroups"
    },
    {
      "description": "",
      "name": "indicatorTypes"
    },
    {
      "description": "",
      "name": "indicators"
    },
    {
      "description": "",
      "name": "interpretations"
    },
    {
      "description": "",
      "name": "jobConfigurations"
    },
    {
      "description": "",
      "name": "legendSets"
    },
    {
      "description": "",
      "name": "mapViews"
    },
    {
      "description": "",
      "name": "maps"
    },
    {
      "description": "",
      "name": "messageConversations"
    },
    {
      "description": "",
      "name": "metadata/version"
    },
    {
      "description": "",
      "name": "minMaxDataElements"
    },
    {
      "description": "",
      "name": "oAuth2Clients"
    },
    {
      "description": "",
      "name": "optionGroupSets"
    },
    {
      "description": "",
      "name": "optionGroups"
    },
    {
      "description": "",
      "name": "optionSets"
    },
    {
      "description": "",
      "name": "options"
    },
    {
      "description": "",
      "name": "organisationUnitGroupSets"
    },
    {
      "description": "",
      "name": "organisationUnitGroups"
    },
    {
      "description": "",
      "name": "organisationUnitLevels"
    },
    {
      "description": "",
      "name": "organisationUnits"
    },
    {
      "description": "",
      "name": "predictors"
    },
    {
      "description": "",
      "name": "programDataElements"
    },
    {
      "description": "",
      "name": "programIndicatorGroups"
    },
    {
      "description": "",
      "name": "programIndicators"
    },
    {
      "description": "",
      "name": "programNotificationTemplates"
    },
    {
      "description": "",
      "name": "programRuleActions"
    },
    {
      "description": "",
      "name": "programRuleVariables"
    },
    {
      "description": "",
      "name": "programRules"
    },
    {
      "description": "",
      "name": "programSections"
    },
    {
      "description": "",
      "name": "programStageSections"
    },
    {
      "description": "",
      "name": "programStages"
    },
    {
      "description": "",
      "name": "programTrackedEntityAttributeGroups"
    },
    {
      "description": "",
      "name": "programs"
    },
    {
      "description": "",
      "name": "pushAnalysis"
    },
    {
      "description": "",
      "name": "relationshipTypes"
    },
    {
      "description": "",
      "name": "reportTables"
    },
    {
      "description": "",
      "name": "reports"
    },
    {
      "description": "",
      "name": "sections"
    },
    {
      "description": "",
      "name": "smsCommands"
    },
    {
      "description": "",
      "name": "sqlViews"
    },
    {
      "description": "",
      "name": "trackedEntityAttributes"
    },
    {
      "description": "Tracked entity instances have full CRUD (create, read, update, delete) support in the Web-API. Together with the API for enrollment most operations needed for working with tracked entity instances and programs are supported.",
      "name": "trackedEntityInstances",
      "x-status": "draft"
    },
    {
      "description": "",
      "name": "trackedEntityTypes"
    },
    {
      "description": "",
      "name": "userGroups"
    },
    {
      "description": "",
      "name": "userRoles"
    },
    {
      "description": "",
      "name": "users"
    },
    {
      "description": "",
      "name": "validationNotificationTemplates"
    },
    {
      "description": "",
      "name": "validationResults"
    },
    {
      "description": "",
      "name": "validationRuleGroups"
    },
    {
      "description": "",
      "name": "validationRules"
    }
  ],
  "x-draft-tagGroups": [
    {
      "name": "User Management",
      "tags": []
    },
    {
      "name": "Analytics",
      "tags": [
        "analyticsTableHooks",
        "charts"
      ]
    },
    {
      "name": "Metatdata-Global",
      "tags": [
        "constants",
        "colorSets",
        "attributes",
        "categories",
        "categoryCombos",
        "categoryOptions",
        "categoryOptionCombos",
        "categoryOptionGroups",
        "categoryOptionGroupSets"
      ]
    },
    {
      "name": "Tracker",
      "tags": [
        "trackedEntityInstances"
      ]
    }
  ]
}